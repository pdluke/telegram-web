{"version":3,"sources":["Components/ColumnMiddle/StickerPreview.js","Utils/Animatior.js","Assets/Icons/Smile.js","Notifications.js","Components/Player/PipPlayer.js","Assets/Icons/Saved.js","Components/Tile/OnlineStatus.js","Components/Tile/ChatTile.js","Components/Tile/ForwardTargetChat.js","Utils/Text.js","Utils/Language.js","Components/Popup/ForwardDialog.js","Assets/Icons/Document2.js","Assets/Icons/SharedMedia.js","Assets/Icons/Verified.js","Components/Tile/DialogTitle.js","Components/Tile/DialogStatus.js","Components/Tile/Chat.js","Assets/Icons/Back.js","Components/ColumnRight/ChatDetailsHeader.js","Components/ColumnMiddle/Notifications.js","Components/ColumnRight/NotificationsListItem.js","Components/ColumnRight/ChatDetails.js","Components/ColumnRight/GroupsInCommonHeader.js","Components/ColumnRight/GroupsInCommon.js","Components/Tile/SharedMedia/ContextMenu.js","Components/Tile/SharedMedia/SharedDocument.js","Assets/Icons/Search.js","Components/ColumnRight/SharedMedia/SharedMediaHeader.js","Components/ColumnRight/SharedMedia/SharedMediaBase.js","Components/ColumnRight/SharedMedia/SharedAudios.js","Components/ColumnRight/SharedMedia/SharedDocuments.js","Components/Tile/SharedMedia/SharedLink.js","Components/ColumnRight/SharedMedia/SharedLinks.js","Components/ColumnRight/SharedMediaHeader.js","Components/ColumnRight/SharedMedia.js","Components/Tile/SharedMedia/SharedPhoto.js","Components/ColumnRight/SharedMedia/SharedPhotos.js","Components/Tile/SharedMedia/SharedVideo.js","Components/ColumnRight/SharedMedia/SharedVideos.js","Components/Tile/SharedMedia/SharedVoiceNote.js","Components/ColumnRight/SharedMedia/SharedVoiceNotes.js","Components/ColumnRight/ChatInfo.js","Components/Tile/DialogContent.js","Assets/Icons/Pin.js","Stores/FilterStore.js","Components/Tile/DialogBadge.js","Assets/Icons/Error.js","Assets/Icons/Pending.js","Assets/Icons/Sent.js","Assets/Icons/Succeeded.js","Components/Message/Status.js","Components/Tile/DialogMeta.js","Assets/Icons/Archive.js","Assets/Icons/Unarchive.js","Assets/Icons/Pin2.js","Assets/Icons/Mute.js","Assets/Icons/Unmute.js","Assets/Icons/User.js","Assets/Icons/Group.js","Assets/Icons/Message.js","Assets/Icons/Unread.js","Components/Tile/Dialog.js","Actions/Message.js","Components/Tile/DialogPlaceholder.js","Components/Additional/VirtualizedList.js","Utils/DOM.js","Assets/Icons/Channel.js","Assets/Icons/Menu.js","Assets/Icons/Help.js","Assets/Icons/Settings.js","Workers/CacheManager.js","Stores/CacheStore.js","Components/ColumnLeft/MainMenuButton.js","Components/ColumnLeft/Search/SearchInput.js","Components/ColumnLeft/DialogsHeader.js","Components/ColumnLeft/Filters.js","Components/ColumnLeft/DialogsList.js","Components/ColumnLeft/Archive.js","Assets/Icons/Delete.js","Components/Tile/TopChat.js","Components/Tile/RecentlyFoundChat.js","Components/Tile/FoundPublicChat.js","Components/Tile/FoundMessage.js","Components/ColumnLeft/SectionHeader.js","Components/ColumnLeft/Search/Search.js","Components/ColumnLeft/SidebarPage.js","Assets/Icons/Folder.js","Assets/Icons/Edit.js","Assets/Icons/LogOut.js","Assets/Icons/More.js","Components/ColumnLeft/Settings/SettingsMenuButton.js","Assets/Icons/Data.js","Assets/Icons/Language.js","Components/ColumnLeft/Settings/Main.js","Assets/Icons/AddImage.js","Components/ColumnLeft/NewChatPhoto.js","Components/ColumnLeft/Settings/EditProfile.js","Assets/Icons/Add.js","Assets/Icons/NewPrivate.js","Assets/Icons/NonContacts.js","Assets/Icons/NewGroup.js","Assets/Icons/NewChannel.js","Assets/Icons/ReadChats.js","Assets/Icons/Bots.js","Assets/Icons/Done.js","Components/Tile/FilterChat.js","Components/Tile/FilterText.js","Components/Tile/Chip.js","Components/Tile/ChatChip.js","Components/ColumnLeft/Settings/EditFilterChats.js","Components/ColumnLeft/Settings/CreateFilter.js","Utils/Filter.js","Components/Tile/Filter.js","Components/Tile/RecommendedFilter.js","Components/ColumnLeft/Settings/Filters.js","Assets/Icons/Colorize.js","Components/Tile/Wallpaper.js","Components/ColumnLeft/Settings/ChatBackground.js","Components/ColumnLeft/ThemePicker.js","Components/ColumnLeft/Settings/General.js","Components/ColumnLeft/Language.js","Components/ColumnLeft/Settings/Notifications.js","Assets/Icons/Stop.js","Components/Tile/Session.js","Components/ColumnLeft/Settings/ActiveSessions.js","Assets/Icons/Unblock.js","Components/ColumnLeft/Settings/BlockedUsers.js","Assets/Icons/Device.js","Assets/Icons/RemoveMember.js","Components/ColumnLeft/Settings/PrivacySecurity.js","Components/ColumnLeft/Settings/Settings.js","Components/ColumnLeft/Contacts.js","Components/ColumnLeft/UpdatePanel.js","Components/ColumnLeft/NewChannel.js","Components/Tile/UserChip.js","Components/ColumnLeft/AddParticipants.js","Components/ColumnLeft/NewGroupParams.js","Components/ColumnLeft/NewGroup.js","Components/Popup/SidebarDialog.js","Utils/Archive.js","Components/ColumnLeft/Dialogs.js","Components/Popup/ChatInfoDialog.js","Assets/Icons/Send.js","Assets/Icons/Microphone.js","Assets/Icons/Attach.js","Components/ColumnMiddle/AttachButton.js","Utils/Component.js","Utils/Key.js","Components/Popup/CreatePollOption.js","Components/Popup/CreatePollDialog.js","Components/Popup/EditUrlDialog.js","Components/Tile/ReplyTile.js","Components/Message/Reply.js","Components/ColumnMiddle/InputBoxHeader.js","Components/Popup/PasteFilesDialog.js","Components/ColumnMiddle/RecordTimer.js","Components/Popup/EditMediaDialog.js","Utils/OutputTypingManager.js","Components/ColumnMiddle/InputBox.js","Components/ColumnMiddle/FooterCommand.js","Components/ColumnMiddle/NotificationsCommand.js","Components/ColumnMiddle/Footer.js","Components/Additional/NotificationTimer.js","Components/ColumnMiddle/MainMenuButton.js","Components/Tile/HeaderChatSubtitle.js","Components/Tile/HeaderChat.js","Components/ColumnMiddle/HeaderCommand.js","Components/ColumnMiddle/PinnedMessage.js","Components/ColumnMiddle/Header.js","Components/Player/VolumeButton.js","Components/Player/RepeatButton.js","Components/Player/ShuffleButton.js","Components/Player/PlaybackRateButton.js","Components/Player/Time.js","Components/Player/Playlist.js","Actions/InstantView.js","Components/Player/HeaderPlayer.js","Components/ColumnMiddle/ActionBar.js","Components/Message/DayMeta.js","Components/ColumnMiddle/FilesDropTarget.js","Components/Message/Forward.js","Components/Message/Meta.js","Assets/Icons/Copy.js","Assets/Icons/FrameCheck.js","Assets/Icons/RemoveCheck.js","Assets/Icons/Share.js","Components/Message/MessageMenu.js","Components/Message/UnreadSeparator.js","Components/Message/Media/WebPage.js","Components/Message/StubMessage.js","Components/Tile/EmptyTile.js","Components/Message/Message.js","Components/ColumnMiddle/Placeholder.js","Components/ColumnMiddle/ScrollDownButton.js","Components/Message/ServiceMessage.js","Components/ColumnMiddle/StickersHint.js","Components/ColumnMiddle/MessagesList.js","Components/Popup/ShareStickerSetButton.js","Components/Popup/StickerSetDialog.js","Components/ColumnMiddle/DialogDetails.js","Components/InstantView/Article.js","Assets/Icons/Left.js","Components/Viewer/MediaCaption.js","Components/Viewer/InstantViewMediaViewerContent.js","Components/Viewer/MediaViewerButton.js","Components/Viewer/MediaViewerFooterText.js","Components/Viewer/MediaViewerFooterButton.js","Components/Viewer/MediaViewerDownloadButton.js","Components/Viewer/InstantViewMediaViewer.js","Components/InstantView/InstantViewer.js","Components/Tile/MediaInfo.js","Components/Viewer/MediaViewerContent.js","Components/Viewer/MediaViewer.js","Components/Viewer/ProfileMediaViewerContent.js","Components/Tile/ProfileMediaInfo.js","Components/Viewer/ProfileMediaViewer.js","Components/MainPage.js"],"names":["StickerPreview","state","emoji","prevPropsSticker","loadStickerEmojis","sticker","id","TdLibController","send","then","result","props","setState","emojis","join","prevProps","prevState","snapshot","this","className","displaySize","STICKER_PREVIEW_DISPLAY_SIZE","source","StickerSourceEnum","PREVIEW","React","Component","Animator","duration","options","start","stopped","requestAnimationFrame","startInternal","timeStamp","startTime","endTime","draw","now","every","x","to","last","time","Math","min","p","val","outSine","forEach","from","func","stop","cancelAnimationFrame","n","sin","PI","createSvgIcon","d","withSnackbarNotifications","WrappedComponent","NotificationsWrapper","maxSnack","MAX_SNACK","displayName","getDisplayName","PipPlayer","onClientUpdateMediaShortcut","update","event","onKeyDown","key","code","altKey","ctrlKey","metaKey","shiftKey","video","handled","handleClose","handleSeek","currentTime","PLAYER_SEEK_STEP_SMALL","PLAYER_SEEK_STEP_BIG","handleVolume","volume","PLAYER_VOLUME_STEP","handleClick","handleMute","handleFullScreen","progress","Number","replace","handleSeekProgress","handlePlaybackRate","playbackRate","PLAYER_PLAYBACKRATE_STEP","stopPropagation","preventDefault","clamp","PLAYER_VOLUME_MIN","PLAYER_VOLUME_MAX","showMediaHint","round","rate","PLAYER_PLAYBACKRATE_MIN","PLAYER_PLAYBACKRATE_MAX","onFullScreenChange","fullscreen","document","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","getElementById","onWindowResize","player","oldLeft","parseInt","style","left","oldTop","top","normalizePosition","handleLoadedData","target","handleLoadedMetadata","buffered","waiting","handleCanPlay","play","pause","handlePlay","onPlay","hidden","clientUpdate","handlePause","onPause","handleEnded","onEnded","setCurrentTime","handleTimeUpdate","fileId","handleVolumeChange","onVolumeChange","handleProgress","handleWaiting","startStopPlayer","paused","handlePlayerMouseDown","pip","focus","mouseDownRoot","nativeEvent","which","offsetX","offsetY","onmousemove","handleMouseMove","onmouseup","handleMouseUp","windowDragging","clientX","clientY","handleMouseDown","dragging","draggingTime","handleChange","value","handleChangeCommitted","isFinite","handlePanelEnter","panelEnter","handlePanelLeave","handleMouseOver","clearTimeout","mouseOverTimeout","setTimeout","videoInfo","handleVolumeSliderChange","handleVolumeSliderChangeCommitted","activeElement","blur","prevVolume","root","exitFullscreen","requestFullscreen","getCurrentTime","file","FileStore","get","remote","unique_id","PlayerStore","clearCurrentTime","handlePanelDoubleClick","handleClickRoot","handleDoubleClick","handleFocus","KeyboardManager","add","keyboardHandler","handleBlur","remove","KeyboardHandler","connectPlayer","window","addEventListener","on","disconnectPlayer","removeEventListener","off","text","pipPlayer","pipParams","container","onloadedmetadata","onloadeddata","oncanplay","onplay","onpause","onended","ontimeupdate","onvolumechange","onprogress","onwaiting","innerHTML","appendChild","checkGlue","playerWidth","clientWidth","playerHeight","clientHeight","documentWidth","documentElement","documentHeight","glueLeft","glueRight","PIP_PLAYER_BORDER_PRECISION","glueTop","glueBottom","element","method","mozRequestFullScreen","webkitRequestFullscreen","call","mozCancelFullScreen","webkitExitFullscreen","bufferedTime","Player","getBufferedTime","bufferedValue","timeString","getDurationString","floor","durationString","fullscreenEnabled","mozFullScreenEnabled","webkitFullscreenEnabled","classNames","onMouseDown","onMouseMove","onClick","onDoubleClick","onFocus","onBlur","tabIndex","Hint","e","Close","onMouseEnter","onMouseLeave","width","Slider","max","step","classes","rail","track","thumb","active","onChange","onChangeCommitted","Pause","getVolumeIcon","disabled","FullScreen","Progress","prevVideo","OnlineStatus","onUpdateUserStatus","userId","user_id","user","UserStore","online","isUserOnline","getChatUserId","chatId","size","borderSize","height","padding","defaultProps","ChatTile","onFastUpdatingComplete","forceUpdate","onClientUpdateChatBlob","loaded","chat","ChatStore","photo","src","getSrc","small","onUpdateChatPhoto","chat_id","store","getStore","loadChatContent","onUpdateChatTitle","t","letters","getChatLetters","handleSelect","onSelect","handleLoad","nextProps","nextState","showOnline","showSavedMessages","dialog","big","isDeletedPrivateChat","pointer","DeletedAccount","fontSize","isMeChat","tileLoaded","typeId","getChatTypeId","tileColor","abs","onLoad","draggable","alt","isPrivateChat","prevChatId","withTranslation","ForwardTargetChat","selected","shortTitle","getChatShortTitle","copy","a","navigator","clipboard","writeText","console","error","copyOld","successful","createElement","contentEditable","readOnly","all","position","clip","whiteSpace","webkitUserSelect","MozUserSelect","msUserSelect","userSelect","body","select","execCommand","Error","removeChild","cyrillicInput","isCyrillicPackId","packId","getCyrillicInput","input","length","currentPackId","OptionStore","suggestedPackId","Map","output","i","has","latinInput","getLatinInput","ForwardDialog","loadContent","getPublicMessageLink","promises","getChatsPromise","offset_order","offset_chat_id","limit","push","savedMessagesPromise","getMyId","force","Promise","map","catch","chats","savedMessages","chatIds","chat_ids","loadChatsContent","messageIds","isSupergroup","getChatUsername","message_id","for_album","publicMessageLink","forward","handleCopyLink","link","handleScheduledAction","message","enqueueSnackbar","closeSnackbar","snackKey","autoHideDuration","NOTIFICATION_AUTO_HIDE_DURATION_MS","preventDuplicate","action","IconButton","aria-label","color","getForwardPhotoSize","MessageStore","can_be_forwarded","content","sizes","handleSend","clearSelection","inputMessageContent","getInnerText","messageRef","current","targetChats","targetChatId","caption","entities","reply_to_message_id","disable_notifications","from_background","reply_markup","input_message_content","disable_web_page_preview","clear_draft","thumbnail","added_sticker_file_ids","ttl","from_chat_id","message_ids","as_album","handleChangeSelection","delete","set","innerText","handleSearchKeyDown","keyCode","handleSearchKeyUp","searchRef","trim","searchText","searchResults","globalSearchResults","latinText","cyrillicText","chatsSource","concat","filter","canSendMessages","hasSearchText","query","handleSearchPaste","plainText","clipboardData","getData","handleMessageKeyUp","handleMessagePaste","getChatTitle","toLocaleLowerCase","indexOf","toLowerCase","setSearchFocus","createRef","searchResultsMap","filteredResults","foundChats","open","manager","modalManager","transitionDuration","onClose","aria-labelledby","aria-describedby","ref","suppressContentEditableWarning","placeholder","onKeyUp","onPaste","DialogActions","Button","autoFocus","enhance","compose","withSnackbar","DialogTitle","isVerified","isChatVerified","title","DialogStatus","type","updateSubtitle","fullInfo","BasicGroupStore","getFullInfo","basic_group_id","members","find","subtitle","getChatSubtitleWithoutTyping","isAccent","isAccentChatSubtitleWithoutTyping","onUpdateUserFullInfo","onUpdateBasicGroupFullInfo","onUpdateSupergroupFullInfo","supergroup_id","onUpdateBasicGroup","basic_group","onUpdateSupergroup","supergroup","SupergroupStore","externalSubtitle","Chat","onTileSelect","showStatus","showTitle","isSavedMessages","ChatDetailsHeader","backButton","info","isChannelChat","Notifications","onUpdateChatNotificationSettings","isMuted","isChatMuted","onUpdateScopeNotificationSettings","scope","handleSetChatNotifications","debouncedSetChatNotificationSettings","setChatNotificationSettings","toggleChatNotificationSettings","debounce","NOTIFICATION_DEBOUNCE_DELAY_MS","NotificationStore","NotificationsListItem","ListItem","button","ListItemIcon","ListItemText","primary","Typography","variant","noWrap","ListItemSecondaryAction","Switch","checked","ChatDetails","loadChatContents","popup","getGroupChatMembers","loadUsersContent","getChatFullInfo","handleUsernameHint","username","telegramUrlOption","handlePhoneHint","phoneNumber","getChatPhoneNumber","formatPhoneNumber","handleHeaderClick","chatDetailsListRef","scrollTop","handleOpenViewer","setProfileMediaViewerContent","handleOpenChat","openChat","handleOpenUser","openUser","getContentHeight","list","scrollHeight","offsetHeight","theme","counters","migratedCounters","onOpenGroupInCommon","onOpenSharedAudios","onOpenSharedDocuments","onOpenSharedLinks","onOpenSharedPhotos","onOpenSharedMedia","onOpenSharedVideos","onOpenSharedVoiceNotes","el","photoCount","videoCount","documentCount","audioCount","urlCount","voiceAndVideoNoteCount","groupInCommonCount","group_in_common_count","bio","getChatBio","isGroup","isGroupChat","isMe","users","member","items","sort","y","getUserStatusOrder","getUrlMentionHashtagEntities","bioText","bioEntities","getFormattedText","List","alignItems","wordWrap","Divider","toUpperCase","paddingLeft","withSaveRef","withRestoreRef","GroupsInCommonHeader","GroupsInCommon","minHeight","ContextMenu","handleOpenMessage","messageId","handleForward","forwardMessages","handleDelete","deleteMessages","anchorPosition","showOpenMessage","can_be_deleted_only_for_self","can_be_deleted_for_all_users","Popover","anchorReference","anchorOrigin","vertical","horizontal","transformOrigin","MenuList","MenuItem","SharedDocument","contextMenu","handleOpenContextMenu","handleCloseContextMenu","onContextMenu","getMedia","openMedia","SharedMediaHeader","handleSearch","searchInputRef","onSearch","onCloseSearch","openSearch","handleKeyDown","handleKeyUp","handlePaste","ANIMATION_DURATION_200MS","Boolean","SpeedDialIcon","icon","openIcon","SharedMediaBase","TypeError","onUpdateMessageContent","migratedChatId","migratedItems","new_content","old_content","between","index","findIndex","isValidContent","insertByOrder","messageComparatorDesc","slice","onUpdateNewMessage","isValidMessage","loadMessageContents","onUpdateDeleteMessages","callback","SHARED_MESSAGE_SLICE_LIMIT","onLoadNext","params","loading","completed","migrateCompleted","getSearchFilter","loadIncomplete","fromMessageId","sender_user_id","from_message_id","offset","finally","messages","total_count","incompleteResults","setItems","onLoadMigratedNext","handleScroll","listRef","SCROLL_PRECISION","handleSearchScroll","searchListRef","searchParams","onSearchMigratedNext","onSearchNext","searchItems","searchMigratedItems","handleCloseSearch","getItemTemplate","searchMessages","getHeader","hasSearch","getListClassName","onScroll","getSearchListClassName","SharedAudios","propTypes","PropTypes","number","isRequired","bool","SharedDocuments","SharedLink","url","startsWith","decodedUrl","decodeURI","hostname","URL","split","domain","punycode","ToUnicode","webPage","description","display_url","getTitleFromUrl","SafeLink","isValidEntityType","entityText","substring","mail","typeUrl","charCodeAt","getFirstLetter","Photo","showProgress","SharedLinks","web_page","close","SharedMedia","Tabs","indicatorColor","textColor","scrollable","scrollButtons","fullWidth","Tab","label","minWidth","SharedPhoto","onClientUpdatePhotoBlob","photoSize","thumbSize","thumbnailSize","getSize","minithumbnail","miniSrc","data","thumbSrc","isBlurredThumbnail","backgroundImage","backgroundSize","PHOTO_SIZE","PHOTO_THUMBNAIL_SIZE","SharedPhotos","SharedVideo","onClientUpdateVideoThumbnailBlob","isBlurred","SharedVideos","SharedVoiceNote","i18n","voiceNote","date","dateString","Date","toLocaleDateString","language","day","month","year","hour","minute","hour12","voice","VoiceNoteTile","MessageAuthor","AudioAction","MediaStatus","SharedVoiceNotes","voice_note","ChatInfo","onClientUpdatePageWidth","isSmallWidth","handleCloseChatDetails","onClientUpdateChatId","nextChatId","sharedAudios","sharedDocuments","sharedLinks","sharedPhotos","sharedVideos","sharedVoiceNotes","userChatId","openGroupInCommon","openSharedAudios","openSharedDocuments","openSharedLinks","openSharedMedia","openSharedPhotos","openSharedVideos","openSharedVoiceNotes","getCounters","loadChatCounters","loadMigratedCounters","getPhotoFromChat","loadProfileMediaViewerContent","getChatCounters","setCounters","getSupergroupId","upgraded_from_basic_group_id","handleOpenSharedMedia","handleCloseSharedMedia","handleOpenGroupInCommon","handleCloseGroupsInCommon","changeChatDetailsVisibility","handleOpenSharedDocuments","handleCloseSharedDocuments","handleOpenSharedAudios","handleCloseSharedAudios","handleOpenSharedVoiceNotes","handleCloseSharedVoiceNotes","handleOpenSharedLinks","handleCloseSharedLinks","handleOpenSharedPhotos","handleCloseSharedPhotos","handleOpenSharedVideos","handleCloseSharedVideos","detailsRef","AppStore","dialogChatId","currentChatId","DialogContent","onClientUpdateClearHistory","clearHistory","inProgress","onUpdateUser","last_message","onUpdate","contentControl","typingString","getChatTypingString","draft","getChatDraft","showChatDraft","getLastMessageContent","senderName","getLastMessageSenderName","strokeWidth","fill","fillRule","x1","y1","x2","y2","strokeLinecap","strokeLinejoin","reset","chatList","filters","authorization_state","chat_filters","emit","onClientUpdate","addTdLibListener","removeTdLibListener","EventEmitter","DialogBadge","unread_count","isPinned","isChatPinned","showUnreadMentionCount","showChatUnreadMentionCount","showUnreadCount","showChatUnreadCount","Pin","stroke","transform","cx","cy","r","Status","onUpdateMessageSend","old_message_id","sending_state","newMessageId","sendingState","onUpdateChatReadOutbox","last_read_outbox_message_id","unread","viewBox","Pending","Sent","Succeeded","prevMessageId","isMessageUnread","DialogMeta","getLastMessageDate","is_outgoing","Dialog","previousChatId","handleContextMenu","contextMenuId","canPinChats","canTogglePin","canToggleArchive","canAddChatToList","pinnedSumMaxOption","isChatArchived","isSecret","isChatSecret","chat_list","pinnedSum","reduce","handlePin","toggleChatIsPinned","handleArchive","addChatToList","getViewInfoTitle","is_channel","handleViewInfo","handleRead","isChatUnread","is_marked_as_unread","forceRead","force_read","viewMessages","toggleChatIsMarkedAsUnread","isLastPinned","ApplicationStore","isSelected","getChatId","isUnread","isArchived","Unarchive","Unmute","Mute","Unread","DialogPlaceholder","titleWidth","contentWidth","cos","right","VirtualizedList","setViewportHeight","viewportHeight","parseFloat","getComputedStyle","getPropertyValue","renderIds","getRenderIds","setScrollPosition","rowHeight","isVisibleItem","overScanCount","renderIdsList","nextContext","item","renderItem","findLastTextNode","nodeType","Node","TEXT_NODE","childNodes","textNode","focusInput","range","createRange","setStart","collapse","selection","getSelection","removeAllRanges","addRange","behavior","scrollTo","localStorage","getItem","JSON","parse","setItem","stringify","removeItem","clear","archiveChatIds","meChat","cacheContacts","contacts","cache","CacheManager","saveInternal","load","files","user_ids","parseCache","archiveChats","basicGroups","supergroups","setDataUrl","OutputTypingManager","updateChatChatLists","option","fileMap","userMap","basicGroupMap","supergroupMap","blob","getBlob","basicGroup","values","entries","getCache","save","resolve","reject","fileReader","FileReader","readAsDataURL","onload","onerror","results","deleteDataUrl","MainMenuButton","onUpdateAuthorizationState","authorizationState","handleMenuOpen","isAuthorizationReady","anchorEl","currentTarget","handleMenuClose","handleCheckUpdates","handleNewChannel","handleNewGroup","handleContacts","handleArchived","openArchive","handleSaved","CacheStore","handleSettings","handleHelp","searchChat","getAuthorizationState","timeout","showClose","mainMenuControl","Menu","getContentAnchorEl","disableAutoFocusItem","disableRestoreFocus","Channel","Saved","Help","closeIcon","aria-owns","aria-haspopup","SearchInput","stopImmediatePropagation","onBackspace","handleInput","inputRef","hint","showIcon","onInput","DialogsHeader","handleSearchTextChange","onSearchTextChange","searchInput","showBack","Filters","hasObserver","onClientUpdateLanguageChange","setSelection","onClientUpdateCacheLoaded","cachedFilters","transition","scroll","filtersRef","main","filterRef","scrollWidth","chat_filter_id","filterSelection","filterSelectionRef","transitionStyle","cssText","animator","scrollLeft","offsetWidth","onUpdateChatFilters","FilterStore","handleMainClick","onClientUpdateChatList","handleFilterClick","handleWheel","deltaY","throttle","observeResize","LocalizationStore","unobserveResize","observer","ResizeObserver","observe","resizeObserver","unobserve","onWheel","DialogListItem","DialogsList","loadFirstSlice","onClientUpdateLeaveChat","hiddenChats","initDB","saveCache","onSaveCache","onUpdateChatPosition","chatListEquals","onUpdateChatOrder","hasChatList","order","getChatOrder","currentIndex","chatOrder","newChatIds","setChatId","reorderChats","getListRef","SCROLL_CHATS_PRECISION","onLoadPrev","fistSliceLoaded","showArchive","archiveTitle","cacheItems","orderedChatIds","b","orderCompare","isDifferentOrder","CHAT_SLICE_LIMIT","offsetOrder","offsetChatId","log","shift","replaceChats","appendChats","newChats","Array","oldChatIds","Archive","innerListRef","TopChat","onDelete","Delete","PureComponent","RecentlyFoundChat","FoundPublicChat","selectedChatId","FoundMessage","nextMessageId","getMessageId","previousMessageId","chatSearch","selectedMessageId","getMessageDate","getMessageSenderName","senderFullName","getMessageSenderFullName","getContent","tile","UserTile","SectionHeader","command","multiline","children","Search","modals","isComposing","concatSearchResults","arr","j","sessionId","localPromise","latinLocalPromise","cyrillicLocalPromise","local","savedMessagesStrings","some","includes","splice","recentlyFound","trimmedText","substr","USERNAME_LENGTH_MIN","globalPromises","globalPromise","latinTrimmedText","globalLatinPromise","globalResults","global","offset_date","offset_message_id","linkMessage","messageLinkInfo","keys","topPromise","category","recentlyFoundPromise","handleClearRecentlyFound","handleSelectMessage","addToRecent","keepOpen","onSelectMessage","onLoadPrevious","getOffset","concatMessages","filterDuplicateMessages","handleTopChatsScroll","handleDeleteRecentlyFoundChat","handleDeleteTopChat","searchOrLoadContent","topChats","recentlyFoundChats","localChats","globalChatsMap","globalChats","globalLinkChat","globalMessagesMap","globalMessages","globalLinkMessage","count","messagesCaption","SidebarPage","Slide","direction","in","mountOnEnter","unmountOnExit","cloneElement","SettingsMenuButton","handleLogOut","handleDone","logOut","More","LogOut","DialogContentText","Main","onEditProfile","onGeneral","onNotifications","onPrivacySecurity","onLanguage","onFilters","Edit","Data","packageJson","version","NewChatPhoto","handleCancel","cropper","cropperRef","getCroppedCanvas","toBlob","blobURL","createObjectURL","onChoose","handleAttach","attachPhotoRef","click","handleAttachComplete","readImageSize","fileURL","defaultURL","getFitSize","fitWidth","fitHeight","AddImage","multiple","accept","margin","aspectRatio","viewMode","guides","Check","EditProfile","handleUsernameChange","newUsername","usernameRef","usernameCheck","newUsername2","handleChoosePhoto","name","firstNameRef","lastNameRef","bioRef","userFullInfo","firstName","first_name","lastName","last_name","setName","setBio","setUsername","newFirstName","newLastName","newBio","hasError","usernameLabel","getBoldItalicEntities","formattedText","TextField","defaultValue","FilterChat","role","undefined","getChatType","Radio","FilterText","Chip","divRef","offsetLeft","offsetTop","div","ChatChip","EditFilterChats","handleChatChange","search","mode","handleBackspace","focusedItem","include_contacts","include_non_contacts","include_bots","include_groups","include_channels","included_chat_ids","lastItem","exclude_muted","exclude_read","exclude_archived","excluded_chat_ids","wrapPanelRef","itemsRef","prevFilter","include","prevItems","isDeleting","wrapPanel","prevHeight","prevOffsetHeight","prevCSSText","prevScrollTop","prevMap","panel","animatePanel","currentHeight","collapsed","scrollIntoView","prevOffsets","doubleTransform","currentOffset","prevOffset","setStyleCSSText","NonContacts","Bots","handleSearchClose","zIndex","scrollRef","marginTop","Lottie","lazy","CreateFilter","loadAnimationData","closeData","requests","fetch","json","onDone","editFilter","titleRef","isFilterValid","handleAnimationClick","lottie","lottieRef","anim","isPaused","goToAndPlay","handleDeleteIncludeContacts","newEditFilter","handleDeleteIncludeNonContacts","handleDeleteIncludeGroups","handleDeleteIncludeChannels","handleDeleteIncludeBots","handleDeleteIncludedChat","handleDeleteExcludeMuted","handleDeleteExcludeRead","handleDeleteExcludeArchived","handleDeleteExcludedChat","handleOpenFilterChats","openFilterChats","handleCloseFilterChats","setDefaultFilterTitle","included","excluded","handleTitleChange","FILTER_TITLE_MAX_LENGTH","prevFilterId","shook","Done","Suspense","fallback","autoplay","loop","animationData","renderer","rendererSettings","preserveAspectRatio","clearCanvas","progressiveLoad","hideOnTransparent","Add","filterId","Filter","handleOpenDialog","handleCloseDialog","handleDeleteCancel","handleDeleteConfirm","onEdit","getFilterSubtitle","secondary","RecommendedFilter","handleAdd","recommendedFilter","disableElevation","loadData","handleCreateFilter","FILTER_COUNT_MAX","openFilter","icon_name","pinned_chat_ids","handleCloseFilter","handleEditFilter","recommendedFilters","filtersMap","filterInfo","hasFilters","hasRecommendedFilters","startIcon","Wallpaper","onClientUpdateDocumentThumbnailBlob","wallpaper","backgroundPosition","FileProgress","cancelButton","ChatBackground","selectedId","loadBackgroundContent","backgrounds","loadBackgroundsContent","wallpapers","ThemePicker","getColor","handleAccentChange","getColorString","red","orange","amber","green","indigo","deepPurple","palette","FormControl","component","FormLabel","focused","RadioGroup","FormControlLabel","control","withTheme","General","handleAppearance","themePickerRef","for_dark_theme","openChatBackground","closeChatBackground","Colorize","Language","languages","language_packs","inputProps","native_name","handleMuteFor","property","settings","newSettings","mute_for","handleShowPreview","show_preview","handleContactJoined","contactJoined","contactJoinedOption","privateChatsSettings","groupChatsSettings","channelChatsSettings","setScopeNotificationSettings","setContactJoinedOption","oldSettings","oldMuteFor","oldShowPreview","notification_settings","Checkbox","isEnabled","showPreview","Session","session","is_current","handleTerminate","onTerminate","application_name","application_version","device_model","platform","system_version","ip","region","country","last_active_date","showDate","Stop","ActiveSessions","openAll","handleTerminateAllOther","handleCloseConfirmation","handleDoneConfirmation","sessions","session_id","handleCloseAllConfirmation","handleDoneAllConfirmation","other","disableRipple","primaryTypographyProps","BlockedUser","memo","onUnblock","useState","setContextMenu","setTop","setLeft","useTranslation","Unblock","BlockedUsers","handleUnblock","PrivacySecurity","openBlockedUsers","openActiveSessions","user_full_info","is_blocked","closeActiveSessions","closeBlockedUsers","sessionsCount","usersCount","RemoveMember","Device","Settings","openEditProfile","closeEditProfile","openGeneral","closeGeneral","openNotifications","closeNotifications","openPrivacySecurity","closePrivacySecurity","openLanguage","closeLanguage","openFilters","closeFilters","handleCloseSettings","setFullInfo","UserListItem","Contacts","handleDebounceScroll","handleThrottleScroll","loadRenderIdsContent","currentItems","getListRenderIds","userIds","getUserFullName","localeCompare","UpdatePanel","onClientUpdateNewContentAvailable","newContentAvailable","handleUpdate","location","reload","Download","NewChannel","defaultPhoto","defaultPhotoFile","descriptionRef","defaultPhotoURL","file_type","priority","THUMBNAIL_PRIORITY","UserChip","getUserShortName","AddParticipants","newArray","selectedItems","array","newMap","newFocusedItem","animateItems","selectedItemsMap","publicItems","publicChats","NewGroupParams","onChoosePhoto","itemsCaption","NewGroup","openParams","addParticipantsRef","getUserIds","newGroupParamsRef","getTitle","handleCloseParams","SidebarDialog","onClientUpdateSearchChat","searchChatId","handleDialogEnter","header","headerRef","setInitQuery","onClientUpdateSettings","openSettings","meChatId","onClientUpdateContacts","openContacts","onClientUpdateNewGroup","openNewGroup","onClientUpdateNewChannel","openNewChannel","visible","paper","onEnter","getArchiveTitle","archive","chatsOrder","defaultTimeout","enter","enteringScreen","exit","leavingScreen","Dialogs","prevShowArchive","mainCurrent","dialogListRef","archiveCurrent","archiveListRef","archiveList","listCurrent","onClientUpdateArchive","onClientUpdateThemeChange","dialogsHeaderRef","scrollToTop","handleSaveCache","handleCloseArchive","handleCloseContacts","handleCloseNewGroup","handleCloseNewChannel","mainItems","archiveItems","loadCache","mainChatIds","mainCacheItems","archiveCacheItems","CSSTransition","ChatInfoDialog","onClientUpdateMediaViewerContent","mediaViewerContent","onClientUpdateDialogChatId","AttachButton","handleMenuClick","handleAttachPhoto","onAttachPhoto","ANIMATION_DURATION_300MS","handleAttachDocument","onAttachDocument","handleAttachPoll","onAttachPoll","Attach","canSendMediaMessages","canSendPolls","focusNode","node","toEnd","lastNode","utils","special","navigational","isSpecial","isNavigational","CreatePollOption","getText","optionTextRef","dataset","maxLength","remainLength","hasSelection","toString","onFocusNext","isCollapsed","firstChild","anchorNode","anchorOffset","onFocusPrev","lastChild","selectionString","pasteText","POLL_OPTION_MAX_LENGTH","is_chosen","data-length","POLL_OPTION_LENGTH","data-max-length","POLL_OPTION_HINT_LENGTH","align","CreatePollDialog","handleClientUpdateNewPoll","poll","PollStore","confirm","POLL_QUESTION_MAX_LENGTH","handleClientUpdatePollQuestion","questionRef","handleClientUpdatePoll","handleClientUpdateNewPollOption","optionsRefMap","handleFocusNextOption","question","handleAddOption","POLL_OPTIONS_MAX_COUNT","handleDeleteOption","backspace","handleDeleteByBackspace","prevIndex","deleteOption","prevNode","handleFocusPrevOption","nextIndex","nextNode","getHint","addCount","hasPollData","handleConfirmationDone","onSend","inputMessagePoll","getInputMessagePoll","handleConfirmationClose","handleChangeAnonymous","handleChangeAllowMultipleAnswers","handleChangeType","handleAllowMultipleAnswersClick","is_anonymous","allowMultipleAnswers","allow_multiple_answers","allowMultipleAnswersDisabled","quizPoll","canAddOption","flexGrow","POLL_QUESTION_LENGTH","POLL_QUESTION_HINT_LENGTH","disableTypography","FormGroup","background","isValidPoll","EditUrlDialog","handleTextKeyDown","urlInputRef","handleUrlKeyDown","handleTextChange","handleUrlChange","defaultText","defaultUrl","textError","textInputRef","validateUrl","urlError","onCancel","textRef","urlRef","display","flexDirection","autoComplete","prevOpen","ReplyTile","THUMBNAIL_BLURRED_SIZE_90","isVideoNote","hasVideoNote","hasSrc","Reply","onGetMessageResult","handleOpen","isDeletedMessage","getReplyPhotoSize","getReplyMinithumbnail","InputBoxHeader","editMessageId","editMessage","replyMessage","PasteFilesDialog","onConfirm","RecordTimer","onClientUpdateRecordStart","timer","setInterval","diff","onClientUpdateRecordStop","onClientUpdateRecordError","msStr","s","ms","secs","mins","hrs","normalizeS","normalizeM","msToTime","EditMediaDialog","handleSelectionChange","captionRef","saveSelection","handleEnter","newItem","setFormattedText","editFile","editMedia","sendAsPhoto","getEntities","editMessageAction","media","audio","performer","repeat","handleBold","handleItalic","handleMono","handleUrl","handleClear","handleUnderline","handleStrikeThrough","openEditUrlDialog","startContainer","endContainer","parentElement","nodeName","href","openEditUrl","closeEditUrlDialog","restoreSelection","clearInnerHtml","handleCancelEditUrl","handleDoneEditUrl","parentNode","textContent","setEnd","handleEditMedia","editMediaRef","handleEditMediaComplete","getMediaPhotoFromFile","handleSendAsPhoto","nodes","getNodes","rangeCount","getRangeAt","isEditing","isPhoto","doneLabel","lastAction","setSeconds","getSeconds","TYPING_OUTPUT_INTERVAL_S","lastTypingDate","EmojiPickerButton","InputBox","selectionChangeListener","newMessageRef","onClientUpdateInputShake","onClientUpdateSendFiles","handleSendFiles","is_permanent","onClientUpdateEditMessage","recordingTime","saveDraftAndSelection","restoreDraftAndSelection","openEditMedia","isEditedMedia","setEditMessage","onClientUpdateFocusWindow","saveDraft","onUpdateChatDraftMessage","loadDraft","onClientUpdateAnimationSend","animation","thumbnailWidth","thumbnailHeight","sendMessage","onClientUpdateStickerSend","onClientUpdateReply","replyToMessageId","setInputFocus","beforeEditText","getChatDraftReplyToMessageId","handleCancelRecord","setDraft","setChatDraftMessage","chatDraftMessage","draftMessage","draft_message","getDraftMessage","input_message_text","draftEquals","handleSubmit","startRecord","recordingReady","VOICENOTE_MIN_RECORD_DURATION","handleStopRecord","handleRecord","inputContent","editedMessage","editMessageText","editMessageCaption","handleAttachPhotoComplete","newFile","getNewItem","handleSendPhoto","attachDocumentRef","handleAttachDocumentComplete","handleSendDocument","charCode","cachedMessage","handleSendingMessage","uploadFile","handleSendPoll","handleSendAudio","handleSendVoiceNote","originalEvent","kind","getAsFile","handlePasteConfirm","handlePasteCancel","handleUpdateDraftConfirm","newDraft","handleUpdateDraftCancel","updatePhotoBlob","clearDraft","invokeScheduledAction","alert","handleEmojiSelect","native","setTyping","setHints","setRecordingReadyState","lastTextNode","handleCancelEditMedia","closeEditMediaDialog","editMessageMedia","handleSendMedia","cancelled","recorder","stream","getAudioTracks","mediaDevices","getUserMedia","recordPermissionDenied","constraints","channelCount","sampleRate","applyConstraints","mimeType","audioBitsPerSecond","workerOptions","encoderWorkerFactory","Worker","process","OggOpusEncoderWasmPath","MediaRecorder","chunks","ondataavailable","onstart","onstop","Blob","audioURL","Audio","trunc","waveform","handleClosePermission","sendFile","AnimationStore","StickerStore","sendAsFile","getMediaDocumentFromFile","performance","match","emojiRegex","exec","timestamp","stickers","cancel","isMediaEditing","isTextMessage","Microphone","Send","FooterCommand","onCommand","NotificationsCommand","Footer","hasBasicGroupId","hasSupergroupId","handleJoin","handleDeleteAndExit","remove_from_chat_list","status","is_member","permissions","can_send_messages","NotificationTimer","handleTimer","seconds","expire","timerId","clearInterval","onTimeout","setMilliseconds","getMilliseconds","toFixed","CircularProgress","LeaveChatDialog","getDeleteDialogText","EnhancedLeaveChatDialog","ClearHistoryDialog","EnhancedClearHistoryDialog","handleButtonClick","handleChatInfo","openChatDetails","handleClearHistory","openClearHistory","handleClearHistoryContinue","request","handleLeave","openDelete","handleLeaveContinue","getLeaveChatNotification","isCreator","clientUpdateType","persist","getLeaveChatTitle","handleUnpin","canClearHistory","deleteChat","canDeleteChat","leaveChatTitle","unpinMessage","canUnpinMessage","HeaderChatSubtitle","onUpdateChatOnlineMemberCount","onUpdateUserChatAction","getChatSubtitle","isAccentSubtitle","isAccentChatSubtitle","HeaderChat","HeaderCommand","canBeDeleted","canBeForwarded","PinnedMessage","onClientUpdateUnpin","onClientUpdateDialogsReady","onClientUpdateSetChatClientData","clientData","onUpdateChatPinnedMessage","pinned_message_id","deletedMessage","canPinMessages","getClientData","Object","assign","unpinned_message_id","prevPropsChatId","Header","onClientUpdateDeleteMessages","canBeDeletedForAllUsers","openDeleteDialog","revoke","handleRevokeChange","handleCloseDelete","handleDeleteContinue","onClientUpdateMessageSelected","selectionCount","onUpdateConnectionState","connectionState","handleSearchChat","localize","str","getConnectionState","showProgressAnimation","HeaderProgress","VolumeButton","prevValue","buttonOver","popupOver","onClientUpdateMediaVolume","handlePopoverOpen","handlePopoverClose","handleMouseEnter","openPopover","handleMouseLeave","handlePopupMouseLeave","handleVoiceClick","nextValue","PLAYER_VOLUME_NORMAL","handleDragStart","handleDragEnd","visibility","onDragStart","onDragEnd","orientation","RepeatButton","onClientUpdateMediaRepeat","handleRepeat","nextRepeat","RepeatEnum","NONE","REPEAT","REPEAT_ONE","getIcon","ShuffleButton","onClientUpdateMediaShuffle","shuffle","handleShuffle","PlaybackRateButton","onClientUpdateMediaPlaybackRate","onClientUpdateMediaAudioPlaybackRate","audioPlaybackRate","nextRate","PLAYER_PLAYBACKRATE_NORMAL","PLAYER_PLAYBACKRATE_FAST","Time","onClientUpdateMediaTime","reverse","currentTimeString","handleReverse","Playlist","scrollToActive","playlist","block","playlistItemEquals","itemRefMap","ReactDOM","onClientUpdateMediaTitleMouseOver","over","playlistMouseOver","tryOpen","tryClose","onClientUpdateMediaActive","onClientUpdateMediaPlaylistLoading","isCurrentSource","onClientUpdateMediaPlaylist","openTimeout","titleMouseOver","instantView","openInstantViewMedia","iv","getMediaFunc","getPageBlock","ivCache","urlCache","openInstantView","force_full","loadInstantViewContent","setInstantViewContent","newWindow","opener","HeaderPlayer","handleSeekForward","videoRef","handleSeekBackward","handleSeekTo","seekTime","fadeOutVolume","pausedForRecord","fadeInVolume","hasAudio","useAudioPlaybackRate","onClientUpdateMediaSeek","currentValue","playingMediaViewer","onClientUpdateMediaViewerEnded","onClientUpdateMediaViewerPause","onClientUpdateMediaViewerPlay","startPlayingFile","prevSrc","getMediaSrc","getMediaMimeType","playing","srcSource","onClientUpdateMediaBlob","startPlaying","video_note","supportsStreaming","onClientUpdateMediaClose","handlePrev","handleNext","moveNext","handleVideoEnded","hasVoice","muted","videoWidth","videoHeight","captureStream","mozCaptureStream","handleVideoPlay","handleVideoPause","hasPrev","hasNext","handleTitleMouseEnter","handleTitleMouseLeave","handleTitleClick","openMediaInstantView","getMessageAudio","addMediaSessionHandlers","removeMediaSessionHandlers","mediaSession","setActionHandler","currentVolume","volumeInterval","useAudioRate","getMediaTitle","showPlaybackRate","getDateHint","getDate","showRepeat","showShuffle","autoPlay","controls","disablePictureInPicture","onLoadedMetadata","onCanPlay","onTimeUpdate","onProgress","PlayArrow","ActionBar","onUpdateChatActionBar","handleReportSpam","reason","handleReportUnrelatedLocation","handleSharePhoneNumber","handleAddContact","phone_number","contact","vcard","share_phone_number","handleBlockUser","action_bar","DayMeta","onClientUpdateLanguage","setMonth","getMonth","FilesDropTarget","onClientUpdateDragging","dragParams","handleDragEnter","handleDrop","dataTransfer","handleDragLeave","onDragEnter","onDragLeave","onDrop","Forward","arrowRef","handleArrowRef","openForward","forwardInfo","origin","getForwardTitle","isForwardOriginHidden","Meta","onUpdateMessageEdited","editDate","edit_date","onUpdateMessageViews","views","onDateClick","isOutgoing","dateStr","dateHintStr","viewsStr","getViews","points","MessageMenu","confirmStopPoll","handleConfirmStopPoll","handleCloseConfirm","handleStopPoll","stopPoll","handleUnvote","cancelPollAnswer","copyLink","handleCopyPublicMessageLink","httpUrl","handleReply","isMessagePinned","disableNotification","disable_notification","pinMessage","handleEdit","selectMessage","canBeUnvoted","canMessageBeUnvoted","canBeClosed","canMessageBeClosed","canBeReplied","canBePinned","canMessageBeForwarded","canMessageBeDeleted","canBeEdited","canMessageBeEdited","recording","canBeSelected","hasSelectedMessage","canCopyLink","canCopyPublicMessageLink","isPublicSupergroup","Copy","Share","FrameCheck","RemoveCheck","WebPage","displaySmallSize","displayExtraSmallSize","site_name","Sticker","MESSAGE","VoiceNote","VideoNote","videoNote","Document","Animation","stretch","Video","smallPhoto","PHOTO_DISPLAY_SIZE","extraSmallPhoto","float","marginLeft","handleInstantViewClick","instant_view_version","getTwitterInstagramEntities","e1","webPageContent","webPageMediaTop","webPageMediaBottom","webPageInstantView","outlinedPrimary","SvgIcon","meta","getWebPage","PHOTO_DISPLAY_SMALL_SIZE","PHOTO_DISPLAY_EXTRA_SMALL_SIZE","EmptyTile","Message","onClientUpdateClearSelection","onClientUpdateMessageShake","onClientUpdateMessageHighlighted","highlighted","emojiMatches","getEmojiMatches","handleSelectUser","handleSelectChat","handleSelection","mouseDown","handleDateClick","handleAnimationEnd","handleMouseOut","mouseOut","handleReplyClick","openReply","tagName","showUnreadSeparator","showTail","forward_info","inlineMeta","hasCaption","showForward","showMessageForward","showReply","suppressTitle","hasTitle","isChannel","isPrivate","getMessageStyle","withBubble","onMouseOver","onMouseOut","onAnimationEnd","isMetaBubble","Placeholder","cacheLoaded","dialogsReady","ScrollDownButton","chatPhotoStyle","borderRadius","ServiceMessage","getServiceMessageContent","StickersHint","onClientUpdateRemoteStickersHint","currentHint","getItems","loadStickersContent","onClientUpdateLocalStickersHint","previewStickerId","cancelSend","loadPreviewContent","stickerId","loadStickerContent","stickersPerRow","hintsRef","STICKER_HINT_DISPLAY_SIZE","getNeighborStickers","indexes","row","column","prevRow","nextRow","prevColumn","nextColumn","ceil","getSticker","mouseDownStickerId","dict","foundStickers","stickerIndex","data-sticker-id","STICKER_SMALL_DISPLAY_SIZE","preview","HINTS","ScrollBehaviorEnum","freeze","SCROLL_TO_BOTTOM","SCROLL_TO_UNREAD","SCROLL_TO_MESSAGE","KEEP_SCROLL_POSITION","MessagesList","onClientUpdateTryEditMessage","history","defferedActions","onClientUpdateOpenReply","replyHistory","playerOpened","onClientUpdateMediaEnding","udpate","onClientUpdateMediaEnd","onClientUpdateSelection","selectionActive","onUpdateChatLastMessage","onUpdateMessageSendSucceeded","scrollBehavior","replaceMessage","handleScrollBehavior","updateItemsInView","newState","scrollDownVisible","scrollBehaviorNone","insertPrevious","filterMessages","deleteHistory","itemsInView","messageWrapper","loadIncompleteHistory","MAX_ITERATIONS","incomplete","MESSAGE_SLICE_LIMIT","loadMigratedHistory","onLoadMigratedHistory","insertNext","supergroupId","basicGroupChat","prevHistory","scrollToBottom","scrollToMessage","scrollToUnread","keepScrollPosition","scrolled","itemComponent","itemsMap","scrollToStart","separatorMessageId","handleListDragEnter","handleScrollDownClick","lastReply","pop","scrollDownButtonRef","historyEquals","previousChat","last_read_inbox_message_id","MAX_VALUE","highlightMessage","loadDraftContent","viewAction","hasFocus","getMessagePhoto","getPhotoSize","cancelGetRemoteFile","getMessageSticker","oldMessageId","prevMessage","isFirst","isServiceMessage","MESSAGE_SPLIT_MAX_TIME_S","prevDate","getFullYear","nextMessage","showMessageDate","m","showMessageTitle","nextShowTitle","ShareStickerSetButton","getStickersLink","stickerSet","handleShare","StickerSetDialog","handleUpdateInstalledStickerSets","handleClientUpdateStickerSet","loadStickerSetContent","is_installed","set_id","contentRef","hasScroll","scrollBottom","STICKER_SET","DialogDetails","onClientUpdateDocumentBlob","thumbnailTime","onClientUpdateChatBackground","onClientUpdateChatDetailsVisibility","messagesList","selectedCount","wallpaperSrc","articleRefs","Article","forwardedRef","page_blocks","is_rtl","blocks","dir","withIV","MediaCaption","bottom","InstantViewMediaViewerContent","onClientUpdatePictureInPicture","getViewerFile","onClientUpdateMediaThumbnailBlob","isPlaying","thumbnailSrc","scale","MEDIA_VIEWER_VIDEO_MAX_SIZE","w","h","poster","handleContentClick","isEmptyText","credit","Caption","prevMedia","getViewerThumbnail","getViewerMinithumbnail","minithumbnailWidth","minithumbnailHeight","mime_type","speed","MediaViewerButton","grow","MediaViewerFooterText","MediaViewerFooterButton","MediaViewerDownloadButton","onUpdateFile","is_downloading_completed","checkFileLoaded","saveDisabled","getLocalFile","propsDisabled","prevPropsFileId","InstantViewMediaViewer","getBlockMedia","handlePrevious","hasPreviousMedia","loadMedia","hasNextMedia","preloadIVMediaViewerContent","setInstantViewViewerContent","cancelPreloadIVMediaViewerContent","getInputMediaContent","handleSave","saveMedia","handleWrapperMouseDown","mouseDownTarget","handleWrapperClick","getValidBlocks","isValidMediaBlock","getBlockCaption","getBlockUrl","maxCount","InstantViewer","onClientUpdateInstantViewViewerContent","onClientUpdateInstantViewUrl","InstantViewStore","getCurrent","oldUrl","hash","scrollToHash","handleBack","instantViewerRef","articleRef","mounted","scrollToBlock","findDOMNode","scrollToElement","details","finished","currentElement","getInnerBlocks","IVContext","Provider","IV_PHOTO_SIZE","prevInstantView","MediaInfo","getSenderUserId","dateHint","tileControl","MediaViewerContent","getMediaFile","isVideoMessage","getMediaPreviewFile","loadNextBuffer","isEmbed","isEmbedMessage","isVideo","isAnimation","isAnimationMessage","embed_url","frameBorder","allowFullScreen","scrolling","getMediaMiniPreview","MediaViewer","currentMessageId","totalCount","loadMediaViewerContent","isMediaContent","firstSliceLoaded","inserted","oldHistory","filterMap","moveToNextMedia","accumulator","currentId","deletedCount","setMediaViewerContent","getFilter","loadHistory","MEDIA_SLICE_LIMIT","preloadMediaViewerContent","cancelPreloadMediaViewerContent","handleDialogOpen","loadPrevious","loadNext","nextId","deleteConfirmationOpened","handleDialogClose","deleteForAll","handleChangeDeleteForAll","handleInvertColors","nextBackground","hasPrevousMedia","deleteConfirmationContent","deleteConfirmation","PHOTO_BIG_SIZE","ProfileMediaViewerContent","onClientUpdateUserBlob","handlePhotoClick","onPrevious","prevPhoto","PROFILE_PHOTO_BIG_SIZE","getBlobUrl","ProfileMediaInfo","ProfileMediaViewer","photos","preloadProfileMediaViewerContent","getProfilePhoto","saveOrDownload","updateChatPhotoBlob","inputFile","chatPhoto","profile_photo_id","obj","prevFileId","currentFileId","inHistory","profilePhoto","profilePhotoBig","userProfilePhoto","getProfilePhotoDateHint","MainPage","onClientUpdateInstantViewContent","instantViewContent","onClientUpdateOpenChat","onClientUpdateOpenUser","isChatDetailsVisible","onClientUpdateProfileMediaViewerContent","profileMediaViewerContent","onClientUpdateForward","currentDialogChatId","dialogDetailsRef","withLanguage"],"mappings":"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","file":"static/js/4.e98210bb.chunk.js","sourcesContent":["/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\r\nimport { STICKER_PREVIEW_DISPLAY_SIZE } from '../../Constants';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './StickerPreview.css';\r\n\r\nclass StickerPreview extends React.Component {\r\n    state = {\r\n        emoji: null,\r\n        prevPropsSticker: null\r\n    };\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { sticker } = props;\r\n        const { prevPropsSticker } = state;\r\n\r\n        if (sticker && prevPropsSticker) {\r\n            return {\r\n                prevPropsSticker: sticker,\r\n                emoji: null\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { sticker } = this.props;\r\n\r\n        if (sticker && sticker !== prevProps.sticker) {\r\n            this.loadStickerEmojis(sticker);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { sticker } = this.props;\r\n\r\n        if (sticker) {\r\n            this.loadStickerEmojis(sticker);\r\n        }\r\n    }\r\n\r\n    loadStickerEmojis = sticker => {\r\n        const { sticker: file } = sticker;\r\n        const { id } = file;\r\n\r\n        TdLibController.send({\r\n            '@type': 'getStickerEmojis',\r\n            sticker: { '@type': 'inputFileId', id }\r\n        }).then(result => {\r\n            if (this.props.sticker === sticker) {\r\n                this.setState({\r\n                    emoji: result.emojis.join(' ')\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { sticker } = this.props;\r\n        const { emoji } = this.state;\r\n\r\n        if (!sticker) return null;\r\n\r\n        return (\r\n            <div className='sticker-preview'>\r\n                <div className='sticker-preview-emoji'>{emoji}</div>\r\n                <Sticker\r\n                    sticker={sticker}\r\n                    displaySize={STICKER_PREVIEW_DISPLAY_SIZE}\r\n                    source={StickerSourceEnum.PREVIEW}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nStickerPreview.propTypes = {\r\n    sticker: PropTypes.object\r\n};\r\n\r\nexport default StickerPreview;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nclass Animator {\r\n    constructor(duration, options = []) {\r\n        this.options = options;\r\n        this.duration = duration;\r\n    }\r\n\r\n    static outSine(n) {\r\n        return Math.sin((n * Math.PI) / 2);\r\n    }\r\n\r\n    start = () => {\r\n        this.stopped = false;\r\n        this.id = requestAnimationFrame(this.startInternal);\r\n    };\r\n\r\n    startInternal = timeStamp => {\r\n        const { startTime, duration } = this;\r\n\r\n        this.startTime = timeStamp;\r\n        this.endTime = startTime + duration;\r\n        this.draw(timeStamp);\r\n    };\r\n\r\n    draw = now => {\r\n        const { stopped, duration, startTime, options } = this;\r\n\r\n        if (now - startTime > duration && options.every(x => x.to === x.last)) {\r\n            this.stopped = true;\r\n        }\r\n\r\n        if (stopped) return;\r\n\r\n        const time = Math.min(now - startTime, duration);\r\n        const p = duration === 0 ? 1.0 : time / duration;\r\n        const val = Animator.outSine(p);\r\n\r\n        options.forEach(x => {\r\n            const { from, to, func } = x;\r\n            x.last = from + (to - from) * val;\r\n            func(x.last);\r\n        });\r\n\r\n        this.id = requestAnimationFrame(this.draw);\r\n    };\r\n\r\n    stop = () => {\r\n        this.stopped = true;\r\n        cancelAnimationFrame(this.id);\r\n    };\r\n}\r\n\r\nexport default Animator;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M6.66607426,13.6501686 C7.13342047,13.4117012 7.7055954,13.5972442 7.94406273,14.0645904 C8.71613228,15.5776856 10.2710663,16.5499921 12,16.5499921 C13.7262991,16.5499921 15.2792455,15.5806677 16.0525854,14.0711462 C16.2918118,13.6041881 16.8642875,13.419575 17.3312456,13.6588014 C17.7982037,13.8980278 17.9828168,14.4705034 17.7435904,14.9374615 C16.6482438,17.0755242 14.4462205,18.4499921 12,18.4499921 C9.55003677,18.4499921 7.34521255,17.0713067 6.2516524,14.928157 C6.01318507,14.4608108 6.19872805,13.8886359 6.66607426,13.6501686 Z M8.75,8 C9.44035594,8 10,8.67157288 10,9.5 C10,10.3284271 9.44035594,11 8.75,11 C8.05964406,11 7.5,10.3284271 7.5,9.5 C7.5,8.67157288 8.05964406,8 8.75,8 Z M15.25,8 C15.9403559,8 16.5,8.67157288 16.5,9.5 C16.5,10.3284271 15.9403559,11 15.25,11 C14.5596441,11 14,10.3284271 14,9.5 C14,8.67157288 14.5596441,8 15.25,8 Z' />,\r\n    'Smile'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { SnackbarProvider } from 'notistack';\r\nimport { getDisplayName } from './Utils/HOC';\r\nimport { MAX_SNACK } from './Constants';\r\n\r\nfunction withSnackbarNotifications(WrappedComponent) {\r\n    class NotificationsWrapper extends React.Component {\r\n        render() {\r\n            return (\r\n                <SnackbarProvider maxSnack={MAX_SNACK}>\r\n                    <WrappedComponent {...this.props} />\r\n                </SnackbarProvider>\r\n            );\r\n        }\r\n    }\r\n    NotificationsWrapper.displayName = `WithSnackbarNotifications(${getDisplayName(WrappedComponent)})`;\r\n\r\n    return NotificationsWrapper;\r\n}\r\n\r\nexport default withSnackbarNotifications;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport PauseIcon from '../../Assets/Icons/Pause';\r\nimport PlayIcon from '../../Assets/Icons/PlayArrow';\r\nimport FullScreen from '../../Assets/Icons/FullScreen';\r\nimport Hint from './Hint';\r\nimport Player from './Player';\r\nimport Progress from './Progress';\r\nimport { clamp, getDurationString } from '../../Utils/Common';\r\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\r\nimport {\r\n    PIP_PLAYER_BORDER_PRECISION, PLAYER_PLAYBACKRATE_MAX,\r\n    PLAYER_PLAYBACKRATE_MIN,\r\n    PLAYER_PLAYBACKRATE_STEP,\r\n    PLAYER_SEEK_STEP_BIG,\r\n    PLAYER_SEEK_STEP_SMALL,\r\n    PLAYER_VOLUME_MAX,\r\n    PLAYER_VOLUME_MIN,\r\n    PLAYER_VOLUME_STEP\r\n} from '../../Constants';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport PlayerStore from '../../Stores/PlayerStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './PipPlayer.css';\r\n\r\nclass PipPlayer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\r\n        this.state = { };\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { video, duration, currentTime, volume, play, buffered, waiting } = props;\r\n        if (state.prevVideo !== video) {\r\n            return {\r\n                prevVideo: video,\r\n                duration,\r\n                currentTime,\r\n                volume,\r\n                play,\r\n                buffered,\r\n                waiting,\r\n                dragging: false,\r\n                hidden: false,\r\n                fullscreen: false\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { video } = this.props;\r\n        this.connectPlayer(video);\r\n        window.addEventListener('resize', this.onWindowResize);\r\n        document.addEventListener('fullscreenchange', this.onFullScreenChange);\r\n        PlayerStore.on('clientUpdateMediaShortcut', this.onClientUpdateMediaShortcut);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        const { video } = this.props;\r\n        this.disconnectPlayer(video);\r\n        window.removeEventListener('resize', this.onWindowResize);\r\n        document.removeEventListener('fullscreenchange', this.onFullScreenChange);\r\n        PlayerStore.off('clientUpdateMediaShortcut', this.onClientUpdateMediaShortcut);\r\n\r\n        KeyboardManager.remove(this.keyboardHandler);\r\n    }\r\n\r\n    onClientUpdateMediaShortcut = update => {\r\n        const { event } = update;\r\n        if (!event) return;\r\n\r\n        this.onKeyDown(event);\r\n    };\r\n\r\n    onKeyDown = event => {\r\n        const { key, code, altKey, ctrlKey, metaKey, shiftKey } = event;\r\n\r\n        const { video } = this.props;\r\n        if (!video) return;\r\n\r\n        let handled = false;\r\n        switch (code) {\r\n            case 'Escape': {\r\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    this.handleClose();\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'ArrowLeft': {\r\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_SMALL);\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'KeyJ': {\r\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_BIG);\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'ArrowRight': {\r\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_SMALL);\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'KeyL': {\r\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_BIG);\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'ArrowUp': {\r\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    this.handleVolume(video.volume + PLAYER_VOLUME_STEP);\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'ArrowDown': {\r\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    this.handleVolume(video.volume - PLAYER_VOLUME_STEP);\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'Space':\r\n            case 'KeyK': {\r\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    this.handleClick();\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'KeyM': {\r\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    this.handleMute();\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'KeyF': {\r\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    this.handleFullScreen();\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'KeyI': {\r\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    // this.handlePictureInPicture();\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'Digit0':\r\n            case 'Digit1':\r\n            case 'Digit2':\r\n            case 'Digit3':\r\n            case 'Digit4':\r\n            case 'Digit5':\r\n            case 'Digit6':\r\n            case 'Digit7':\r\n            case 'Digit8':\r\n            case 'Digit9': {\r\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    const progress = new Number(key.replace('Digit', '')) / 10.0;\r\n                    this.handleSeekProgress(progress);\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'Home': {\r\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    this.handleSeek(0);\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'End': {\r\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    this.handleSeek(video.duration - 1.0);\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'Comma': {\r\n                if (!altKey && !ctrlKey && !metaKey && shiftKey) {\r\n                    this.handlePlaybackRate(video.playbackRate - PLAYER_PLAYBACKRATE_STEP);\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'Period': {\r\n                if (!altKey && !ctrlKey && !metaKey && shiftKey) {\r\n                    this.handlePlaybackRate(video.playbackRate + PLAYER_PLAYBACKRATE_STEP);\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (handled) {\r\n            event.stopPropagation();\r\n            event.preventDefault();\r\n        }\r\n    };\r\n\r\n    showMediaHint(text) {\r\n        const { fileId } = this.props;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaHint',\r\n            fileId,\r\n            text\r\n        });\r\n    }\r\n\r\n    handleVolume = volume => {\r\n        const { video } = this.props;\r\n        if (!video) return;\r\n\r\n        volume = clamp(volume, PLAYER_VOLUME_MIN, PLAYER_VOLUME_MAX);\r\n\r\n        video.volume = volume;\r\n        this.showMediaHint(`${Math.round(video.volume * 100)}%`);\r\n    };\r\n\r\n    handlePlaybackRate = rate => {\r\n        const { video } = this.props;\r\n        if (!video) return;\r\n\r\n        rate = clamp(rate, PLAYER_PLAYBACKRATE_MIN, PLAYER_PLAYBACKRATE_MAX)\r\n\r\n        video.playbackRate = rate;\r\n        this.showMediaHint(`${rate}x`);\r\n    };\r\n\r\n    handleSeekProgress = progress => {\r\n        const { video } = this.props;\r\n        if (!video) return;\r\n\r\n        this.handleSeek(progress * video.duration);\r\n    };\r\n\r\n    handleSeek = currentTime => {\r\n        const { video } = this.props;\r\n        if (!video) return;\r\n\r\n        currentTime = clamp(currentTime, 0, video.duration || 0);\r\n\r\n        video.currentTime = currentTime;\r\n        this.setState({ currentTime });\r\n    };\r\n\r\n    onFullScreenChange = () => {\r\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\r\n        const fullscreenPlayer = document.getElementById('pip-player-wrapper');\r\n        const fullscreen = fullscreenElement === fullscreenPlayer;\r\n\r\n        this.setState({\r\n            fullscreen\r\n        });\r\n    };\r\n\r\n    onWindowResize = () => {\r\n\r\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\r\n        if (fullscreenElement) return;\r\n\r\n        const player = document.getElementById('pip-player');\r\n\r\n        const oldLeft = parseInt(player.style.left, 10);\r\n        const oldTop = parseInt(player.style.top, 10);\r\n\r\n        const { left, top } = this.normalizePosition(oldLeft, oldTop, true);\r\n\r\n        if (oldLeft === left && oldTop === top) return;\r\n\r\n        // console.log('[pip] windowResize', left, top);\r\n        player.style.left = left + 'px';\r\n        player.style.top = top + 'px';\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { video } = this.props;\r\n\r\n        if (prevProps.video !== video) {\r\n            this.disconnectPlayer(prevProps.video)\r\n            this.connectPlayer(video);\r\n        }\r\n    }\r\n\r\n    connectPlayer(video) {\r\n        if (!video) return;\r\n\r\n        const pipPlayer = document.getElementById('pip-player');\r\n        const { left, top } = this.normalizePosition(PlayerStore.pipParams.left, PlayerStore.pipParams.top, false);\r\n        pipPlayer.style.left = left + 'px';\r\n        pipPlayer.style.top = top + 'px';\r\n\r\n        const pipPlayerWrapper = document.getElementById('pip-player-wrapper');\r\n        pipPlayerWrapper.focus();\r\n\r\n        // console.log('[pip] connect', PlayerStore.pipParams, pipPlayer.style.left, pipPlayer.style.top);\r\n\r\n        const container = document.getElementById('pip-player-container');\r\n        if (!container) return;\r\n\r\n        video.onloadedmetadata = this.handleLoadedMetadata;\r\n        video.onloadeddata = this.handleLoadedData;\r\n        video.oncanplay = this.handleCanPlay;\r\n        video.onplay = this.handlePlay;\r\n        video.onpause = this.handlePause;\r\n        video.onended = this.handleEnded;\r\n        video.ontimeupdate = this.handleTimeUpdate;\r\n        video.onvolumechange = this.handleVolumeChange;\r\n        video.onprogress = this.handleProgress;\r\n        video.onwaiting = this.handleWaiting;\r\n\r\n        container.innerHTML = '';\r\n        container.appendChild(video);\r\n    }\r\n\r\n    disconnectPlayer(video) {\r\n        if (!video) return;\r\n\r\n        video.onloadedmetadata = null;\r\n        video.onloadeddata = null;\r\n        video.oncanplay = null;\r\n        video.onplay = null;\r\n        video.onpause = null;\r\n        video.onended = null;\r\n        video.ontimeupdate = null;\r\n        video.onvolumechange = null;\r\n        video.onprogress = null;\r\n        video.onwaiting = null;\r\n    }\r\n\r\n    handleLoadedData = event => {\r\n        const { target: video } = event;\r\n        if (!video) return;\r\n    };\r\n\r\n    handleLoadedMetadata = event => {\r\n        const { target: video } = event;\r\n        if (!video) return;\r\n\r\n        const { currentTime } = this.state;\r\n        const { duration, volume, buffered } = video;\r\n        // const currentTime = this.getCurrentTime();\r\n\r\n        this.setState({\r\n            duration,\r\n            // currentTime,\r\n            volume,\r\n            waiting: true,\r\n            buffered\r\n        }, () => {\r\n            if (!currentTime) return;\r\n\r\n            video.currentTime = currentTime;\r\n        });\r\n    };\r\n\r\n    handleCanPlay = event => {\r\n        const { target: video } = event;\r\n\r\n        this.setState({\r\n            waiting: false\r\n        }, () => {\r\n            if (!video) return;\r\n\r\n            const { play } = this.state;\r\n            if (play) {\r\n                video.play();\r\n            } else {\r\n                video.pause();\r\n            }\r\n        });\r\n    };\r\n\r\n    handlePlay = event => {\r\n        const { onPlay } = this.props;\r\n\r\n        this.setState({\r\n            play: true,\r\n            hidden: true\r\n        });\r\n\r\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerPlay' });\r\n        onPlay && onPlay(event);\r\n    };\r\n\r\n    handlePause = event => {\r\n        const { onPause } = this.props;\r\n\r\n        this.setState({\r\n            play: false,\r\n            hidden: false\r\n        });\r\n\r\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerPause' });\r\n        onPause && onPause(event);\r\n    };\r\n\r\n    handleEnded = event => {\r\n        const { onEnded } = this.props;\r\n\r\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerEnded' });\r\n        onEnded && onEnded(event);\r\n\r\n        const { video } = this.props;\r\n        this.setCurrentTime({currentTime: 0, duration: video.duration });\r\n    };\r\n\r\n    handleTimeUpdate = event => {\r\n        const { target: video } = event;\r\n        if (!video) return;\r\n\r\n        const { fileId } = this.props;\r\n        const { currentTime, duration, volume, buffered } = video;\r\n\r\n        this.setState({\r\n            duration,\r\n            currentTime,\r\n            volume,\r\n            buffered\r\n        });\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaViewerTimeUpdate',\r\n            fileId,\r\n            currentTime,\r\n            duration,\r\n            volume,\r\n            buffered\r\n        });\r\n\r\n        this.setCurrentTime({ currentTime, duration });\r\n    };\r\n\r\n    handleVolumeChange = event => {\r\n        const { onVolumeChange } = this.props;\r\n\r\n        const { target: video } = event;\r\n        if (!video) return;\r\n\r\n        const { volume } = video;\r\n\r\n        this.setState({\r\n            volume\r\n        });\r\n\r\n        TdLibController.clientUpdate({ '@type' : 'clientUpdateMediaVolume', volume });\r\n        onVolumeChange && onVolumeChange(event);\r\n    };\r\n\r\n    handleProgress = event => {\r\n        const { target: video } = event;\r\n        if (!video) return;\r\n\r\n        const { fileId } = this.props;\r\n\r\n        const { buffered } = video;\r\n\r\n        this.setState({\r\n            buffered\r\n        });\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaViewerProgress',\r\n            fileId,\r\n            buffered\r\n        });\r\n    };\r\n\r\n    handleWaiting = () => {\r\n        this.setState({ waiting: true });\r\n    };\r\n\r\n    handleClick = () => {\r\n        this.startStopPlayer();\r\n    };\r\n\r\n    startStopPlayer = () => {\r\n        const { video } = this.props;\r\n        if (!video) return;\r\n\r\n        const { waiting } = this.state;\r\n        if (waiting) {\r\n            this.setState({\r\n                play: !this.state.play,\r\n                hidden: false\r\n            });\r\n        } else {\r\n            if (video.paused) {\r\n                video.play()\r\n            } else {\r\n                video.pause();\r\n            }\r\n        }\r\n    };\r\n\r\n    handlePlayerMouseDown = event => {\r\n        const pip = document.getElementById('pip-player-wrapper');\r\n        if (pip) pip.focus();\r\n\r\n        this.mouseDownRoot = true;\r\n        event.preventDefault();\r\n\r\n        if (event.nativeEvent.which !== 1) return;\r\n\r\n        this.offsetX = event.nativeEvent.offsetX;\r\n        this.offsetY = event.nativeEvent.offsetY;\r\n\r\n        document.onmousemove = this.handleMouseMove;\r\n        document.onmouseup = this.handleMouseUp;\r\n\r\n        this.setState({\r\n            windowDragging: true\r\n        });\r\n    };\r\n\r\n    handleMouseUp = event => {\r\n        event.preventDefault();\r\n\r\n        document.onmousemove = null;\r\n        document.onmouseup = null;\r\n\r\n        this.setState({\r\n            windowDragging: false\r\n        });\r\n    };\r\n\r\n    normalizePosition(left, top, checkGlue = true) {\r\n        const player = document.getElementById('pip-player');\r\n        const playerWidth = player ? player.clientWidth : 300;\r\n        const playerHeight = player ? player.clientHeight : 300;\r\n\r\n        const { clientWidth: documentWidth } = document.documentElement;\r\n        const { clientHeight: documentHeight } = document.documentElement;\r\n\r\n        if (checkGlue && this.glueLeft) {\r\n            left = 0;\r\n        } else if (checkGlue && this.glueRight) {\r\n            left = documentWidth - playerWidth;\r\n        } else {\r\n            // left = clamp(left - PIP_PLAYER_BORDER_PRECISION, 0, left);\r\n            // left = clamp(left + PIP_PLAYER_BORDER_PRECISION, left, documentWidth - playerWidth);\r\n            left = left < PIP_PLAYER_BORDER_PRECISION ? 0 : left;\r\n            left = left > documentWidth - playerWidth - PIP_PLAYER_BORDER_PRECISION ? documentWidth - playerWidth : left;\r\n            left = clamp(left, 0, documentWidth - playerWidth);\r\n        }\r\n\r\n        if (checkGlue && this.glueTop) {\r\n            top = 0;\r\n        } else if (checkGlue && this.glueBottom) {\r\n            top = documentHeight - playerHeight;\r\n        } else {\r\n            top = top < PIP_PLAYER_BORDER_PRECISION ? 0 : top;\r\n            top = top > documentHeight - playerHeight - PIP_PLAYER_BORDER_PRECISION ? documentHeight - playerHeight : top;\r\n            top = clamp(top, 0, documentHeight - playerHeight);\r\n        }\r\n\r\n        this.glueLeft = left === 0;\r\n        this.glueRight = left === documentWidth - playerWidth;\r\n        this.glueTop = top === 0;\r\n        this.glueBottom = top === documentHeight - playerHeight;\r\n\r\n        PlayerStore.pipParams = { left, top };\r\n\r\n        return { left, top };\r\n    }\r\n\r\n    handleMouseMove = event => {\r\n        event.preventDefault();\r\n\r\n        const { left, top } = this.normalizePosition(event.clientX - this.offsetX, event.clientY - this.offsetY, false);\r\n\r\n        const player = document.getElementById('pip-player');\r\n        player.style.left = left + 'px';\r\n        player.style.top = top + 'px';\r\n    };\r\n\r\n    handleMouseDown = event => {\r\n        event.stopPropagation();\r\n\r\n        const { video } = this.props;\r\n        if (!video) return;\r\n\r\n        this.setState({\r\n            dragging: true,\r\n            draggingTime: video.currentTime\r\n        });\r\n    };\r\n\r\n    handleChange = (event, value) => {\r\n        const { video } = this.props;\r\n        if (!video) return;\r\n\r\n        this.setState({\r\n            draggingTime: value * video.duration\r\n        });\r\n    };\r\n\r\n    handleChangeCommitted = () => {\r\n        const { dragging, draggingTime } = this.state;\r\n        if (!dragging) return;\r\n\r\n        this.setState({\r\n            dragging: false,\r\n            currentTime: draggingTime,\r\n            draggingTime: 0\r\n        }, () => {\r\n            const { video } = this.props;\r\n            if (!video) return;\r\n\r\n            if (Number.isFinite(draggingTime)) {\r\n                video.currentTime = draggingTime;\r\n            }\r\n        });\r\n    };\r\n\r\n    handlePanelEnter = () => {\r\n        this.panelEnter = true;\r\n    };\r\n\r\n    handlePanelLeave = () => {\r\n        this.panelEnter = false;\r\n    };\r\n\r\n    handleMouseOver = event => {\r\n        this.mouseDownRoot = false;\r\n        const { hidden } = this.state;\r\n\r\n        if (hidden) {\r\n            this.setState({\r\n                hidden: false\r\n            });\r\n        }\r\n\r\n        clearTimeout(this.mouseOverTimeout);\r\n        this.mouseOverTimeout = setTimeout(() => {\r\n            if (this.panelEnter) return;\r\n            if (!this.state.play) return;\r\n            if (!this.state.duration) return;\r\n\r\n            this.setState({\r\n                hidden: true\r\n            });\r\n        }, 1000);\r\n    }\r\n\r\n    handleClose = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdatePictureInPicture',\r\n            videoInfo: null\r\n        });\r\n    };\r\n\r\n    handleVolumeSliderChange = (event, volume) => {\r\n        if (volume === this.state.volume) return;\r\n\r\n        this.setState({\r\n            volume\r\n        }, () => {\r\n            const { video } = this.props;\r\n            if (!video) return;\r\n\r\n            video.volume = volume;\r\n        });\r\n    };\r\n\r\n    handleVolumeSliderChangeCommitted = event => {\r\n        const { video } = this.props;\r\n        if (!video) return;\r\n\r\n        document.activeElement.blur();\r\n    };\r\n\r\n    handleMute = () => {\r\n        const { video } = this.props;\r\n        if (!video) return;\r\n\r\n        if (video.volume === 0) {\r\n            video.volume = this.prevVolume || 0.5;\r\n        } else {\r\n            this.prevVolume = video.volume;\r\n            video.volume = 0;\r\n        }\r\n    }\r\n\r\n    handleFullScreen = event => {\r\n        event && event.stopPropagation();\r\n\r\n        const root = document.getElementById('pip-player-wrapper');\r\n        if (!root) return;\r\n\r\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\r\n        if (fullscreenElement) {\r\n            this.exitFullscreen();\r\n            return;\r\n        }\r\n\r\n        this.requestFullscreen(root);\r\n    };\r\n\r\n    requestFullscreen(element) {\r\n        const method = element.requestFullscreen || element.mozRequestFullScreen || element.webkitRequestFullscreen;\r\n\r\n        method && method.call(element);\r\n    }\r\n\r\n    exitFullscreen() {\r\n        const method = document.exitFullscreen || document.mozCancelFullScreen || document.webkitExitFullscreen;\r\n\r\n        method && method.call(document);\r\n    }\r\n\r\n    getCurrentTime = () => {\r\n        const { fileId } = this.props;\r\n\r\n        const file = FileStore.get(fileId);\r\n        if (!file) return;\r\n\r\n        const { remote } = file;\r\n        if (!remote) return;\r\n\r\n        const { unique_id } = remote;\r\n        if (!unique_id) return;\r\n\r\n        return PlayerStore.getCurrentTime(unique_id);\r\n    };\r\n\r\n    setCurrentTime = currentTime => {\r\n        const { fileId } = this.props;\r\n\r\n        const file = FileStore.get(fileId);\r\n        if (!file) return;\r\n\r\n        const { remote } = file;\r\n        if (!remote) return;\r\n\r\n        const { unique_id } = remote;\r\n        if (!unique_id) return;\r\n\r\n        if (!currentTime) {\r\n            PlayerStore.clearCurrentTime(unique_id);\r\n        } else {\r\n            PlayerStore.setCurrentTime(unique_id, currentTime);\r\n        }\r\n    };\r\n\r\n    handlePanelDoubleClick = event => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n    };\r\n\r\n    handleClickRoot = event => {\r\n        event.stopPropagation();\r\n\r\n        const { mouseDownRoot } = this;\r\n        if (!mouseDownRoot) return;\r\n\r\n        this.startStopPlayer();\r\n    }\r\n\r\n    handleDoubleClick = event => {\r\n        event.stopPropagation();\r\n\r\n        const { mouseDownRoot } = this;\r\n        if (!mouseDownRoot) return;\r\n\r\n        this.handleFullScreen(event);\r\n    };\r\n\r\n    handleFocus = () => {\r\n        KeyboardManager.add(this.keyboardHandler);\r\n\r\n    };\r\n\r\n    handleBlur = () => {\r\n        KeyboardManager.remove(this.keyboardHandler);\r\n    };\r\n\r\n    render() {\r\n        const { fileId } = this.props;\r\n        const { windowDragging, dragging, draggingTime, currentTime, duration, play, waiting, buffered, hidden, volume, fullscreen } = this.state;\r\n\r\n        const time = dragging ? draggingTime : currentTime;\r\n        const value = duration > 0 ? time / duration : 0;\r\n        const bufferedTime = Player.getBufferedTime(time, buffered);\r\n        const bufferedValue = duration > 0 ? bufferedTime / duration : 0;\r\n\r\n        const timeString = getDurationString(Math.floor(time) || 0);\r\n        const durationString = getDurationString(Math.floor(duration) || 0);\r\n\r\n        const pictureInPictureEnabled = true;\r\n        const fullscreenEnabled = document.fullscreenEnabled || document.mozFullScreenEnabled || document.webkitFullscreenEnabled;\r\n\r\n        return (\r\n            <div\r\n                id='pip-player'\r\n                className={classNames('pip-player', { 'pip-player-dragging': windowDragging, 'pip-player-fullscreen': fullscreen })}\r\n                onMouseDown={this.handlePlayerMouseDown}\r\n                onMouseMove={this.handleMouseOver}\r\n                onClick={this.handleClickRoot}\r\n                onDoubleClick={this.handleDoubleClick}>\r\n                <div\r\n                    id='pip-player-wrapper'\r\n                    className={classNames({ 'pip-player-wrapper-hidden': hidden })}\r\n                    onFocus={this.handleFocus}\r\n                    onBlur={this.handleBlur}\r\n                    tabIndex={0}>\r\n                    <div id='pip-player-container'/>\r\n                    <Hint fileId={fileId}/>\r\n\r\n                    <button onMouseDown={e => e.stopPropagation()} className={classNames('player-button', 'player-button-close', { 'player-panel-hidden': hidden })} onClick={this.handleClose}>\r\n                        <CloseIcon/>\r\n                    </button>\r\n                    <div\r\n                        className={classNames('player-panel', { 'player-panel-hidden': hidden })}\r\n                        onClick={e => e.stopPropagation()}\r\n                        onMouseDown={e => e.stopPropagation()}\r\n                        onDoubleClick={this.handlePanelDoubleClick}\r\n                        onMouseEnter={this.handlePanelEnter}\r\n                        onMouseLeave={this.handlePanelLeave}>\r\n                        <div className='player-slider'>\r\n                            <span className='player-slider-buffer-track' style={{ width: bufferedValue * 100 + '%'}}/>\r\n                            <Slider\r\n                                value={value}\r\n                                min={0}\r\n                                max={1}\r\n                                step={0.001}\r\n                                classes={{\r\n                                    root: 'player-slider-root',\r\n                                    rail: 'player-slider-rail',\r\n                                    track: 'player-slider-track',\r\n                                    thumb: 'player-slider-thumb',\r\n                                    active: 'player-slider-active'\r\n                                }}\r\n                                onChange={this.handleChange}\r\n                                onChangeCommitted={this.handleChangeCommitted}\r\n                                onMouseDown={this.handleMouseDown}\r\n                            />\r\n                        </div>\r\n                        <div className='player-controls'>\r\n                            <button className='player-button' onClick={this.handleClick}>\r\n                                {play ? <PauseIcon/> : <PlayIcon/>}\r\n                            </button>\r\n                            <div className='player-time'>\r\n                                {`${timeString} / ${durationString}`}\r\n                            </div>\r\n                            <div className='player-volume'>\r\n                                <Slider\r\n                                    value={volume}\r\n                                    min={0}\r\n                                    max={1}\r\n                                    step={0.001}\r\n                                    classes={{\r\n                                        root: 'player-volume-root',\r\n                                        rail: 'player-volume-rail',\r\n                                        track: 'player-volume-track',\r\n                                        thumb: 'player-volume-thumb',\r\n                                        active: 'player-volume-active'\r\n                                    }}\r\n                                    onChange={this.handleVolumeSliderChange}\r\n                                    onChangeCommitted={this.handleVolumeSliderChangeCommitted}\r\n                                />\r\n                            </div>\r\n                            <button className='player-button' onClick={this.handleMute}>\r\n                                {Player.getVolumeIcon(volume)}\r\n                            </button>\r\n                            <button className='player-button' disabled={!fullscreenEnabled} onClick={this.handleFullScreen}>\r\n                                <FullScreen/>\r\n                            </button>\r\n                            {/*<button className='player-button' disabled={!pictureInPictureEnabled} onClick={this.handlePictureInPicture}>*/}\r\n                            {/*    <PictureInPictureIcon/>*/}\r\n                            {/*</button>*/}\r\n                        </div>\r\n                    </div>\r\n                    <Progress waiting={waiting}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nPipPlayer.propTypes = {\r\n\r\n};\r\n\r\nexport default PipPlayer;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M17,2 C19.209139,2 21,3.790861 21,6 L21,20.2543508 C21,21.3589203 20.1045695,22.2543871 19,22.2543871 C18.5225775,22.2543871 18.0609035,22.0835665 17.6984173,21.772864 L12,16.8885064 L6.30158275,21.772864 C5.46293106,22.4917083 4.2003311,22.3945852 3.4814868,21.5559335 C3.17078432,21.1934473 3,20.7317733 3,20.2543508 L3,6 C3,3.790861 4.790861,2 7,2 L17,2 Z M17,4 L7,4 C5.8954305,4 5,4.8954305 5,6 L5,20.2543508 L10.6984173,15.3699931 C11.4473967,14.7280108 12.5526033,14.7280108 13.3015827,15.3699931 L19,20.2543508 L19,6 C19,4.8954305 18.1045695,4 17,4 Z' />,\r\n    'Saved'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { isUserOnline } from '../../Utils/User';\r\nimport { getChatUserId } from '../../Utils/Chat';\r\nimport UserStore from './../../Stores/UserStore';\r\nimport './OnlineStatus.css';\r\n\r\nclass OnlineStatus extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const userId = getChatUserId(props.chatId);\r\n        const user = UserStore.get(userId);\r\n\r\n        this.state = {\r\n            userId,\r\n            online: isUserOnline(user)\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\r\n    }\r\n\r\n    onUpdateUserStatus = update => {\r\n        const { userId } = this.state;\r\n        const { user_id } = update;\r\n        if (user_id !== userId) return;\r\n\r\n        const user = UserStore.get(userId);\r\n        if (!user) return;\r\n\r\n        this.setState({ online: isUserOnline(user) });\r\n    };\r\n\r\n    render() {\r\n        const { size, borderSize } = this.props;\r\n        const { online } = this.state;\r\n        if (!online) return null;\r\n\r\n        return (\r\n            <div className='online-status' style={{ width: size, height: size }}>\r\n                <div className='online-status-icon' style={{ padding: borderSize }}>\r\n                    <div className='online-status-indicator' />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nOnlineStatus.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    size: PropTypes.number,\r\n    borderSize: PropTypes.number\r\n};\r\n\r\nOnlineStatus.defaultProps = {\r\n    size: 14,\r\n    borderSize: 2\r\n};\r\n\r\nexport default OnlineStatus;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport BookmarkBorderIcon from '../../Assets/Icons/Saved';\r\nimport DeletedAccountIcon from '../../Assets/Icons/DeletedAccount';\r\nimport OnlineStatus from './OnlineStatus';\r\nimport { getChatLetters, isMeChat, isPrivateChat, isDeletedPrivateChat, getChatTypeId } from '../../Utils/Chat';\r\nimport { getSrc, loadChatContent } from '../../Utils/File';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport './ChatTile.css';\r\n\r\nclass ChatTile extends Component {\r\n    state = { };\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { chatId, t } = props;\r\n\r\n        if (state.prevChatId !== chatId) {\r\n            const chat = ChatStore.get(chatId);\r\n            const file = chat && chat.photo? chat.photo.small : null;\r\n\r\n            const fileId = file ? file.id : -1;\r\n            const src = getSrc(file);\r\n            const loaded = state.src === src && src !== '' || fileId === -1;\r\n            const letters = getChatLetters(chatId, t);\r\n\r\n            return {\r\n                prevChatId: chatId,\r\n\r\n                fileId,\r\n                src,\r\n                loaded,\r\n                letters\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId } = this.props;\r\n        const { fileId, src, loaded, letters } = this.state;\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.fileId !== fileId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.src !== src) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.loaded !== loaded) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.letters !== letters) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\r\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\r\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\r\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\r\n        ChatStore.off('updateChatPhoto', this.onUpdateChatPhoto);\r\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\r\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\r\n    }\r\n\r\n    onFastUpdatingComplete = update => {\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onClientUpdateChatBlob = update => {\r\n        const { chatId } = this.props;\r\n        const { fileId, loaded } = this.state;\r\n\r\n        if (chatId !== update.chatId) return;\r\n        if (fileId !== update.fileId) return;\r\n\r\n        if (!loaded) {\r\n            const chat = ChatStore.get(chatId);\r\n            if (!chat) return null;\r\n\r\n            const { photo } = chat;\r\n            const src = getSrc(photo ? photo.small : null);\r\n\r\n            this.setState({\r\n                src\r\n            });\r\n        }\r\n    };\r\n\r\n    onUpdateChatPhoto = update => {\r\n        const { chatId } = this.props;\r\n        const { chat_id, photo } = update;\r\n\r\n        if (chat_id !== chatId) return;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        const file = chat && chat.photo? chat.photo.small : null;\r\n\r\n        const fileId = file ? file.id : -1;\r\n        const src = getSrc(file);\r\n        const loaded = this.state.src === src && src !== '' || fileId === -1;\r\n\r\n        this.setState({\r\n            fileId,\r\n            src,\r\n            loaded\r\n        });\r\n\r\n        if (photo) {\r\n            const store = FileStore.getStore();\r\n            loadChatContent(store, chatId);\r\n        }\r\n    };\r\n\r\n    onUpdateChatTitle = update => {\r\n        const { chatId, t } = this.props;\r\n        const { chat_id } = update;\r\n\r\n        if (chat_id !== chatId) return;\r\n\r\n        const letters = getChatLetters(chatId, t);\r\n\r\n        this.setState({ letters });\r\n    };\r\n\r\n    handleSelect = event => {\r\n        const { chatId, onSelect } = this.props;\r\n        if (!onSelect) return;\r\n\r\n        event.stopPropagation();\r\n        onSelect(chatId);\r\n    };\r\n\r\n    handleLoad = () => {\r\n        this.setState({ loaded: true });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, showOnline, showSavedMessages, onSelect, small, dialog, big, size } = this.props;\r\n        const { src, loaded, letters } = this.state;\r\n\r\n        let style = null;\r\n        if (size) {\r\n            style = {\r\n                width: size,\r\n                height: size\r\n            };\r\n        }\r\n\r\n        if (isDeletedPrivateChat(chatId)) {\r\n            return (\r\n                <div\r\n                    className={classNames(\r\n                        'chat-tile',\r\n                        { 'tile-small': small },\r\n                        { 'tile-dialog': dialog },\r\n                        { 'tile-big': big }\r\n                    )}\r\n                    style={style}\r\n                    onClick={this.handleSelect}>\r\n                    <div className={classNames('tile-photo', 'tile_color_0', { pointer: onSelect })}>\r\n                        <div className='tile-saved-messages'>\r\n                            <DeletedAccountIcon fontSize={big ? 'large' : 'default'} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        if (isMeChat(chatId) && showSavedMessages) {\r\n            return (\r\n                <div\r\n                    className={classNames(\r\n                        'chat-tile',\r\n                        { 'tile-small': small },\r\n                        { 'tile-dialog': dialog },\r\n                        { 'tile-big': big }\r\n                    )}\r\n                    style={style}\r\n                    onClick={this.handleSelect}>\r\n                    <div className={classNames('tile-photo', 'tile_color_6', { pointer: onSelect })}>\r\n                        <div className='tile-saved-messages'>\r\n                            <BookmarkBorderIcon fontSize={big ? 'large' : 'default'} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return null;\r\n\r\n        const tileLoaded = src && loaded;\r\n        const typeId = getChatTypeId(chatId);\r\n        const tileColor = `tile_color_${(Math.abs(typeId) % 7) + 1}`;\r\n\r\n        return (\r\n            <div\r\n                className={classNames(\r\n                    'chat-tile',\r\n                    { [tileColor]: !tileLoaded },\r\n                    { pointer: onSelect },\r\n                    { 'tile-dialog': dialog },\r\n                    { 'tile-small': small },\r\n                    { 'tile-big': big }\r\n                )}\r\n                style={style}\r\n                onClick={this.handleSelect}>\r\n                {!tileLoaded && (\r\n                    <div className='tile-photo'>\r\n                        <span className='tile-text'>{letters}</span>\r\n                    </div>\r\n                )}\r\n                {src && <img className='tile-photo' src={src} onLoad={this.handleLoad} draggable={false} alt='' />}\r\n                {showOnline && isPrivateChat(chatId) && <OnlineStatus chatId={chatId} />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nChatTile.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    onSelect: PropTypes.func,\r\n    showSavedMessages: PropTypes.bool,\r\n    showOnline: PropTypes.bool,\r\n    size: PropTypes.number\r\n};\r\n\r\nChatTile.defaultProps = {\r\n    showSavedMessages: true,\r\n    showOnline: false\r\n};\r\n\r\nexport default withTranslation()(ChatTile);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport ChatTile from './ChatTile';\r\nimport { getChatShortTitle } from '../../Utils/Chat';\r\nimport './ForwardTargetChat.css';\r\n\r\nclass ForwardTargetChat extends React.Component {\r\n    render() {\r\n        const { chatId, selected, onSelect, t } = this.props;\r\n\r\n        const shortTitle = getChatShortTitle(chatId, true, t);\r\n\r\n        return (\r\n            <div\r\n                className={classNames('forward-target-chat', { 'forward-target-chat-selected': selected })}\r\n                onClick={onSelect}>\r\n                <div className='forward-target-chat-tile'>\r\n                    <div className='forward-target-chat-tile-wrapper'>\r\n                        <ChatTile chatId={chatId} />\r\n                    </div>\r\n                    {selected && <div className='forward-target-chat-selection' />}\r\n                    <div\r\n                        className={classNames(\r\n                            'forward-target-chat-mark',\r\n                            selected ? 'forward-target-chat-mark-selected' : 'forward-target-chat-mark-unselected'\r\n                        )}\r\n                    />\r\n                    <div className='forward-target-chat-mark-icon' />\r\n                </div>\r\n                <div className='forward-target-chat-title'>{shortTitle}</div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nForwardTargetChat.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    selected: PropTypes.bool,\r\n    onSelect: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withTranslation()(ForwardTargetChat);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nexport async function copy(text) {\r\n    try {\r\n        if (navigator.clipboard) {\r\n            await navigator.clipboard.writeText(text);\r\n            return true;\r\n        }\r\n    } catch (e) {\r\n        console.error('[clipboard] unable to copy with clipboard.writeText', e);\r\n    }\r\n\r\n    return copyOld(text);\r\n}\r\n\r\nfunction copyOld(text) {\r\n    let element;\r\n    let successful;\r\n    try {\r\n        element = document.createElement('textarea');\r\n        element.contentEditable = true;\r\n        element.readOnly = true;\r\n        element.value = text;\r\n        element.style.all = 'unset';\r\n        element.style.position = 'fixed';\r\n        element.style.top = 0;\r\n        element.style.clip = 'rect(0, 0, 0, 0)';\r\n        element.style.whiteSpace = 'pre';\r\n        element.style.webkitUserSelect = 'text';\r\n        element.style.MozUserSelect = 'text';\r\n        element.style.msUserSelect = 'text';\r\n        element.style.userSelect = 'text';\r\n\r\n        document.body.appendChild(element);\r\n\r\n        element.focus();\r\n        element.select();\r\n\r\n        successful = document.execCommand('copy');\r\n        if (!successful) {\r\n            throw new Error();\r\n        }\r\n        return true;\r\n    } catch {\r\n        console.error('[clipboard] unable to copy with document.execCommand', successful);\r\n    } finally {\r\n        if (element) {\r\n            document.body.removeChild(element);\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport OptionStore from '../Stores/OptionStore';\r\n\r\nlet cyrillicInput = null;\r\n\r\nfunction getCyrillicInputMap() {\r\n    return new Map([\r\n        ['q', 'й'],\r\n        ['w', 'ц'],\r\n        ['e', 'у'],\r\n        ['r', 'к'],\r\n        ['t', 'е'],\r\n        ['y', 'н'],\r\n        ['u', 'г'],\r\n        ['i', 'ш'],\r\n        ['o', 'щ'],\r\n        ['p', 'з'],\r\n        ['[', 'х'],\r\n        [']', 'ъ'],\r\n        ['a', 'ф'],\r\n        ['s', 'ы'],\r\n        ['d', 'в'],\r\n        ['f', 'а'],\r\n        ['g', 'п'],\r\n        ['h', 'р'],\r\n        ['j', 'о'],\r\n        ['k', 'л'],\r\n        ['l', 'д'],\r\n        [';', 'ж'],\r\n        [\"'\", 'э'],\r\n        ['\\\\', 'ё'],\r\n        ['z', 'я'],\r\n        ['x', 'ч'],\r\n        ['c', 'с'],\r\n        ['v', 'м'],\r\n        ['b', 'и'],\r\n        ['n', 'т'],\r\n        ['m', 'ь'],\r\n        [',', 'б'],\r\n        ['.', 'ю']\r\n    ]);\r\n}\r\n\r\nfunction isCyrillicPackId(packId) {\r\n    if (!packId) return false;\r\n\r\n    const { value } = packId;\r\n    if (!value) return false;\r\n\r\n    return value.value === 'ru';\r\n}\r\n\r\nfunction getCyrillicInput(input) {\r\n    if (!input) return null;\r\n    if (!input.length) return null;\r\n\r\n    const currentPackId = OptionStore.get('language_pack_id');\r\n    const suggestedPackId = OptionStore.get('suggested_language_pack_id');\r\n    const hasCyrillicPackId = isCyrillicPackId(currentPackId) || isCyrillicPackId(suggestedPackId);\r\n    if (!hasCyrillicPackId) return null;\r\n\r\n    cyrillicInput = cyrillicInput || getCyrillicInputMap();\r\n\r\n    let output = '';\r\n    for (let i = 0; i < input.length; i++) {\r\n        if (cyrillicInput.has(input[i])) {\r\n            output += cyrillicInput.get(input[i]);\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    return output === '' ? null : output;\r\n}\r\n\r\nlet latinInput = null;\r\n\r\nfunction getLatinInputMap() {\r\n    return new Map([\r\n        ['й', 'q'],\r\n        ['ц', 'w'],\r\n        ['у', 'e'],\r\n        ['к', 'r'],\r\n        ['е', 't'],\r\n        ['н', 'y'],\r\n        ['г', 'u'],\r\n        ['ш', 'i'],\r\n        ['щ', 'o'],\r\n        ['з', 'p'],\r\n        ['х', '['],\r\n        ['ъ', ']'],\r\n        ['ф', 'a'],\r\n        ['ы', 's'],\r\n        ['в', 'd'],\r\n        ['а', 'f'],\r\n        ['п', 'g'],\r\n        ['р', 'h'],\r\n        ['о', 'j'],\r\n        ['л', 'k'],\r\n        ['д', 'l'],\r\n        ['ж', ';'],\r\n        ['э', \"'\"],\r\n        ['ё', '\\\\'],\r\n        ['я', 'z'],\r\n        ['ч', 'x'],\r\n        ['с', 'c'],\r\n        ['м', 'v'],\r\n        ['и', 'b'],\r\n        ['т', 'n'],\r\n        ['ь', 'm'],\r\n        ['б', ','],\r\n        ['ю', '.']\r\n    ]);\r\n}\r\n\r\nfunction getLatinInput(input) {\r\n    if (!input) return null;\r\n    if (!input.length) return null;\r\n\r\n    latinInput = latinInput || getLatinInputMap();\r\n\r\n    let output = '';\r\n    for (let i = 0; i < input.length; i++) {\r\n        if (latinInput.has(input[i])) {\r\n            output += latinInput.get(input[i]);\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    return output === '' ? null : output;\r\n}\r\n\r\nexport { getCyrillicInput, getLatinInput };\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from '../../Utils/HOC';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { withSnackbar } from 'notistack';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport ForwardTargetChat from '../Tile/ForwardTargetChat';\r\nimport { copy } from '../../Utils/Text';\r\nimport { canSendMessages, getChatTitle, getChatUsername, isSupergroup } from '../../Utils/Chat';\r\nimport { loadChatsContent } from '../../Utils/File';\r\nimport { getCyrillicInput, getLatinInput } from '../../Utils/Language';\r\nimport { clearSelection, forward } from '../../Actions/Client';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './ForwardDialog.css';\r\n\r\nclass ForwardDialog extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            chatIds: [],\r\n            savedMessages: null\r\n        };\r\n\r\n        this.searchRef = React.createRef();\r\n        this.messageRef = React.createRef();\r\n\r\n        this.targetChats = new Map();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadContent();\r\n\r\n        this.setSearchFocus();\r\n    }\r\n\r\n    loadContent = async () => {\r\n        this.getPublicMessageLink();\r\n\r\n        const promises = [];\r\n        const getChatsPromise = TdLibController.send({\r\n            '@type': 'getChats',\r\n            offset_order: '9223372036854775807',\r\n            offset_chat_id: 0,\r\n            limit: 100\r\n        });\r\n        promises.push(getChatsPromise);\r\n\r\n        const savedMessagesPromise = TdLibController.send({\r\n            '@type': 'createPrivateChat',\r\n            user_id: UserStore.getMyId(),\r\n            force: true\r\n        });\r\n        promises.push(savedMessagesPromise);\r\n\r\n        const [chats, savedMessages] = await Promise.all(promises.map(x => x.catch(e => null)));\r\n\r\n        this.setState({\r\n            chatIds: chats.chat_ids,\r\n            savedMessages: savedMessages\r\n        });\r\n\r\n        const store = FileStore.getStore();\r\n        loadChatsContent(store, chats.chat_ids);\r\n    };\r\n\r\n    getPublicMessageLink = async () => {\r\n        const { chatId, messageIds } = this.props;\r\n        if (!chatId) return;\r\n        if (!messageIds) return;\r\n        if (messageIds.length > 1) return;\r\n        if (!isSupergroup(chatId)) return;\r\n        if (!getChatUsername(chatId)) return;\r\n\r\n        const result = await TdLibController.send({\r\n            '@type': 'getPublicMessageLink',\r\n            chat_id: chatId,\r\n            message_id: messageIds[0],\r\n            for_album: false\r\n        });\r\n\r\n        this.setState({\r\n            publicMessageLink: result\r\n        });\r\n    };\r\n\r\n    handleClose = () => {\r\n        forward(null);\r\n    };\r\n\r\n    handleCopyLink = () => {\r\n        const { t } = this.props;\r\n        const { publicMessageLink } = this.state;\r\n\r\n        if (!publicMessageLink) return;\r\n        if (!publicMessageLink.link) return;\r\n\r\n        copy(publicMessageLink.link);\r\n\r\n        this.handleScheduledAction(t('LinkCopied'));\r\n    };\r\n\r\n    handleScheduledAction = message => {\r\n        const { enqueueSnackbar, closeSnackbar } = this.props;\r\n\r\n        const snackKey = enqueueSnackbar(message, {\r\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\r\n            preventDuplicate: true,\r\n            action: [\r\n                <IconButton\r\n                    key='close'\r\n                    aria-label='Close'\r\n                    color='inherit'\r\n                    className='notification-close-button'\r\n                    onClick={() => closeSnackbar(snackKey)}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ]\r\n        });\r\n    };\r\n\r\n    getForwardPhotoSize = (chatId, messageIds) => {\r\n        if (messageIds.length !== 1) return null;\r\n\r\n        const message = MessageStore.get(chatId, messageIds[0]);\r\n        if (!message) return null;\r\n\r\n        const { can_be_forwarded, content } = message;\r\n        if (!can_be_forwarded && content['@type'] === 'messageChatChangePhoto') {\r\n            const { photo } = content;\r\n            if (!photo) return null;\r\n\r\n            const { sizes } = photo;\r\n            if (sizes && sizes.length) {\r\n                return sizes[sizes.length - 1];\r\n            }\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    handleSend = () => {\r\n        this.handleClose();\r\n        clearSelection();\r\n\r\n        const { chatId, messageIds, inputMessageContent } = this.props;\r\n        if (!chatId && !messageIds && !inputMessageContent) return;\r\n\r\n        const text = this.getInnerText(this.messageRef.current);\r\n\r\n        this.targetChats.forEach(targetChatId => {\r\n            if (inputMessageContent) {\r\n                if (text) {\r\n                    if ('caption' in inputMessageContent) {\r\n                        inputMessageContent.caption = {\r\n                            '@type': 'formattedText',\r\n                            text,\r\n                            entities: null\r\n                        };\r\n                    } else {\r\n                        TdLibController.send({\r\n                            '@type': 'sendMessage',\r\n                            chat_id: targetChatId,\r\n                            reply_to_message_id: 0,\r\n                            disable_notifications: false,\r\n                            from_background: false,\r\n                            reply_markup: null,\r\n                            input_message_content: {\r\n                                '@type': 'inputMessageText',\r\n                                text: {\r\n                                    '@type': 'formattedText',\r\n                                    text,\r\n                                    entities: null\r\n                                },\r\n                                disable_web_page_preview: false,\r\n                                clear_draft: false\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n\r\n                TdLibController.send({\r\n                    '@type': 'sendMessage',\r\n                    chat_id: targetChatId,\r\n                    reply_to_message_id: 0,\r\n                    disable_notifications: false,\r\n                    from_background: false,\r\n                    reply_markup: null,\r\n                    input_message_content: inputMessageContent\r\n                });\r\n\r\n                return;\r\n            }\r\n\r\n            const size = this.getForwardPhotoSize(chatId, messageIds);\r\n            if (size) {\r\n                const { width, height, photo } = size;\r\n\r\n                TdLibController.send({\r\n                    '@type': 'sendMessage',\r\n                    chat_id: targetChatId,\r\n                    reply_to_message_id: 0,\r\n                    disable_notifications: false,\r\n                    from_background: false,\r\n                    reply_markup: null,\r\n                    input_message_content: {\r\n                        '@type': 'inputMessagePhoto',\r\n                        photo: {\r\n                            '@type': 'inputFileId',\r\n                            id: photo.id\r\n                        },\r\n                        thumbnail: null,\r\n                        added_sticker_file_ids: [],\r\n                        width: width,\r\n                        height: height,\r\n                        caption: {\r\n                            '@type': 'formattedText',\r\n                            text,\r\n                            entities: null\r\n                        },\r\n                        ttl: 0\r\n                    }\r\n                });\r\n\r\n                return;\r\n            }\r\n\r\n            if (text) {\r\n                TdLibController.send({\r\n                    '@type': 'sendMessage',\r\n                    chat_id: targetChatId,\r\n                    reply_to_message_id: 0,\r\n                    disable_notifications: false,\r\n                    from_background: false,\r\n                    reply_markup: null,\r\n                    input_message_content: {\r\n                        '@type': 'inputMessageText',\r\n                        text: {\r\n                            '@type': 'formattedText',\r\n                            text,\r\n                            entities: null\r\n                        },\r\n                        disable_web_page_preview: false,\r\n                        clear_draft: false\r\n                    }\r\n                });\r\n            }\r\n\r\n            TdLibController.send({\r\n                '@type': 'forwardMessages',\r\n                chat_id: targetChatId,\r\n                from_chat_id: chatId,\r\n                message_ids: messageIds,\r\n                disable_notifications: false,\r\n                from_background: false,\r\n                as_album: false\r\n            });\r\n        });\r\n    };\r\n\r\n    handleChangeSelection = chatId => {\r\n        if (this.targetChats.has(chatId)) {\r\n            this.targetChats.delete(chatId);\r\n        } else {\r\n            this.targetChats.set(chatId, chatId);\r\n        }\r\n\r\n        // console.log(this.targetChats);\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    getInnerText = element => {\r\n        const { innerHTML } = element;\r\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\r\n            element.innerHTML = null;\r\n        }\r\n        const { innerText } = element;\r\n\r\n        return innerText;\r\n    };\r\n\r\n    handleSearchKeyDown = event => {\r\n        if (event.keyCode === 13) {\r\n            event.preventDefault();\r\n        }\r\n    };\r\n\r\n    handleSearchKeyUp = async () => {\r\n        const { chatIds, savedMessages } = this.state;\r\n\r\n        const element = this.searchRef.current;\r\n        if (!element) return;\r\n\r\n        const { innerHTML } = element;\r\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\r\n            element.innerHTML = null;\r\n        }\r\n\r\n        const innerText = this.getInnerText(element).trim();\r\n        if (!innerText) {\r\n            this.setState({ searchText: null, searchResults: [], globalSearchResults: [] });\r\n            return;\r\n        }\r\n\r\n        const latinText = getLatinInput(innerText);\r\n        const cyrillicText = getCyrillicInput(innerText);\r\n\r\n        const chatsSource = savedMessages\r\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\r\n            : chatIds;\r\n\r\n        const searchResults = chatsSource.filter(\r\n            x =>\r\n                this.hasSearchText(x, innerText) ||\r\n                (latinText && this.hasSearchText(x, latinText)) ||\r\n                (cyrillicText && this.hasSearchText(x, cyrillicText))\r\n        );\r\n\r\n        this.setState({ searchText: innerText, searchResults });\r\n\r\n        const result = await TdLibController.send({\r\n            '@type': 'searchChatsOnServer',\r\n            query: innerText,\r\n            limit: 100\r\n        });\r\n\r\n        if (this.state.searchText !== innerText) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            globalSearchResults: result.chat_ids\r\n        });\r\n    };\r\n\r\n    handleSearchPaste = event => {\r\n        const plainText = event.clipboardData.getData('text/plain');\r\n        if (plainText) {\r\n            event.preventDefault();\r\n            document.execCommand('insertText', false, plainText);\r\n        }\r\n    };\r\n\r\n    handleMessageKeyUp = () => {\r\n        const element = this.messageRef.current;\r\n        if (!element) return;\r\n\r\n        const { innerHTML } = element;\r\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\r\n            element.innerHTML = null;\r\n        }\r\n    };\r\n\r\n    handleMessagePaste = event => {\r\n        const plainText = event.clipboardData.getData('text/plain');\r\n        if (plainText) {\r\n            event.preventDefault();\r\n            document.execCommand('insertText', false, plainText);\r\n        }\r\n    };\r\n\r\n    hasSearchText = (chatId, searchText) => {\r\n        const { t } = this.props;\r\n        const { savedMessages } = this.state;\r\n\r\n        if (savedMessages && chatId === savedMessages.id) {\r\n            const title = getChatTitle(chatId, true, t) || '';\r\n            if (title.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        const title1 = getChatTitle(chatId, false, t) || '';\r\n        if (title1.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\r\n            return true;\r\n        }\r\n\r\n        const username = getChatUsername(chatId) || '';\r\n        if (username.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    setSearchFocus = () => {\r\n        setTimeout(() => {\r\n            if (this.searchRef.current) {\r\n                const element = this.searchRef.current;\r\n\r\n                element.focus();\r\n            }\r\n        }, 100);\r\n    };\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        const {\r\n            chatIds,\r\n            searchText,\r\n            searchResults,\r\n            globalSearchResults,\r\n            savedMessages,\r\n            publicMessageLink\r\n        } = this.state;\r\n\r\n        const chatsSource = savedMessages\r\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\r\n            : chatIds;\r\n\r\n        const chats = chatsSource.map(x => (\r\n            <ForwardTargetChat\r\n                key={x}\r\n                chatId={x}\r\n                selected={this.targetChats.has(x)}\r\n                onSelect={() => this.handleChangeSelection(x)}\r\n            />\r\n        ));\r\n\r\n        const searchResultsMap = new Map((searchResults || []).map(x => [x, x]));\r\n        const filteredResults = (globalSearchResults || []).filter(\r\n            x => x !== savedMessages.id && canSendMessages(x) && !searchResultsMap.has(x)\r\n        );\r\n\r\n        const foundChats = (searchResults || [])\r\n            .concat(filteredResults)\r\n            .map(x => (\r\n                <ForwardTargetChat\r\n                    key={x}\r\n                    chatId={x}\r\n                    selected={this.targetChats.has(x)}\r\n                    onSelect={() => this.handleChangeSelection(x)}\r\n                />\r\n            ));\r\n\r\n        return (\r\n            <Dialog\r\n                open\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                onClose={this.handleClose}\r\n                aria-labelledby='forward-dialog-title'\r\n                aria-describedby='forward-dialog-description'\r\n                className='forward-dialog'>\r\n                <DialogTitle id='forward-dialog-title'>{t('ShareSendTo')}</DialogTitle>\r\n                <div\r\n                    ref={this.searchRef}\r\n                    id='forward-dialog-search'\r\n                    className='scrollbars-hidden'\r\n                    contentEditable\r\n                    suppressContentEditableWarning\r\n                    placeholder={t('Search')}\r\n                    onKeyDown={this.handleSearchKeyDown}\r\n                    onKeyUp={this.handleSearchKeyUp}\r\n                    onPaste={this.handleSearchPaste}\r\n                />\r\n                <div className='forward-dialog-content'>\r\n                    <div className='forward-dialog-list'>{chats}</div>\r\n                    {searchText && <div className='forward-dialog-search-list'>{foundChats}</div>}\r\n                </div>\r\n                {this.targetChats.size > 0 && (\r\n                    <div\r\n                        ref={this.messageRef}\r\n                        id='forward-dialog-message'\r\n                        contentEditable\r\n                        suppressContentEditableWarning\r\n                        placeholder={t('ShareComment')}\r\n                        onKeyUp={this.handleMessageKeyUp}\r\n                        onPaste={this.handleMessagePaste}\r\n                    />\r\n                )}\r\n                <DialogActions>\r\n                    <Button onClick={this.handleClose} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    {this.targetChats.size > 0 && (\r\n                        <Button onClick={this.handleSend} color='primary' autoFocus>\r\n                            {t('Send')}\r\n                        </Button>\r\n                    )}\r\n                    {!this.targetChats.size && publicMessageLink && (\r\n                        <Button onClick={this.handleCopyLink} color='primary'>\r\n                            {t('CopyLink')}\r\n                        </Button>\r\n                    )}\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nForwardDialog.propTypes = {\r\n    chatId: PropTypes.number,\r\n    messageIds: PropTypes.array,\r\n    inputMessageContent: PropTypes.object\r\n};\r\n\r\nconst enhance = compose(\r\n    withTranslation(),\r\n    withSnackbar\r\n);\r\n\r\nexport default enhance(ForwardDialog);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M12.1715729,2 C12.9672223,2 13.7302841,2.31607052 14.2928932,2.87867966 L21.1213203,9.70710678 C21.6839295,10.2697159 22,11.0327777 22,11.8284271 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L12.1715729,2 Z M11,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,19 C4,19.5522847 4.44771525,20 5,20 L19,20 C19.5522847,20 20,19.5522847 20,19 L20,13 L14,13 C12.4023191,13 11.0963391,11.75108 11.0050927,10.1762728 L11,10 L11,4 Z M19.586,11 L13,4.414 L13,10 C13,10.5128358 13.3860402,10.9355072 13.8833789,10.9932723 L14,11 L19.586,11 Z' />,\r\n    'Document2'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M19,2 C20.6568542,2 22,3.34314575 22,5 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L19,2 Z M8.95903938,14.4653367 L8.89694708,14.4202095 C8.68789701,14.291568 8.42133316,14.3352159 8.26303498,14.5116789 L8.2090719,14.5840012 L4.88033327,19.9929138 L4.93969424,19.9982115 L4.93969424,19.9982115 L12.446,20 L9.05890452,14.5810435 C9.0316623,14.5374559 8.99794603,14.4984621 8.95903938,14.4653367 L8.89694708,14.4202095 L8.95903938,14.4653367 Z M15.6580762,12.1926572 C15.4476303,12.0663122 15.1815603,12.1128758 15.0252035,12.2910614 L14.9720355,12.3639701 L12.551,16.396 L14.803,20 L19,20 C19.5410622,20 19.9817615,19.5702952 19.9994483,19.0335352 L15.8247114,12.3563345 C15.7828678,12.2893847 15.7257647,12.2332952 15.6580762,12.1926572 Z M19,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,17.606 L6.50573804,13.5358344 C7.19919591,12.4089238 8.64230264,12.0252274 9.79631538,12.6320827 L9.94511393,12.7168756 C10.2187146,12.885239 10.4567799,13.1044297 10.6467737,13.3619985 L10.7549011,13.5210456 L11.361,14.492 L13.2573282,11.3345145 C13.9384069,10.2000794 15.3772263,9.80060652 16.5378139,10.3947912 L16.6875318,10.4779499 C16.9695672,10.6472749 17.2148477,10.8702509 17.409849,11.1335934 L17.5207081,11.2963367 L20,15.264 L20,5 C20,4.44771525 19.5522847,4 19,4 Z' />,\r\n    'SharedMedia'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M23,12L20.56,9.22L20.9,5.54L17.29,4.72L15.4,1.54L12,3L8.6,1.54L6.71,4.72L3.1,5.53L3.44,9.21L1,12L3.44,14.78L3.1,18.47L6.71,19.29L8.6,22.47L12,21L15.4,22.46L17.29,19.28L20.9,18.46L20.56,14.78L23,12M10,17L6,13L7.41,11.59L10,14.17L16.59,7.58L18,9L10,17Z' />,\r\n    'Verified'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport CheckDecagramIcon from '../../Assets/Icons/Verified';\r\nimport { getChatTitle, isChatVerified } from '../../Utils/Chat';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport './DialogTitle.css';\r\n\r\nclass DialogTitle extends React.Component {\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, t } = this.props;\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.t !== t) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\r\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\r\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\r\n    }\r\n\r\n    onFastUpdatingComplete = update => {\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onUpdateChatTitle = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (update.chat_id !== chatId) return;\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    render() {\r\n        const { t, chatId, showSavedMessages } = this.props;\r\n\r\n        const isVerified = isChatVerified(chatId);\r\n        const title = getChatTitle(chatId, showSavedMessages, t);\r\n\r\n        return (\r\n            <div className='dialog-title'>\r\n                <span className='dialog-title-span'>{title}</span>\r\n                {isVerified && <CheckDecagramIcon className='dialog-title-icon' />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nDialogTitle.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    showSavedMessages: PropTypes.bool\r\n};\r\n\r\nDialogTitle.defaultProps = {\r\n    showSavedMessages: true\r\n};\r\n\r\nexport default withTranslation()(DialogTitle);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport classNames from 'classnames';\r\nimport { getChatSubtitleWithoutTyping, isAccentChatSubtitleWithoutTyping } from '../../Utils/Chat';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\r\nimport SupergroupStore from '../../Stores/SupergroupStore';\r\nimport './DialogStatus.css';\r\n\r\nclass DialogStatus extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { chatId } = this.props;\r\n\r\n        this.state = {\r\n            prevChatId: chatId,\r\n            subtitle: getChatSubtitleWithoutTyping(chatId),\r\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\r\n        };\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.chatId !== state.prevChatId) {\r\n            const { chatId } = props;\r\n\r\n            return {\r\n                prevChatId: chatId,\r\n                subtitle: getChatSubtitleWithoutTyping(chatId),\r\n                isAccent: isAccentChatSubtitleWithoutTyping(chatId)\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId } = this.props;\r\n        const { subtitle, isAccent } = this.state;\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.subtitle !== subtitle) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.isAccent !== isAccent) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\r\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\r\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\r\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\r\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\r\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\r\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\r\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\r\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\r\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\r\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\r\n    }\r\n\r\n    onUpdateUserStatus = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n        if (!chat.type) return;\r\n\r\n        let updateSubtitle = false;\r\n        switch (chat.type['@type']) {\r\n            case 'chatTypeBasicGroup': {\r\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\r\n                if (fullInfo && fullInfo.members) {\r\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\r\n                    if (member) {\r\n                        updateSubtitle = true;\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n            case 'chatTypePrivate': {\r\n                if (chat.type.user_id === update.user_id) {\r\n                    updateSubtitle = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'chatTypeSecret': {\r\n                if (chat.type.user_id === update.user_id) {\r\n                    updateSubtitle = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'chatTypeSupergroup': {\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (updateSubtitle) {\r\n            this.updateSubtitle(chatId);\r\n        }\r\n    };\r\n\r\n    updateSubtitle = chatId => {\r\n        this.setState({\r\n            subtitle: getChatSubtitleWithoutTyping(chatId),\r\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\r\n        });\r\n    };\r\n\r\n    onUpdateUserFullInfo = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        const { type } = chat;\r\n        if (!type) return;\r\n\r\n        if (\r\n            type &&\r\n            (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') &&\r\n            type.user_id === update.user_id\r\n        ) {\r\n            this.updateSubtitle(chatId);\r\n        }\r\n    };\r\n\r\n    onUpdateBasicGroupFullInfo = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        const { type } = chat;\r\n        if (!type) return;\r\n\r\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group_id) {\r\n            this.updateSubtitle(chatId);\r\n        }\r\n    };\r\n\r\n    onUpdateSupergroupFullInfo = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        const { type } = chat;\r\n        if (!type) return;\r\n\r\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup_id) {\r\n            this.updateSubtitle(chatId);\r\n        }\r\n    };\r\n\r\n    onUpdateBasicGroup = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        const { type } = chat;\r\n        if (!type) return;\r\n\r\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group.id) {\r\n            this.updateSubtitle(chatId);\r\n        }\r\n    };\r\n\r\n    onUpdateSupergroup = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        const { type } = chat;\r\n        if (!type) return;\r\n\r\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup.id) {\r\n            this.updateSubtitle(chatId);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { subtitle: externalSubtitle } = this.props;\r\n        const { subtitle, isAccent } = this.state;\r\n\r\n        return (\r\n            <div className={classNames('dialog-status', { 'dialog-status-accent': isAccent })}>\r\n                {externalSubtitle ? externalSubtitle + ', ' : null}\r\n                {subtitle}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DialogStatus;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport ChatTile from './ChatTile';\r\nimport DialogTitle from './DialogTitle';\r\nimport DialogStatus from './DialogStatus';\r\nimport { isMeChat } from '../../Utils/Chat';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport './Chat.css';\r\n\r\nclass Chat extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { chatId } = this.props;\r\n        this.state = {\r\n            chat: ChatStore.get(chatId)\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        return nextProps.chatId !== this.props.chatId;\r\n    }\r\n\r\n    handleClick = () => {\r\n        const { chatId, onSelect } = this.props;\r\n        if (!onSelect) return;\r\n\r\n        onSelect(chatId);\r\n    };\r\n\r\n    render() {\r\n        const { chatId, subtitle, onTileSelect, showStatus, showSavedMessages, big, showTitle } = this.props;\r\n\r\n        const isSavedMessages = isMeChat(chatId);\r\n\r\n        return (\r\n            <div className={classNames('chat', { 'chat-big': big })} onClick={this.handleClick}>\r\n                <div className='chat-wrapper'>\r\n                    <ChatTile big={big} chatId={chatId} onSelect={onTileSelect} showSavedMessages={showSavedMessages} />\r\n                    {showTitle && (\r\n                        <div className='chat-inner-wrapper'>\r\n                            <div className='tile-first-row'>\r\n                                <DialogTitle chatId={chatId} showSavedMessages={showSavedMessages} />\r\n                            </div>\r\n                            {showStatus && (!isSavedMessages || !showSavedMessages) && (\r\n                                <div className='tile-second-row'>\r\n                                    <DialogStatus chatId={chatId} subtitle={subtitle} />\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nChat.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    subtitle: PropTypes.string,\r\n    showSavedMessages: PropTypes.bool,\r\n    showStatus: PropTypes.bool,\r\n    showTitle: PropTypes.bool,\r\n    onSelect: PropTypes.func,\r\n    onTileSelect: PropTypes.func\r\n};\r\n\r\nChat.defaultProps = {\r\n    showSavedMessages: true,\r\n    showStatus: true,\r\n    showTitle: true\r\n};\r\n\r\nexport default Chat;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M4.29289322,11.2928932 L11.2928932,4.29289322 C11.6834175,3.90236893 12.3165825,3.90236893 12.7071068,4.29289322 C13.0675907,4.65337718 13.0953203,5.22060824 12.7902954,5.61289944 L12.7071068,5.70710678 L7.414,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L7.414,13 L12.7071068,18.2928932 C13.0675907,18.6533772 13.0953203,19.2206082 12.7902954,19.6128994 L12.7071068,19.7071068 C12.3466228,20.0675907 11.7793918,20.0953203 11.3871006,19.7902954 L11.2928932,19.7071068 L4.29289322,12.7071068 C3.93240926,12.3466228 3.90467972,11.7793918 4.20970461,11.3871006 L4.29289322,11.2928932 L11.2928932,4.29289322 L4.29289322,11.2928932 Z' />,\r\n    'Back'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIcon from '../../Assets/Icons/Back';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport { isChannelChat, isPrivateChat } from '../../Utils/Chat';\r\nimport './ChatDetailsHeader.css';\r\n\r\nclass ChatDetailsHeader extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const { chatId, t, backButton, onClick, onClose } = this.props;\r\n\r\n        let info = t('ChatInfo');\r\n        if (isPrivateChat(chatId)) {\r\n            info = t('Info');\r\n        } else if (isChannelChat(chatId)) {\r\n            info = t('ChannelInfo');\r\n        }\r\n\r\n        return (\r\n            <div className='header-master'>\r\n                {backButton && (\r\n                    <IconButton className='header-left-button' onClick={onClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                )}\r\n                <div className='header-status grow cursor-pointer' onClick={onClick}>\r\n                    <span className='header-status-content'>{info}</span>\r\n                </div>\r\n                {!backButton && (\r\n                    <IconButton className='header-right-button' onClick={onClose}>\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTranslation()(ChatDetailsHeader);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { isChatMuted } from '../../Utils/Chat';\r\nimport { debounce } from '../../Utils/Common';\r\nimport { toggleChatNotificationSettings } from '../../Actions/Chat';\r\nimport { NOTIFICATION_DEBOUNCE_DELAY_MS } from '../../Constants';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport NotificationStore from '../../Stores/NotificationStore';\r\n\r\nclass Notifications extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { chatId } = props;\r\n\r\n        this.state = {\r\n            prevChatId: chatId,\r\n            isMuted: isChatMuted(chatId)\r\n        };\r\n\r\n        this.debouncedSetChatNotificationSettings = debounce(\r\n            this.setChatNotificationSettings,\r\n            NOTIFICATION_DEBOUNCE_DELAY_MS\r\n        );\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.chatId !== state.prevChatId) {\r\n            const { chatId } = props;\r\n\r\n            return {\r\n                prevChatId: chatId,\r\n                isMuted: isChatMuted(chatId)\r\n            };\r\n        }\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        ChatStore.on('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\r\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ChatStore.off('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\r\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\r\n    }\r\n\r\n    onUpdateChatNotificationSettings = update => {\r\n        const { chat_id } = update;\r\n        const { chatId } = this.props;\r\n\r\n        if (!chat_id) return;\r\n        if (chat_id !== chatId) return;\r\n\r\n        this.setState({ isMuted: isChatMuted(chatId) });\r\n    };\r\n\r\n    onUpdateScopeNotificationSettings = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n\r\n        switch (update.scope['@type']) {\r\n            case 'notificationSettingsScopeGroupChats': {\r\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\r\n                    this.setState({ isMuted: isChatMuted(chatId) });\r\n                }\r\n                break;\r\n            }\r\n            case 'notificationSettingsScopePrivateChats': {\r\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\r\n                    this.setState({ isMuted: isChatMuted(chatId) });\r\n                }\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    handleSetChatNotifications = () => {\r\n        this.setState({ isMuted: !this.state.isMuted });\r\n        this.debouncedSetChatNotificationSettings();\r\n    };\r\n\r\n    setChatNotificationSettings = () => {\r\n        const { chatId } = this.props;\r\n        const { isMuted } = this.state;\r\n\r\n        toggleChatNotificationSettings(chatId, isMuted);\r\n    };\r\n}\r\n\r\nexport default Notifications;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Notifications from '../ColumnMiddle/Notifications';\r\n\r\nclass NotificationsListItem extends Notifications {\r\n    render() {\r\n        const { t } = this.props;\r\n        const { isMuted } = this.state;\r\n\r\n        return (\r\n            <ListItem button className='list-item' onClick={this.handleSetChatNotifications}>\r\n                <ListItemIcon>{!isMuted ? <NotificationsActiveIcon /> : <NotificationsIcon />}</ListItemIcon>\r\n                <ListItemText\r\n                    primary={\r\n                        <Typography variant='inherit' noWrap>\r\n                            {t('Notifications')}\r\n                        </Typography>\r\n                    }\r\n                />\r\n                <ListItemSecondaryAction>\r\n                    <Switch color='primary' onChange={this.handleSetChatNotifications} checked={!isMuted} />\r\n                </ListItemSecondaryAction>\r\n            </ListItem>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTranslation()(NotificationsListItem);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { compose } from '../../Utils/HOC';\r\nimport { withSnackbar } from 'notistack';\r\nimport { withTranslation } from 'react-i18next';\r\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\r\nimport GroupIcon from '@material-ui/icons/Group';\r\nimport CallIcon from '@material-ui/icons/Call';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\r\nimport HeadsetIcon from '@material-ui/icons/Headset';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\r\nimport InsertLinkIcon from '@material-ui/icons/InsertLink';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\nimport User from '../Tile/User';\r\nimport Chat from '../Tile/Chat';\r\nimport ChatDetailsHeader from './ChatDetailsHeader';\r\nimport NotificationsListItem from './NotificationsListItem';\r\nimport { copy } from '../../Utils/Text';\r\nimport { getFormattedText, getUrlMentionHashtagEntities } from '../../Utils/Message';\r\nimport {\r\n    getChatUsername,\r\n    getChatPhoneNumber,\r\n    getChatBio,\r\n    isGroupChat,\r\n    getGroupChatMembers,\r\n    getChatFullInfo,\r\n    isPrivateChat,\r\n    isMeChat, isChannelChat\r\n} from '../../Utils/Chat';\r\nimport { getUserStatusOrder } from '../../Utils/User';\r\nimport { loadUsersContent, loadChatsContent } from '../../Utils/File';\r\nimport { formatPhoneNumber } from '../../Utils/Phone';\r\nimport { openChat, openUser, setProfileMediaViewerContent } from '../../Actions/Client';\r\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\r\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\r\nimport SupergroupStore from '../../Stores/SupergroupStore';\r\nimport OptionStore from '../../Stores/OptionStore';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './ChatDetails.css';\r\n\r\nclass ChatDetails extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.chatDetailsListRef = React.createRef();\r\n\r\n        const { chatId } = this.props;\r\n\r\n        this.members = new Map();\r\n        this.state = {\r\n            prevChatId: chatId\r\n        };\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.chatId !== state.prevChatId) {\r\n            return {\r\n                prevChatId: props.chatId\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getSnapshotBeforeUpdate(prevProps, prevState) {\r\n        const { chatId } = this.props;\r\n\r\n        const list = this.chatDetailsListRef.current;\r\n        const { scrollTop, scrollHeight, offsetHeight } = list;\r\n        const snapshot = {\r\n            scrollTop,\r\n            scrollHeight,\r\n            offsetHeight\r\n        };\r\n\r\n        // console.log(\r\n        //     `[ChatDetails] getSnapshotBeforeUpdate chatId=${chatId} scrollTop=${scrollTop} scrollHeight=${scrollHeight} offsetHeight=${offsetHeight}`\r\n        // );\r\n\r\n        return snapshot;\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, theme, counters, migratedCounters } = this.props;\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.counters !== counters) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.migratedCounters !== migratedCounters) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.theme !== theme) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { chatId } = this.props;\r\n        if (prevProps.chatId !== chatId) {\r\n            this.loadContent();\r\n        }\r\n\r\n        const list = this.chatDetailsListRef.current;\r\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\r\n        if (prevProps.chatId === chatId) {\r\n            list.scrollTop = scrollTop;\r\n        } else {\r\n            list.scrollTop = 0;\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadContent();\r\n\r\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\r\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\r\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\r\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\r\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\r\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\r\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\r\n    }\r\n\r\n    onUpdateBasicGroupFullInfo = update => {\r\n        const chat = ChatStore.get(this.props.chatId);\r\n        if (!chat) return;\r\n\r\n        if (\r\n            chat.type &&\r\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\r\n            chat.type.basic_group_id === update.basic_group_id\r\n        ) {\r\n            this.forceUpdate(); // update bio\r\n        }\r\n    };\r\n\r\n    onUpdateSupergroupFullInfo = update => {\r\n        const chat = ChatStore.get(this.props.chatId);\r\n        if (!chat) return;\r\n\r\n        if (\r\n            chat.type &&\r\n            chat.type['@type'] === 'chatTypeSupergroup' &&\r\n            chat.type.supergroup_id === update.supergroup_id\r\n        ) {\r\n            this.forceUpdate(); // update bio\r\n        }\r\n    };\r\n\r\n    onUpdateUserFullInfo = update => {\r\n        const chat = ChatStore.get(this.props.chatId);\r\n        if (!chat) return;\r\n\r\n        if (\r\n            chat.type &&\r\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\r\n            chat.type.user_id === update.user_id\r\n        ) {\r\n            this.forceUpdate(); // update bio\r\n        }\r\n    };\r\n\r\n    onUpdateUserStatus = update => {\r\n        if (this.members.has(update.user_id)) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    loadContent = () => {\r\n        this.loadChatContents();\r\n    };\r\n\r\n    loadChatContents = () => {\r\n        const { chatId, popup } = this.props;\r\n\r\n        const store = FileStore.getStore();\r\n\r\n        loadChatsContent(store, [chatId]);\r\n        const members = getGroupChatMembers(chatId).map(x => x.user_id);\r\n        loadUsersContent(store, members);\r\n\r\n        if (popup) {\r\n            getChatFullInfo(chatId);\r\n        }\r\n    };\r\n\r\n    handleUsernameHint = () => {\r\n        const { t, chatId } = this.props;\r\n        const username = getChatUsername(chatId);\r\n        if (!username) return;\r\n\r\n        const telegramUrlOption = OptionStore.get('t_me_url');\r\n        const usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/';\r\n\r\n        copy(usernameLink + username);\r\n\r\n        this.handleScheduledAction(t('LinkCopied'));\r\n    };\r\n\r\n    handleScheduledAction = message => {\r\n        const { enqueueSnackbar, closeSnackbar } = this.props;\r\n\r\n        const snackKey = enqueueSnackbar(message, {\r\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\r\n            preventDuplicate: true,\r\n            action: [\r\n                <IconButton\r\n                    key='close'\r\n                    aria-label='Close'\r\n                    color='inherit'\r\n                    className='notification-close-button'\r\n                    onClick={() => {\r\n                        closeSnackbar(snackKey);\r\n                    }}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ]\r\n        });\r\n    };\r\n\r\n    handlePhoneHint = () => {\r\n        const { t, chatId } = this.props;\r\n        const phoneNumber = getChatPhoneNumber(chatId);\r\n        if (!phoneNumber) return;\r\n\r\n        copy(formatPhoneNumber(phoneNumber));\r\n\r\n        this.handleScheduledAction(t('PhoneCopied'));\r\n    };\r\n\r\n    handleHeaderClick = () => {\r\n        this.chatDetailsListRef.current.scrollTop = 0;\r\n    };\r\n\r\n    handleOpenViewer = () => {\r\n        const { chatId, popup } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n        if (!chat.photo) return;\r\n\r\n        setProfileMediaViewerContent({ chatId });\r\n\r\n        if (popup) {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateDialogChatId',\r\n                chatId: 0\r\n            });\r\n        }\r\n    };\r\n\r\n    handleOpenChat = () => {\r\n        const { chatId, popup } = this.props;\r\n\r\n        openChat(chatId, null, false);\r\n\r\n        if (popup) {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateDialogChatId',\r\n                chatId: 0\r\n            });\r\n        }\r\n    };\r\n\r\n    handleOpenUser = userId => {\r\n        openUser(userId, true);\r\n    };\r\n\r\n    getContentHeight = () => {\r\n        if (!this.chatDetailsListRef) return 0;\r\n\r\n        return this.chatDetailsListRef.current.clientHeight;\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            backButton,\r\n            className,\r\n            chatId,\r\n            onClose,\r\n            onOpenGroupInCommon,\r\n            onOpenSharedAudios,\r\n            onOpenSharedDocuments,\r\n            onOpenSharedLinks,\r\n            onOpenSharedMedia,\r\n            onOpenSharedPhotos,\r\n            onOpenSharedVideos,\r\n            onOpenSharedVoiceNotes,\r\n            popup,\r\n            t\r\n        } = this.props;\r\n\r\n        let { counters, migratedCounters } = this.props;\r\n        counters = counters || [0, 0, 0, 0, 0, 0];\r\n        migratedCounters = migratedCounters || [0, 0, 0, 0, 0, 0];\r\n\r\n        const [photoCount, videoCount, documentCount, audioCount, urlCount, voiceAndVideoNoteCount] = counters.map(\r\n            (el, i) => el + migratedCounters[i]\r\n        );\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) {\r\n            return (\r\n                <div className='chat-details'>\r\n                    <ChatDetailsHeader onClose={onClose} />\r\n                    <div ref={this.chatDetailsListRef} className={classNames('chat-details-list', 'scrollbars-hidden')} />\r\n                </div>\r\n            );\r\n        }\r\n\r\n        let groupInCommonCount = 0;\r\n        if (isPrivateChat(chatId)) {\r\n            const fullInfo = UserStore.getFullInfo(chat.type.user_id);\r\n            groupInCommonCount = fullInfo ? fullInfo.group_in_common_count : groupInCommonCount;\r\n        }\r\n\r\n        const username = getChatUsername(chatId);\r\n        const phoneNumber = getChatPhoneNumber(chatId);\r\n        let bio = getChatBio(chatId);\r\n        const isGroup = isGroupChat(chatId);\r\n        const isMe = isMeChat(chatId);\r\n\r\n        const members = getGroupChatMembers(chatId);\r\n        const users = [];\r\n        this.members = new Map();\r\n        members.forEach(member => {\r\n            const user = UserStore.get(member.user_id);\r\n            if (user) {\r\n                this.members.set(user.id, user.id);\r\n                users.push(user);\r\n            }\r\n        });\r\n\r\n        const sortedUsers = users.sort((x, y) => {\r\n            return getUserStatusOrder(y) - getUserStatusOrder(x);\r\n        });\r\n        const items = sortedUsers.map(user => (\r\n            <ListItem button className='list-item' key={user.id}>\r\n                <User userId={user.id} onSelect={this.handleOpenUser} />\r\n            </ListItem>\r\n        ));\r\n\r\n        const { photo } = chat;\r\n\r\n        if (isGroupChat(chatId) || isChannelChat(chatId)) {\r\n            const { text: bioText, entities: bioEntities } = getUrlMentionHashtagEntities(bio, []);\r\n            if (bioEntities.length > 0) {\r\n                bio = getFormattedText({ '@type': 'formattedText', text: bioText, entities: bioEntities });\r\n            }\r\n        }\r\n\r\n        const content = (\r\n            <>\r\n                <ChatDetailsHeader\r\n                    chatId={chatId}\r\n                    backButton={backButton}\r\n                    onClose={onClose}\r\n                    onClick={this.handleHeaderClick}\r\n                />\r\n                <div ref={this.chatDetailsListRef} className={classNames('chat-details-list', 'scrollbars-hidden')}>\r\n                    <div className='chat-details-info'>\r\n                        <Chat\r\n                            chatId={chatId}\r\n                            big={true}\r\n                            showStatus={true}\r\n                            showSavedMessages={!popup}\r\n                            onTileSelect={photo ? this.handleOpenViewer : null}\r\n                        />\r\n                    </div>\r\n                    {(username || phoneNumber || bio) && (\r\n                        <>\r\n                            <List>\r\n                                {username && (\r\n                                    <ListItem button className='list-item' onClick={this.handleUsernameHint}>\r\n                                        <ListItemIcon>\r\n                                            <AlternateEmailIcon />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText\r\n                                            primary={\r\n                                                <Typography variant='inherit' noWrap>\r\n                                                    {username}\r\n                                                </Typography>\r\n                                            }\r\n                                        />\r\n                                    </ListItem>\r\n                                )}\r\n                                {phoneNumber && (\r\n                                    <>\r\n                                        <ListItem button className='list-item' onClick={this.handlePhoneHint}>\r\n                                            <ListItemIcon>\r\n                                                <CallIcon />\r\n                                            </ListItemIcon>\r\n                                            <ListItemText\r\n                                                primary={\r\n                                                    <Typography variant='inherit' noWrap>\r\n                                                        {formatPhoneNumber(phoneNumber)}\r\n                                                    </Typography>\r\n                                                }\r\n                                            />\r\n                                        </ListItem>\r\n                                    </>\r\n                                )}\r\n                                {bio && (\r\n                                    <ListItem className='list-item' alignItems='flex-start'>\r\n                                        <ListItemIcon>\r\n                                            <ErrorOutlineIcon className='chat-details-info-icon' />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText\r\n                                            primary={bio}\r\n                                            style={{ whiteSpace: 'pre-wrap', wordWrap: 'break-word' }}\r\n                                        />\r\n                                    </ListItem>\r\n                                )}\r\n                            </List>\r\n                        </>\r\n                    )}\r\n                    {(!isMe || isGroup || (popup && !isGroup)) && (\r\n                        <>\r\n                            <Divider />\r\n                            <List>\r\n                                {!isMe && <NotificationsListItem chatId={chatId} />}\r\n                                {/*{isGroup && <MoreListItem chatId={chatId} />}*/}\r\n                                {popup && !isGroup && (\r\n                                    <ListItem button className='list-item' onClick={this.handleOpenChat}>\r\n                                        <ListItemText\r\n                                            primary={\r\n                                                <Typography color='primary' variant='inherit' noWrap>\r\n                                                    {t('SendMessage').toUpperCase()}\r\n                                                </Typography>\r\n                                            }\r\n                                            style={{ paddingLeft: 40 }}\r\n                                        />\r\n                                    </ListItem>\r\n                                )}\r\n                            </List>\r\n                        </>\r\n                    )}\r\n                    {(photoCount > 0 ||\r\n                        videoCount > 0 ||\r\n                        documentCount > 0 ||\r\n                        audioCount > 0 ||\r\n                        urlCount > 0 ||\r\n                        voiceAndVideoNoteCount > 0 ||\r\n                        groupInCommonCount > 0) && (\r\n                        <>\r\n                            <Divider />\r\n                            <List>\r\n                                {photoCount > 0 && (\r\n                                    <ListItem button className='list-item' onClick={onOpenSharedPhotos}>\r\n                                        <ListItemIcon>\r\n                                            <PhotoIcon />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText\r\n                                            primary={\r\n                                                <Typography variant='inherit' noWrap>\r\n                                                    {photoCount === 1 ? '1 photo' : `${photoCount} photos`}\r\n                                                </Typography>\r\n                                            }\r\n                                        />\r\n                                    </ListItem>\r\n                                )}\r\n                                {videoCount > 0 && (\r\n                                    <ListItem button className='list-item' onClick={onOpenSharedVideos}>\r\n                                        <ListItemIcon>\r\n                                            <VideocamIcon />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText\r\n                                            primary={\r\n                                                <Typography variant='inherit' noWrap>\r\n                                                    {videoCount === 1 ? '1 video' : `${videoCount} videos`}\r\n                                                </Typography>\r\n                                            }\r\n                                        />\r\n                                    </ListItem>\r\n                                )}\r\n                                {documentCount > 0 && (\r\n                                    <ListItem button className='list-item' onClick={onOpenSharedDocuments}>\r\n                                        <ListItemIcon>\r\n                                            <InsertDriveFileIcon />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText\r\n                                            primary={\r\n                                                <Typography variant='inherit' noWrap>\r\n                                                    {documentCount === 1 ? '1 file' : `${documentCount} files`}\r\n                                                </Typography>\r\n                                            }\r\n                                        />\r\n                                    </ListItem>\r\n                                )}\r\n                                {audioCount > 0 && (\r\n                                    <ListItem button className='list-item' onClick={onOpenSharedAudios}>\r\n                                        <ListItemIcon>\r\n                                            <HeadsetIcon />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText\r\n                                            primary={\r\n                                                <Typography variant='inherit' noWrap>\r\n                                                    {audioCount === 1 ? '1 audio file' : `${audioCount} audio files`}\r\n                                                </Typography>\r\n                                            }\r\n                                        />\r\n                                    </ListItem>\r\n                                )}\r\n                                {urlCount > 0 && (\r\n                                    <ListItem button className='list-item' onClick={onOpenSharedLinks}>\r\n                                        <ListItemIcon>\r\n                                            <InsertLinkIcon />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText\r\n                                            primary={\r\n                                                <Typography variant='inherit' noWrap>\r\n                                                    {urlCount === 1 ? '1 shared link' : `${urlCount} shared links`}\r\n                                                </Typography>\r\n                                            }\r\n                                        />\r\n                                    </ListItem>\r\n                                )}\r\n                                {voiceAndVideoNoteCount > 0 && (\r\n                                    <ListItem button className='list-item' onClick={onOpenSharedVoiceNotes}>\r\n                                        <ListItemIcon>\r\n                                            <MicIcon />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText\r\n                                            primary={\r\n                                                <Typography variant='inherit' noWrap>\r\n                                                    {voiceAndVideoNoteCount === 1\r\n                                                        ? '1 voice message'\r\n                                                        : `${voiceAndVideoNoteCount} voice messages`}\r\n                                                </Typography>\r\n                                            }\r\n                                        />\r\n                                    </ListItem>\r\n                                )}\r\n                                {groupInCommonCount > 0 && (\r\n                                    <ListItem button className='list-item' onClick={onOpenGroupInCommon}>\r\n                                        <ListItemIcon>\r\n                                            <GroupIcon />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText\r\n                                            primary={\r\n                                                <Typography variant='inherit' noWrap>\r\n                                                    {groupInCommonCount === 1\r\n                                                        ? '1 group in common'\r\n                                                        : `${groupInCommonCount} groups in common`}\r\n                                                </Typography>\r\n                                            }\r\n                                        />\r\n                                    </ListItem>\r\n                                )}\r\n                            </List>\r\n                        </>\r\n                    )}\r\n                    {items.length > 0 && (\r\n                        <>\r\n                            <Divider />\r\n                            <List>{items}</List>\r\n                        </>\r\n                    )}\r\n                </div>\r\n            </>\r\n        );\r\n\r\n        return popup ? <>{content}</> : <div className={classNames('chat-details', className)}>{content}</div>;\r\n    }\r\n}\r\n\r\nChatDetails.propTypes = {\r\n    chatId: PropTypes.number,\r\n    popup: PropTypes.bool,\r\n    onClose: PropTypes.func,\r\n    onOpenGroupInCommon: PropTypes.func,\r\n    onOpenSharedDocuments: PropTypes.func,\r\n    onOpenSharedMedia: PropTypes.func,\r\n    onOpenSharedLinks: PropTypes.func,\r\n    onOpenSharedPhotos: PropTypes.func,\r\n    onOpenSharedVideos: PropTypes.func,\r\n    onOpenSharedVoiceNotes: PropTypes.func\r\n};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTranslation(),\r\n    withSnackbar,\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(ChatDetails);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIcon from '../../Assets/Icons/Back';\r\nimport './GroupsInCommonHeader.css';\r\n\r\nclass GroupsInCommonHeader extends React.Component {\r\n    render() {\r\n        const { onClose } = this.props;\r\n\r\n        return (\r\n            <div className='header-master'>\r\n                <IconButton className='header-left-button' onClick={onClose}>\r\n                    <ArrowBackIcon />\r\n                </IconButton>\r\n                <div className='header-status grow cursor-pointer'>\r\n                    <span className='header-status-content'>Groups in common</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nGroupsInCommonHeader.propTypes = {\r\n    onClose: PropTypes.func.isRequired\r\n};\r\n\r\nexport default GroupsInCommonHeader;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Chat from '../Tile/Chat';\r\nimport GroupsInCommonHeader from './GroupsInCommonHeader';\r\nimport { getChatUserId } from '../../Utils/Chat';\r\nimport { loadChatsContent } from '../../Utils/File';\r\nimport { openChat } from '../../Actions/Client';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './GroupsInCommon.css';\r\n\r\nclass GroupsInCommon extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            chatIds: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { chatId } = this.props;\r\n\r\n        const userId = getChatUserId(chatId);\r\n        if (!userId) return;\r\n\r\n        TdLibController.send({\r\n            '@type': 'getGroupsInCommon',\r\n            user_id: userId,\r\n            offset_chat_id: 0,\r\n            limit: 100\r\n        }).then(result => {\r\n            const store = FileStore.getStore();\r\n            loadChatsContent(store, result.chat_ids);\r\n\r\n            this.setState({ chatIds: result.chat_ids });\r\n        });\r\n    }\r\n\r\n    handleSelect = chatId => {\r\n        const { popup } = this.props;\r\n\r\n        openChat(chatId);\r\n\r\n        if (popup) {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateDialogChatId',\r\n                chatId: 0\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { minHeight, onClose, popup } = this.props;\r\n        const { chatIds } = this.state;\r\n\r\n        const chats = chatIds.map(x => (\r\n            <ListItem button key={x}>\r\n                <Chat chatId={x} onSelect={this.handleSelect} />\r\n            </ListItem>\r\n        ));\r\n\r\n        const content = (\r\n            <>\r\n                <GroupsInCommonHeader onClose={onClose} />\r\n                <div className='groups-in-common-list' style={{ minHeight }}>\r\n                    {chats}\r\n                </div>\r\n            </>\r\n        );\r\n\r\n        return popup ? <>{content}</> : <div className='groups-in-common'>{content}</div>;\r\n    }\r\n}\r\n\r\nGroupsInCommon.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    popup: PropTypes.bool,\r\n    minHeight: PropTypes.number\r\n};\r\n\r\nGroupsInCommon.defaultProps = {\r\n    popup: false,\r\n    minHeight: 0\r\n};\r\n\r\nexport default GroupsInCommon;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport { deleteMessages, forwardMessages, openChat } from '../../../Actions/Client';\r\nimport MessageStore from '../../../Stores/MessageStore';\r\nimport './ContextMenu.css';\r\n\r\nclass ContextMenu extends React.Component {\r\n    handleOpenMessage = event => {\r\n        const { chatId, messageId, onClose } = this.props;\r\n\r\n        onClose(event);\r\n\r\n        openChat(chatId, messageId);\r\n    };\r\n\r\n    handleForward = event => {\r\n        const { chatId, messageId, onClose } = this.props;\r\n\r\n        onClose(event);\r\n\r\n        forwardMessages(chatId, [messageId]);\r\n    };\r\n\r\n    handleDelete = event => {\r\n        const { chatId, messageId, onClose } = this.props;\r\n\r\n        onClose(event);\r\n\r\n        deleteMessages(chatId, [messageId]);\r\n    };\r\n\r\n    render() {\r\n        const { t, chatId, messageId, open, onClose, anchorPosition, showOpenMessage } = this.props;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return null;\r\n\r\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\r\n\r\n        return (\r\n            <Popover\r\n                open={open}\r\n                onClose={onClose}\r\n                anchorReference='anchorPosition'\r\n                anchorPosition={anchorPosition}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'right'\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'left'\r\n                }}\r\n                onMouseDown={e => e.stopPropagation()}\r\n                onClick={e => e.stopPropagation()}>\r\n                <MenuList>\r\n                    {showOpenMessage && <MenuItem onClick={this.handleOpenMessage}>{t('GoToMessage')}</MenuItem>}\r\n                    {can_be_forwarded && <MenuItem onClick={this.handleForward}>{t('Forward')}</MenuItem>}\r\n                    {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\r\n                        <MenuItem onClick={this.handleDelete}>{t('Delete')}</MenuItem>\r\n                    )}\r\n                </MenuList>\r\n            </Popover>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nContextMenu.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    anchorPosition: PropTypes.object.isRequired,\r\n    open: PropTypes.bool.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    showOpenMessage: PropTypes.bool\r\n};\r\n\r\nexport default withTranslation()(ContextMenu);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ContextMenu from './ContextMenu';\r\nimport { openMedia } from '../../../Utils/Message';\r\nimport { getMedia } from '../../../Utils/Media';\r\nimport MessageStore from '../../../Stores/MessageStore';\r\nimport './SharedDocument.css';\r\n\r\nclass SharedDocument extends React.Component {\r\n    state = {\r\n        contextMenu: false,\r\n        left: 0,\r\n        top: 0\r\n    };\r\n\r\n    handleOpenContextMenu = async event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        const { contextMenu } = this.state;\r\n\r\n        if (contextMenu) {\r\n            this.setState({ contextMenu: false });\r\n        } else {\r\n            const left = event.clientX;\r\n            const top = event.clientY;\r\n\r\n            this.setState({\r\n                contextMenu: true,\r\n                left,\r\n                top\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseContextMenu = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({ contextMenu: false });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, messageId, showOpenMessage } = this.props;\r\n        const { contextMenu, left, top } = this.state;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return null;\r\n\r\n        return (\r\n            <>\r\n                <div className='shared-document' onContextMenu={this.handleOpenContextMenu}>\r\n                    {getMedia(message, () => openMedia(chatId, messageId, true))}\r\n                </div>\r\n                <ContextMenu\r\n                    chatId={chatId}\r\n                    messageId={messageId}\r\n                    anchorPosition={{ top, left }}\r\n                    open={contextMenu}\r\n                    showOpenMessage={showOpenMessage}\r\n                    onClose={this.handleCloseContextMenu}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nSharedDocument.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    showOpenMessage: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default SharedDocument;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M9.5,3 C13.0898509,3 16,5.91014913 16,9.5 C16,10.9337106 15.5358211,12.2590065 14.7495478,13.3338028 L19.7071068,18.2928932 C20.0976311,18.6834175 20.0976311,19.3165825 19.7071068,19.7071068 C19.3466228,20.0675907 18.7793918,20.0953203 18.3871006,19.7902954 L18.2928932,19.7071068 L13.3338028,14.7495478 C12.2590065,15.5358211 10.9337106,16 9.5,16 C5.91014913,16 3,13.0898509 3,9.5 C3,5.91014913 5.91014913,3 9.5,3 Z M9.5,5 C7.01471863,5 5,7.01471863 5,9.5 C5,11.9852814 7.01471863,14 9.5,14 C11.9852814,14 14,11.9852814 14,9.5 C14,7.01471863 11.9852814,5 9.5,5 Z' />,\r\n    'Search'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\r\nimport CloseIcon from '../../../Assets/Icons/Close';\r\nimport SearchIcon from '../../../Assets/Icons/Search';\r\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\r\nimport { ANIMATION_DURATION_200MS } from '../../../Constants';\r\nimport './SharedMediaHeader.css';\r\n\r\nclass SharedMediaHeader extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.searchInputRef = React.createRef();\r\n\r\n        this.state = {\r\n            openSearch: false\r\n        };\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { openSearch } = this.state;\r\n\r\n        if (openSearch && openSearch !== prevProps.openSearch) {\r\n            setTimeout(() => {\r\n                if (this.searchInputRef.current) {\r\n                    this.searchInputRef.current.focus();\r\n                }\r\n            }, ANIMATION_DURATION_200MS);\r\n        }\r\n    }\r\n\r\n    handleSearch = () => {\r\n        if (this.searchInputRef.current) {\r\n            const innerText = this.searchInputRef.current.innerText;\r\n            if (innerText) {\r\n                this.searchInputRef.current.innerText = '';\r\n\r\n                const { onSearch } = this.props;\r\n                if (!onSearch) return;\r\n\r\n                onSearch('');\r\n                return;\r\n            }\r\n        }\r\n\r\n        const { onCloseSearch } = this.props;\r\n        const { openSearch } = this.state;\r\n\r\n        this.setState({ openSearch: !openSearch });\r\n\r\n        if (onCloseSearch) {\r\n            onCloseSearch();\r\n        }\r\n    };\r\n\r\n    handleKeyDown = event => {\r\n        if (event.keyCode === 13) {\r\n            event.preventDefault();\r\n        }\r\n    };\r\n\r\n    handleKeyUp = () => {\r\n        const element = this.searchInputRef.current;\r\n        if (!element) return;\r\n\r\n        const { innerHTML } = element;\r\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\r\n            element.innerHTML = null;\r\n        }\r\n        const { innerText } = element;\r\n\r\n        const { onSearch } = this.props;\r\n        if (!onSearch) return;\r\n\r\n        onSearch(innerText);\r\n    };\r\n\r\n    handlePaste = event => {\r\n        const plainText = event.clipboardData.getData('text/plain');\r\n        if (plainText) {\r\n            event.preventDefault();\r\n            document.execCommand('insertText', false, plainText);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { t, title, onClick, onClose, onSearch } = this.props;\r\n        const { openSearch } = this.state;\r\n\r\n        return (\r\n            <div className='header-master'>\r\n                {!openSearch ? (\r\n                    <>\r\n                        <IconButton className='header-left-button' onClick={onClose}>\r\n                            <ArrowBackIcon />\r\n                        </IconButton>\r\n                        <div className='header-status grow cursor-pointer' onClick={onClick}>\r\n                            <span className='header-status-content'>{title}</span>\r\n                        </div>\r\n                    </>\r\n                ) : (\r\n                    <>\r\n                        <div className='header-search-input grow'>\r\n                            <div\r\n                                id='header-search-inputbox'\r\n                                ref={this.searchInputRef}\r\n                                placeholder={t('Search')}\r\n                                contentEditable\r\n                                suppressContentEditableWarning\r\n                                onKeyDown={this.handleKeyDown}\r\n                                onKeyUp={this.handleKeyUp}\r\n                                onPaste={this.handlePaste}\r\n                            />\r\n                        </div>\r\n                    </>\r\n                )}\r\n                {Boolean(onSearch) && (\r\n                    <IconButton className='header-right-button' onMouseDown={this.handleSearch}>\r\n                        <SpeedDialIcon open={openSearch} icon={<SearchIcon />} openIcon={<CloseIcon />} />\r\n                    </IconButton>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSharedMediaHeader.propTypes = {\r\n    title: PropTypes.string,\r\n    onClick: PropTypes.func,\r\n    onClose: PropTypes.func,\r\n    onCloseSearch: PropTypes.func,\r\n    onSearch: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(SharedMediaHeader);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport classNames from 'classnames';\r\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\r\nimport SharedMediaHeader from './SharedMediaHeader';\r\nimport { between, insertByOrder } from '../../../Utils/Common';\r\nimport { loadMessageContents } from '../../../Utils/File';\r\nimport { messageComparatorDesc } from '../../../Utils/Message';\r\nimport { SCROLL_PRECISION, SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\r\nimport FileStore from '../../../Stores/FileStore';\r\nimport MessageStore from '../../../Stores/MessageStore';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './SharedMediaBase.css';\r\n\r\nclass SharedMediaBase extends React.Component {\r\n    getListClassName() {\r\n        return null;\r\n    }\r\n\r\n    getSearchListClassName() {\r\n        return null;\r\n    }\r\n\r\n    constructor(props) {\r\n        if (new.target === SharedMediaBase) {\r\n            throw new TypeError('Cannot construct SharedMediaBase instances directly');\r\n        }\r\n\r\n        // console.log('SharedMediaBase.ctor');\r\n\r\n        super(props);\r\n\r\n        this.listRef = React.createRef();\r\n        this.searchListRef = React.createRef();\r\n\r\n        this.state = {\r\n            items: [],\r\n            migratedItems: [],\r\n            searchItems: [],\r\n            searchMigratedItems: []\r\n        };\r\n    }\r\n\r\n    hasSearch() {\r\n        return true;\r\n    }\r\n\r\n    isValidContent(content) {\r\n        throw new Error('Virtual method isValidContent is not implemented');\r\n    }\r\n\r\n    getItemTemplate(message) {\r\n        const { migratedChatId } = this.props;\r\n        const { chat_id, id } = message;\r\n\r\n        return (\r\n            <SharedDocument\r\n                key={`chat_id=${chat_id}_message_id=${id}`}\r\n                chatId={chat_id}\r\n                messageId={id}\r\n                showOpenMessage={chat_id !== migratedChatId}\r\n            />\r\n        );\r\n    }\r\n\r\n    getSearchFilter() {\r\n        throw new Error('Virtual method getSearchFilter is not implemented');\r\n    }\r\n\r\n    getHeader() {\r\n        throw new Error('Virtual method getHeader is not implemented');\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadContent();\r\n\r\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\r\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\r\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\r\n    }\r\n\r\n    onUpdateMessageContent = update => {\r\n        const { chatId, migratedChatId } = this.props;\r\n        const { items, migratedItems } = this.state;\r\n\r\n        const { chat_id, message_id, old_content, new_content } = update;\r\n\r\n        const message = MessageStore.get(chat_id, message_id);\r\n        // console.log(`SharedDocuments.onUpdateMessageContent chat_id=${chat_id} message_id=${message_id}`, this.state.items);\r\n\r\n        if (chat_id === chatId) {\r\n            if (!items.length) return;\r\n            if (!between(message_id, items[0].id, items[items.length - 1].id, true)) return;\r\n\r\n            const index = items.findIndex(x => x.id === message_id);\r\n            if (this.isValidContent(new_content)) {\r\n                if (index === -1) {\r\n                    // add new document\r\n                    this.setState({ items: insertByOrder(items, message, messageComparatorDesc) });\r\n                } else {\r\n                    // replace document\r\n                    this.setState({ items: [...items.slice(0, index), message, ...items.slice(index + 1)] });\r\n                }\r\n            } else {\r\n                if (index === -1) {\r\n                } else {\r\n                    // remove none document\r\n                    this.setState({ items: items.filter(x => x.id !== message_id) });\r\n                }\r\n            }\r\n        } else if (chat_id === migratedChatId) {\r\n            if (!migratedItems.length) return;\r\n            if (!between(message_id, migratedItems[0].id, migratedItems[migratedItems.length - 1].id, true)) return;\r\n\r\n            const index = migratedItems.findIndex(x => x.id === message_id);\r\n            if (this.isValidContent(new_content)) {\r\n                if (index === -1) {\r\n                    // add new document\r\n                    this.setState({\r\n                        migratedItems: insertByOrder(migratedItems, message, messageComparatorDesc)\r\n                    });\r\n                } else {\r\n                    // replace document\r\n                    this.setState({\r\n                        migratedItems: [...migratedItems.slice(0, index), message, ...migratedItems.slice(index + 1)]\r\n                    });\r\n                }\r\n            } else {\r\n                if (index === -1) {\r\n                } else {\r\n                    // remove none document\r\n                    this.setState({ migratedItems: migratedItems.filter(x => x.id !== message_id) });\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    onUpdateNewMessage = update => {\r\n        const { chatId, migratedChatId } = this.props;\r\n        const { items, migratedItems } = this.state;\r\n\r\n        const { message } = update;\r\n        const { chat_id } = message;\r\n\r\n        if (chat_id !== chatId) return;\r\n        if (!this.isValidMessage(message)) return;\r\n\r\n        const store = FileStore.getStore();\r\n        loadMessageContents(store, [message]);\r\n\r\n        if (chat_id === chatId) {\r\n            this.setState({ items: [message].concat(items) });\r\n        } else if (chat_id === migratedChatId) {\r\n            this.setState({ migratedItems: [message].concat(migratedItems) });\r\n        }\r\n    };\r\n\r\n    onUpdateDeleteMessages = update => {\r\n        const { chatId, migratedChatId } = this.props;\r\n        const { items, migratedItems } = this.state;\r\n\r\n        const { chat_id, message_ids } = update;\r\n\r\n        const map = new Map(message_ids.map(x => [x, x]));\r\n        const callback = () => {\r\n            if (this.state.items.length + this.state.migratedItems.length < SHARED_MESSAGE_SLICE_LIMIT) {\r\n                this.onLoadNext(this.params);\r\n            }\r\n        };\r\n\r\n        if (chat_id === chatId) {\r\n            this.setState({ items: items.filter(x => !map.has(x.id)) }, callback);\r\n        } else if (chat_id === migratedChatId) {\r\n            this.setState({ migratedItems: migratedItems.filter(x => !map.has(x.id)) }, callback);\r\n        }\r\n    };\r\n\r\n    loadContent = () => {\r\n        this.params = {\r\n            loading: false,\r\n            completed: false,\r\n            migrateCompleted: false,\r\n            items: [],\r\n            migratedItems: [],\r\n            filter: this.getSearchFilter()\r\n        };\r\n        this.onLoadNext(this.params);\r\n    };\r\n\r\n    onLoadNext = async (params, loadIncomplete = true) => {\r\n        const { chatId } = this.props;\r\n        const { completed, filter, items, loading } = params;\r\n\r\n        // console.log('SharedMediaBase.onLoadNext', completed, loading);\r\n\r\n        if (loading) return;\r\n        if (completed) return;\r\n\r\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\r\n        params.loading = true;\r\n        const result = await TdLibController.send({\r\n            '@type': 'searchChatMessages',\r\n            chat_id: chatId,\r\n            query: '',\r\n            sender_user_id: 0,\r\n            from_message_id: fromMessageId,\r\n            offset: 0,\r\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\r\n            filter\r\n        }).finally(() => {\r\n            params.loading = false;\r\n        });\r\n\r\n        TdLibController.send({\r\n            '@type': 'searchChatMessages',\r\n            chat_id: chatId,\r\n            query: '',\r\n            sender_user_id: 0,\r\n            from_message_id: fromMessageId,\r\n            offset: 0,\r\n            limit: SHARED_MESSAGE_SLICE_LIMIT * 2,\r\n            filter\r\n        });\r\n\r\n        const { messages } = result;\r\n        params.completed = messages.length === 0 || messages.total_count === 0;\r\n        params.items = items.concat(messages.filter(this.isValidMessage));\r\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\r\n\r\n        MessageStore.setItems(result.messages);\r\n        const store = FileStore.getStore();\r\n        loadMessageContents(store, result.messages);\r\n\r\n        this.setState({ items: params.items });\r\n\r\n        if (params.completed) {\r\n            this.onLoadMigratedNext(params, true);\r\n        } else if (incompleteResults) {\r\n            this.onLoadNext(params, false);\r\n        }\r\n    };\r\n\r\n    onLoadMigratedNext = async (params, loadIncomplete = true) => {\r\n        const { migratedChatId } = this.props;\r\n        const { filter, loading, migrateCompleted, migratedItems: items } = params;\r\n\r\n        // console.log('SharedMediaBase.onLoadMigratedNext', migratedChatId, loading, migrateCompleted);\r\n\r\n        if (!migratedChatId) return;\r\n        if (loading) return;\r\n        if (migrateCompleted) return;\r\n\r\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\r\n        params.loading = true;\r\n        const result = await TdLibController.send({\r\n            '@type': 'searchChatMessages',\r\n            chat_id: migratedChatId,\r\n            query: '',\r\n            sender_user_id: 0,\r\n            from_message_id: fromMessageId,\r\n            offset: 0,\r\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\r\n            filter\r\n        }).finally(() => {\r\n            params.loading = false;\r\n        });\r\n\r\n        const { messages } = result;\r\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\r\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\r\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\r\n\r\n        if (params.migrateCompleted) return;\r\n\r\n        MessageStore.setItems(messages);\r\n        const store = FileStore.getStore();\r\n        loadMessageContents(store, messages);\r\n\r\n        this.setState({ migratedItems: params.migratedItems });\r\n\r\n        if (incompleteResults) {\r\n            this.onLoadMigratedNext(params, false);\r\n        }\r\n    };\r\n\r\n    handleScroll = () => {\r\n        if (!this.listRef) return;\r\n\r\n        const list = this.listRef.current;\r\n        if (!list) return;\r\n\r\n        const { params } = this;\r\n\r\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\r\n            if (params && !params.completed) {\r\n                this.onLoadNext(params);\r\n            } else {\r\n                this.onLoadMigratedNext(params);\r\n            }\r\n        }\r\n    };\r\n\r\n    handleHeaderClick = () => {\r\n        const list = this.listRef.current;\r\n        if (!list) return;\r\n\r\n        list.scrollTop = 0;\r\n    };\r\n\r\n    handleSearchScroll = () => {\r\n        if (!this.searchListRef) return;\r\n\r\n        const list = this.searchListRef.current;\r\n        if (!list) return;\r\n\r\n        const { searchParams } = this;\r\n        if (!searchParams) return;\r\n\r\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\r\n            if (!searchParams.completed) {\r\n                this.onSearchNext(searchParams);\r\n            } else {\r\n                this.onSearchMigratedNext(searchParams);\r\n            }\r\n        }\r\n    };\r\n\r\n    onSearchNext = async (params, loadIncomplete = true) => {\r\n        const { chatId } = this.props;\r\n        const { completed, filter, items, loading, query } = params;\r\n\r\n        // console.log('SharedMediaBase.onSearchNext', completed, loading);\r\n\r\n        if (completed) return;\r\n        if (loading) return;\r\n\r\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\r\n        params.loading = true;\r\n        const result = await TdLibController.send({\r\n            '@type': 'searchChatMessages',\r\n            chat_id: chatId,\r\n            query,\r\n            sender_user_id: 0,\r\n            from_message_id: fromMessageId,\r\n            offset: 0,\r\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\r\n            filter\r\n        }).finally(() => {\r\n            params.loading = false;\r\n        });\r\n\r\n        const { messages } = result;\r\n        params.items = items.concat(messages.filter(this.isValidMessage));\r\n        params.completed = messages.length === 0 || messages.total_count === 0;\r\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\r\n\r\n        if (this.searchParams !== params) return;\r\n\r\n        MessageStore.setItems(messages);\r\n        const store = FileStore.getStore();\r\n        loadMessageContents(store, messages);\r\n\r\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\r\n\r\n        if (params.completed) {\r\n            this.onSearchMigratedNext(params, true);\r\n        } else if (incompleteResults) {\r\n            this.onSearchNext(params, false);\r\n        }\r\n    };\r\n\r\n    onSearchMigratedNext = async (params, loadIncomplete = true) => {\r\n        const { migratedChatId } = this.props;\r\n        const { filter, loading, migratedItems: items, migrateCompleted, query } = params;\r\n\r\n        // console.log('SharedMediaBase.onSearchMigratedNext', migratedChatId, loading, migrateCompleted);\r\n\r\n        if (!migratedChatId) return;\r\n        if (loading) return;\r\n        if (migrateCompleted) return;\r\n\r\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\r\n        params.loading = true;\r\n        const result = await TdLibController.send({\r\n            '@type': 'searchChatMessages',\r\n            chat_id: migratedChatId,\r\n            query,\r\n            sender_user_id: 0,\r\n            from_message_id: fromMessageId,\r\n            offset: 0,\r\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\r\n            filter\r\n        }).finally(() => {\r\n            params.loading = false;\r\n        });\r\n\r\n        const { messages } = result;\r\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\r\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\r\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\r\n\r\n        if (this.searchParams !== params) return;\r\n\r\n        MessageStore.setItems(messages);\r\n        const store = FileStore.getStore();\r\n        loadMessageContents(store, messages);\r\n\r\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\r\n\r\n        if (incompleteResults) {\r\n            this.onSearchMigratedNext(params, false);\r\n        }\r\n    };\r\n\r\n    handleSearch = async text => {\r\n        const query = text ? text.trim() : '';\r\n        if (!query) {\r\n            this.handleCloseSearch();\r\n            return;\r\n        }\r\n\r\n        this.searchParams = {\r\n            query,\r\n            completed: false,\r\n            migrateCompleted: false,\r\n            items: [],\r\n            migratedItems: [],\r\n            filter: this.getSearchFilter()\r\n        };\r\n        this.onSearchNext(this.searchParams, true);\r\n    };\r\n\r\n    handleCloseSearch = () => {\r\n        this.searchParams = null;\r\n        this.setState({ searchItems: [], searchMigratedItems: [] });\r\n    };\r\n\r\n    isValidMessage = message => {\r\n        if (!message) return false;\r\n\r\n        return this.isValidContent(message.content);\r\n    };\r\n\r\n    render() {\r\n        const { minHeight, onClose, popup } = this.props;\r\n        const { items, migratedItems, searchItems, searchMigratedItems } = this.state;\r\n        const { searchParams } = this;\r\n\r\n        const messages = items.concat(migratedItems).map(x => this.getItemTemplate(x));\r\n        const searchMessages = searchItems.concat(searchMigratedItems).map(x => this.getItemTemplate(x));\r\n\r\n        return (\r\n            <>\r\n                <SharedMediaHeader\r\n                    title={this.getHeader()}\r\n                    onClick={this.handleHeaderClick}\r\n                    onClose={onClose}\r\n                    onSearch={this.hasSearch() ? this.handleSearch : null}\r\n                    onCloseSearch={this.handleCloseSearch}\r\n                />\r\n                <div\r\n                    ref={this.listRef}\r\n                    className={classNames('shared-media-list', this.getListClassName())}\r\n                    onScroll={this.handleScroll}\r\n                    style={{ minHeight: popup ? minHeight : null }}>\r\n                    {messages}\r\n                </div>\r\n                {Boolean(searchParams) && (\r\n                    <div\r\n                        ref={this.searchListRef}\r\n                        className={classNames('shared-media-search-list', this.getSearchListClassName())}\r\n                        onScroll={this.handleSearchScroll}>\r\n                        {searchMessages}\r\n                    </div>\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nSharedMediaBase.propTypes = {};\r\n\r\nexport default SharedMediaBase;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport SharedMediaBase from './SharedMediaBase';\r\nimport './SharedAudios.css';\r\n\r\nclass SharedAudios extends SharedMediaBase {\r\n    isValidContent(content) {\r\n        return content && content['@type'] === 'messageAudio';\r\n    }\r\n\r\n    getSearchFilter() {\r\n        return { '@type': 'searchMessagesFilterAudio' };\r\n    }\r\n\r\n    getHeader() {\r\n        const { t } = this.props;\r\n\r\n        return t('AudioTitle');\r\n    }\r\n}\r\n\r\nSharedAudios.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    migratedChatId: PropTypes.number,\r\n    onClose: PropTypes.func.isRequired,\r\n    popup: PropTypes.bool,\r\n    minHeight: PropTypes.number\r\n};\r\n\r\nSharedAudios.defaultProps = {\r\n    popup: false,\r\n    minHeight: 0\r\n};\r\n\r\nexport default withTranslation()(SharedAudios);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport SharedMediaBase from './SharedMediaBase';\r\nimport './SharedDocuments.css';\r\n\r\nclass SharedDocuments extends SharedMediaBase {\r\n    isValidContent(content) {\r\n        return content && content['@type'] === 'messageDocument';\r\n    }\r\n\r\n    getSearchFilter() {\r\n        return { '@type': 'searchMessagesFilterDocument' };\r\n    }\r\n\r\n    getHeader() {\r\n        const { t } = this.props;\r\n\r\n        return t('DocumentsTitle');\r\n    }\r\n}\r\n\r\nSharedDocuments.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    migratedChatId: PropTypes.number,\r\n    onClose: PropTypes.func.isRequired,\r\n    popup: PropTypes.bool,\r\n    minHeight: PropTypes.number\r\n};\r\n\r\nSharedDocuments.defaultProps = {\r\n    popup: false,\r\n    minHeight: 0\r\n};\r\n\r\nexport default withTranslation()(SharedDocuments);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport ContextMenu from './ContextMenu';\r\nimport Photo from '../../Message/Media/Photo';\r\nimport SafeLink from '../../Additional/SafeLink';\r\nimport { getFirstLetter } from '../../../Utils/Common';\r\nimport { openMedia, substring } from '../../../Utils/Message';\r\nimport punycode from '../../../Utils/Punycode';\r\nimport MessageStore from '../../../Stores/MessageStore';\r\nimport './SharedLink.css';\r\n\r\nclass SharedLink extends React.Component {\r\n    state = {\r\n        contextMenu: false,\r\n        left: 0,\r\n        top: 0\r\n    };\r\n\r\n    handleOpenContextMenu = async event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        const { contextMenu } = this.state;\r\n\r\n        if (contextMenu) {\r\n            this.setState({ contextMenu: false });\r\n        } else {\r\n            const left = event.clientX;\r\n            const top = event.clientY;\r\n\r\n            this.setState({\r\n                contextMenu: true,\r\n                left,\r\n                top\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseContextMenu = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({ contextMenu: false });\r\n    };\r\n\r\n    isValidEntityType(type) {\r\n        if (!type) return false;\r\n\r\n        return (\r\n            type.type['@type'] === 'textEntityTypeUrl' ||\r\n            type.type['@type'] === 'textEntityTypeTextUrl' ||\r\n            type.type['@type'] === 'textEntityTypeEmailAddress'\r\n        );\r\n    }\r\n\r\n    getTitleFromUrl(url) {\r\n        try {\r\n            url = url.startsWith('http') ? url : 'http://' + url;\r\n            const decodedUrl = decodeURI(url);\r\n\r\n            const hostname = new URL(decodedUrl).hostname.split('.');\r\n            const domain = hostname.length >= 2 ? hostname[hostname.length - 2] : new URL(decodedUrl).hostname;\r\n\r\n            return punycode.ToUnicode(domain);\r\n        } catch (error) {\r\n            console.error('url: ' + url + '\\n' + error);\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    render() {\r\n        const { chatId, messageId, webPage, showOpenMessage } = this.props;\r\n        const { contextMenu, left, top } = this.state;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return null;\r\n\r\n        let content = null;\r\n        let { display_url, description, photo, title, url } = webPage || {\r\n            title: '',\r\n            description: '',\r\n            photo: null,\r\n            url: ''\r\n        };\r\n        if (webPage) {\r\n            title = title || this.getTitleFromUrl(url);\r\n\r\n            content = (\r\n                <SafeLink className='shared-link-url' url={url}>\r\n                    {display_url}\r\n                </SafeLink>\r\n            );\r\n        } else {\r\n            const { text } = message.content;\r\n            if (text) {\r\n                const { entities } = text;\r\n                if (entities && entities.length > 0) {\r\n                    content = entities.filter(this.isValidEntityType).map(x => {\r\n                        const entityText = substring(text.text, x.offset, x.offset + x.length);\r\n                        let url = entityText;\r\n                        let mail = false;\r\n\r\n                        switch (x.type['@type']) {\r\n                            case 'textEntityTypeTextUrl': {\r\n                                const { url: typeUrl } = x.type;\r\n                                if (typeUrl) {\r\n                                    url = typeUrl;\r\n                                }\r\n                                break;\r\n                            }\r\n                            case 'textEntityTypeUrl': {\r\n                                break;\r\n                            }\r\n                            case 'textEntityTypeEmailAddress':\r\n                                mail = true;\r\n                                break;\r\n                        }\r\n\r\n                        title = title || this.getTitleFromUrl(url) || ' ';\r\n\r\n                        return (\r\n                            <SafeLink className='shared-link-url' url={url} mail={mail}>\r\n                                {entityText}\r\n                            </SafeLink>\r\n                        );\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n        const tileColor = `tile_color_${(Math.abs(title.charCodeAt(0)) % 7) + 1}`;\r\n\r\n        return (\r\n            <>\r\n                <div className='shared-link' onContextMenu={this.handleOpenContextMenu}>\r\n                    <div className={classNames('shared-link-photo', tileColor)}>\r\n                        {getFirstLetter(title)}\r\n                        {photo && (\r\n                            <Photo\r\n                                displaySize={90}\r\n                                chatId={chatId}\r\n                                messageId={messageId}\r\n                                photo={photo}\r\n                                openMedia={openMedia}\r\n                                showProgress={false}\r\n                                style={{ width: 48, height: 48, position: 'absolute', top: 0, left: 0 }}\r\n                            />\r\n                        )}\r\n                    </div>\r\n                    <div className='shared-link-content'>\r\n                        {title && <div className='web-page-title'>{title}</div>}\r\n                        {description && <div className='web-page-description'>{description.text}</div>}\r\n                        {content}\r\n                    </div>\r\n                </div>\r\n                <ContextMenu\r\n                    chatId={chatId}\r\n                    messageId={messageId}\r\n                    anchorPosition={{ top, left }}\r\n                    open={contextMenu}\r\n                    showOpenMessage={showOpenMessage}\r\n                    onClose={this.handleCloseContextMenu}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nSharedLink.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    webPage: PropTypes.object,\r\n\r\n    openMedia: PropTypes.func\r\n};\r\n\r\nexport default SharedLink;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport SharedMediaBase from './SharedMediaBase';\r\nimport SharedLink from '../../Tile/SharedMedia/SharedLink';\r\nimport { openMedia } from '../../../Utils/Message';\r\nimport './SharedLinks.css';\r\n\r\nclass SharedLinks extends SharedMediaBase {\r\n    isValidContent(content) {\r\n        if (!content) return false;\r\n\r\n        const { web_page, text } = content;\r\n        if (web_page) return true;\r\n        if (!text) return false;\r\n\r\n        const { entities } = text;\r\n        if (!entities) return false;\r\n\r\n        return entities.find(\r\n            x =>\r\n                x.type['@type'] === 'textEntityTypeUrl' ||\r\n                x.type['@type'] === 'textEntityTypeTextUrl' ||\r\n                x.type['@type'] === 'textEntityTypeEmailAddress'\r\n        );\r\n    }\r\n\r\n    getSearchFilter() {\r\n        return { '@type': 'searchMessagesFilterUrl' };\r\n    }\r\n\r\n    getHeader() {\r\n        const { t } = this.props;\r\n\r\n        return t('LinksTitle');\r\n    }\r\n\r\n    getItemTemplate(message) {\r\n        const { migratedChatId } = this.props;\r\n        const { chat_id, content, id } = message;\r\n\r\n        return (\r\n            <SharedLink\r\n                key={`chat_id=${chat_id}_message_id=${id}`}\r\n                chatId={chat_id}\r\n                messageId={id}\r\n                webPage={content.web_page}\r\n                openMedia={() => openMedia(chat_id, id, false)}\r\n                showOpenMessage={chat_id !== migratedChatId}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nSharedLinks.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    migratedChatId: PropTypes.number,\r\n    onClose: PropTypes.func.isRequired,\r\n    popup: PropTypes.bool,\r\n    minHeight: PropTypes.number\r\n};\r\n\r\nSharedLinks.defaultProps = {\r\n    popup: false,\r\n    minHeight: 0\r\n};\r\n\r\nexport default withTranslation()(SharedLinks);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIcon from '../../Assets/Icons/Back';\r\nimport './SharedMediaHeader.css';\r\n\r\nclass SharedMediaHeader extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const { close } = this.props;\r\n\r\n        return (\r\n            <div className='header-master'>\r\n                <IconButton className='header-left-button' onClick={close}>\r\n                    <ArrowBackIcon />\r\n                </IconButton>\r\n                <div className='header-status grow cursor-pointer'>\r\n                    <span className='header-status-content'>Shared Media</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SharedMediaHeader;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport SharedMediaHeader from './SharedMediaHeader';\r\nimport './SharedMedia.css';\r\n\r\nclass SharedMedia extends React.Component {\r\n    state = {\r\n        value: 0\r\n    };\r\n\r\n    handleChange = (event, value) => {\r\n        this.setState({ value });\r\n    };\r\n\r\n    render() {\r\n        const { onClose, popup } = this.props;\r\n        const { value } = this.state;\r\n\r\n        const content = (\r\n            <>\r\n                <SharedMediaHeader close={onClose} />\r\n                <Tabs\r\n                    value={value}\r\n                    onChange={this.handleChange}\r\n                    indicatorColor='primary'\r\n                    textColor='primary'\r\n                    scrollable\r\n                    scrollButtons='off'\r\n                    fullWidth>\r\n                    <Tab label='Media' style={{ minWidth: '40px' }} />\r\n                    <Tab label='Docs' style={{ minWidth: '40px' }} />\r\n                    <Tab label='Links' style={{ minWidth: '40px' }} />\r\n                    <Tab label='Audio' style={{ minWidth: '40px' }} />\r\n                </Tabs>\r\n            </>\r\n        );\r\n\r\n        return popup ? <>{content}</> : <div className='shared-media'>{content}</div>;\r\n    }\r\n}\r\n\r\nSharedMedia.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    popup: PropTypes.bool,\r\n    minHeight: PropTypes.number\r\n};\r\n\r\nSharedMedia.defaultProps = {\r\n    popup: false,\r\n    minHeight: 0\r\n};\r\n\r\nexport default SharedMedia;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ContextMenu from './ContextMenu';\r\nimport { getSrc } from '../../../Utils/File';\r\nimport { getSize } from '../../../Utils/Common';\r\nimport { isBlurredThumbnail } from '../../../Utils/Media';\r\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE } from '../../../Constants';\r\nimport FileStore from '../../../Stores/FileStore';\r\nimport './SharedPhoto.css';\r\n\r\nclass SharedPhoto extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { photo, size, thumbnailSize } = props;\r\n\r\n        this.state = {\r\n            contextMenu: false,\r\n            left: 0,\r\n            top: 0,\r\n\r\n            photoSize: getSize(photo.sizes, size),\r\n            thumbSize: getSize(photo.sizes, thumbnailSize),\r\n            minithumbnail: photo.minithumbnail\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\r\n    }\r\n\r\n    onClientUpdatePhotoBlob = update => {\r\n        const { photoSize, thumbSize } = this.state;\r\n        const { fileId } = update;\r\n\r\n        if (photoSize && photoSize.photo && photoSize.photo.id === fileId) {\r\n            this.forceUpdate();\r\n        } else if (thumbSize && thumbSize.photo && thumbSize.photo.id === fileId) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    handleOpenContextMenu = async event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        const { contextMenu } = this.state;\r\n\r\n        if (contextMenu) {\r\n            this.setState({ contextMenu: false });\r\n        } else {\r\n            const left = event.clientX;\r\n            const top = event.clientY;\r\n\r\n            this.setState({\r\n                contextMenu: true,\r\n                left,\r\n                top\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseContextMenu = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({ contextMenu: false });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, messageId, openMedia, showOpenMessage, style } = this.props;\r\n        const { minithumbnail, thumbSize, photoSize, contextMenu, left, top } = this.state;\r\n\r\n        if (!photoSize) return null;\r\n\r\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\r\n        const thumbSrc = getSrc(thumbSize ? thumbSize.photo : null);\r\n        const src = getSrc(photoSize.photo);\r\n        const isBlurred = miniSrc || isBlurredThumbnail(thumbSize);\r\n\r\n        return (\r\n            <>\r\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\r\n                    <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover' }}>\r\n                        {src !== thumbSrc && (\r\n                            <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\r\n                        )}\r\n                    </div>\r\n                </div>\r\n                <ContextMenu\r\n                    chatId={chatId}\r\n                    messageId={messageId}\r\n                    anchorPosition={{ top, left }}\r\n                    open={contextMenu}\r\n                    showOpenMessage={showOpenMessage}\r\n                    onClose={this.handleCloseContextMenu}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nSharedPhoto.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    photo: PropTypes.object.isRequired,\r\n    showOpenMessage: PropTypes.bool.isRequired,\r\n    openMedia: PropTypes.func,\r\n\r\n    size: PropTypes.number,\r\n    thumbnailSize: PropTypes.number,\r\n    style: PropTypes.object\r\n};\r\n\r\nSharedPhoto.defaultProps = {\r\n    size: PHOTO_SIZE,\r\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\r\n};\r\n\r\nexport default SharedPhoto;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport SharedMediaBase from './SharedMediaBase';\r\nimport SharedPhoto from '../../Tile/SharedMedia/SharedPhoto';\r\nimport { openMedia } from '../../../Utils/Message';\r\nimport './SharedPhotos.css';\r\n\r\nclass SharedPhotos extends SharedMediaBase {\r\n    getListClassName() {\r\n        return 'shared-photos-list';\r\n    }\r\n\r\n    getSearchListClassName() {\r\n        return 'shared-photos-search-list';\r\n    }\r\n\r\n    isValidContent(content) {\r\n        return content && content['@type'] === 'messagePhoto';\r\n    }\r\n\r\n    getSearchFilter() {\r\n        return { '@type': 'searchMessagesFilterPhoto' };\r\n    }\r\n\r\n    getHeader() {\r\n        const { t } = this.props;\r\n\r\n        return t('PhotosTitle');\r\n    }\r\n\r\n    getItemTemplate(message) {\r\n        const { migratedChatId } = this.props;\r\n        const { chat_id, content, id } = message;\r\n\r\n        return (\r\n            <SharedPhoto\r\n                key={`chat_id=${chat_id}_message_id=${id}`}\r\n                chatId={chat_id}\r\n                messageId={id}\r\n                photo={content.photo}\r\n                openMedia={() => openMedia(chat_id, id, false)}\r\n                showOpenMessage={chat_id !== migratedChatId}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nSharedPhotos.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    migratedChatId: PropTypes.number,\r\n    onClose: PropTypes.func.isRequired,\r\n    popup: PropTypes.bool,\r\n    minHeight: PropTypes.number\r\n};\r\n\r\nSharedPhotos.defaultProps = {\r\n    popup: false,\r\n    minHeight: 0\r\n};\r\n\r\nexport default withTranslation()(SharedPhotos);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport ContextMenu from './ContextMenu';\r\nimport { getSrc } from '../../../Utils/File';\r\nimport { getDurationString } from '../../../Utils/Common';\r\nimport { isBlurredThumbnail } from '../../../Utils/Media';\r\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE, THUMBNAIL_BLURRED_SIZE_90 } from '../../../Constants';\r\nimport FileStore from '../../../Stores/FileStore';\r\nimport './SharedVideo.css';\r\n\r\nclass SharedVideo extends React.Component {\r\n    state = {\r\n        contextMenu: false,\r\n        left: 0,\r\n        top: 0\r\n    };\r\n\r\n    componentDidMount() {\r\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\r\n    }\r\n\r\n    onClientUpdateVideoThumbnailBlob = update => {\r\n        const { thumbnail } = this.props.video;\r\n        const { fileId } = update;\r\n\r\n        if (!thumbnail) return;\r\n\r\n        const { file } = thumbnail;\r\n        if (file && file.id === fileId) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    handleOpenContextMenu = async event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        const { contextMenu } = this.state;\r\n\r\n        if (contextMenu) {\r\n            this.setState({ contextMenu: false });\r\n        } else {\r\n            const left = event.clientX;\r\n            const top = event.clientY;\r\n\r\n            this.setState({\r\n                contextMenu: true,\r\n                left,\r\n                top\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseContextMenu = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({ contextMenu: false });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, messageId, openMedia, style, showOpenMessage } = this.props;\r\n        const { minithumbnail, thumbnail, duration } = this.props.video;\r\n        const { contextMenu, left, top } = this.state;\r\n\r\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\r\n        const thumbSrc = getSrc(thumbnail ? thumbnail.file : null);\r\n        const isBlurred = thumbSrc ? isBlurredThumbnail(thumbnail) : Boolean(miniSrc);\r\n\r\n        return (\r\n            <>\r\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\r\n                    <div className='shared-video-wrapper'>\r\n                        <div\r\n                            className={classNames('shared-video-content', {\r\n                                'media-blurred': isBlurred,\r\n                                'media-mini-blurred': !thumbSrc && isBlurred\r\n                            })}\r\n                            style={{ backgroundImage: `url(${thumbSrc || miniSrc})` }}\r\n                        />\r\n                        <div className='shared-video-meta'>{getDurationString(duration)}</div>\r\n                    </div>\r\n                </div>\r\n                <ContextMenu\r\n                    chatId={chatId}\r\n                    messageId={messageId}\r\n                    anchorPosition={{ top, left }}\r\n                    open={contextMenu}\r\n                    showOpenMessage={showOpenMessage}\r\n                    onClose={this.handleCloseContextMenu}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nSharedVideo.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    video: PropTypes.object.isRequired,\r\n    showOpenMessage: PropTypes.bool.isRequired,\r\n    openMedia: PropTypes.func,\r\n\r\n    size: PropTypes.number,\r\n    thumbnailSize: PropTypes.number,\r\n    style: PropTypes.object\r\n};\r\n\r\nSharedVideo.defaultProps = {\r\n    size: PHOTO_SIZE,\r\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\r\n};\r\n\r\nexport default SharedVideo;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport SharedMediaBase from './SharedMediaBase';\r\nimport SharedVideo from '../../Tile/SharedMedia/SharedVideo';\r\nimport { openMedia } from '../../../Utils/Message';\r\nimport './SharedVideos.css';\r\n\r\nclass SharedVideos extends SharedMediaBase {\r\n    getListClassName() {\r\n        return 'shared-photos-list';\r\n    }\r\n\r\n    getSearchListClassName() {\r\n        return 'shared-photos-search-list';\r\n    }\r\n\r\n    isValidContent(content) {\r\n        return content && content['@type'] === 'messageVideo';\r\n    }\r\n\r\n    getSearchFilter() {\r\n        return { '@type': 'searchMessagesFilterVideo' };\r\n    }\r\n\r\n    getHeader() {\r\n        const { t } = this.props;\r\n\r\n        return t('VideosTitle');\r\n    }\r\n\r\n    getItemTemplate(message) {\r\n        const { migratedChatId } = this.props;\r\n        const { chat_id, content, id } = message;\r\n\r\n        return (\r\n            <SharedVideo\r\n                key={`chat_id=${chat_id}_message_id=${id}`}\r\n                chatId={chat_id}\r\n                messageId={id}\r\n                video={content.video}\r\n                openMedia={() => openMedia(chat_id, id, false)}\r\n                showOpenMessage={chat_id !== migratedChatId}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nSharedVideos.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    migratedChatId: PropTypes.number,\r\n    onClose: PropTypes.func.isRequired,\r\n    popup: PropTypes.bool,\r\n    minHeight: PropTypes.number\r\n};\r\n\r\nSharedVideos.defaultProps = {\r\n    popup: false,\r\n    minHeight: 0\r\n};\r\n\r\nexport default withTranslation()(SharedVideos);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport AudioAction from '../../Message/Media/AudioAction';\r\nimport ContextMenu from './ContextMenu';\r\nimport MediaStatus from '../../Message/Media/MediaStatus';\r\nimport MessageAuthor from '../../Message/MessageAuthor';\r\nimport VoiceNoteTile from '../VoiceNoteTile';\r\nimport MessageStore from '../../../Stores/MessageStore';\r\nimport './SharedVoiceNote.css';\r\n\r\nclass SharedVoiceNote extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            contextMenu: false,\r\n            left: 0,\r\n            top: 0\r\n        };\r\n    }\r\n\r\n    handleOpenContextMenu = async event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        const { contextMenu } = this.state;\r\n\r\n        if (contextMenu) {\r\n            this.setState({ contextMenu: false });\r\n        } else {\r\n            const left = event.clientX;\r\n            const top = event.clientY;\r\n\r\n            this.setState({\r\n                contextMenu: true,\r\n                left,\r\n                top\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseContextMenu = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({ contextMenu: false });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, i18n, messageId, voiceNote, openMedia, showOpenMessage } = this.props;\r\n        const { contextMenu, left, top } = this.state;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return null;\r\n\r\n        if (!voiceNote) return null;\r\n\r\n        const { date, sender_user_id } = message;\r\n        const dateString = new Date(date * 1000).toLocaleDateString([i18n.language], {\r\n            day: 'numeric',\r\n            month: 'short',\r\n            year: 'numeric',\r\n            hour: 'numeric',\r\n            minute: 'numeric',\r\n            hour12: false\r\n        });\r\n\r\n        const { duration, voice: file } = voiceNote;\r\n\r\n        return (\r\n            <>\r\n                <div className='shared-voice-note' onContextMenu={this.handleOpenContextMenu}>\r\n                    <VoiceNoteTile chatId={chatId} messageId={messageId} file={file} openMedia={openMedia} />\r\n                    <div className='voice-note-content'>\r\n                        <MessageAuthor chatId={chatId} messageId={messageId} userId={sender_user_id} />\r\n                        <div className='voice-note-meta'>\r\n                            <AudioAction\r\n                                chatId={chatId}\r\n                                messageId={messageId}\r\n                                duration={duration}\r\n                                file={file}\r\n                                title={`${dateString}, `}\r\n                            />\r\n                            <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <ContextMenu\r\n                    chatId={chatId}\r\n                    messageId={messageId}\r\n                    anchorPosition={{ top, left }}\r\n                    open={contextMenu}\r\n                    showOpenMessage={showOpenMessage}\r\n                    onClose={this.handleCloseContextMenu}\r\n                />\r\n            </>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nSharedVoiceNote.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    voiceNote: PropTypes.object.isRequired,\r\n\r\n    openMedia: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(SharedVoiceNote);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport SharedMediaBase from './SharedMediaBase';\r\nimport SharedVoiceNote from '../../Tile/SharedMedia/SharedVoiceNote';\r\nimport { openMedia } from '../../../Utils/Message';\r\nimport './SharedVoiceNotes.css';\r\n\r\nclass SharedVoiceNotes extends SharedMediaBase {\r\n    isValidContent(content) {\r\n        return content && content['@type'] === 'messageVoiceNote';\r\n    }\r\n\r\n    getSearchFilter() {\r\n        return { '@type': 'searchMessagesFilterVoiceNote' };\r\n    }\r\n\r\n    getHeader() {\r\n        const { t } = this.props;\r\n\r\n        return t('VoiceTitle');\r\n    }\r\n\r\n    hasSearch() {\r\n        return false;\r\n    }\r\n\r\n    getItemTemplate(message) {\r\n        const { migratedChatId } = this.props;\r\n        const { chat_id, content, id } = message;\r\n\r\n        return (\r\n            <SharedVoiceNote\r\n                key={`chat_id=${chat_id}_message_id=${id}`}\r\n                chatId={chat_id}\r\n                messageId={id}\r\n                voiceNote={content.voice_note}\r\n                openMedia={() => openMedia(chat_id, id, false)}\r\n                showOpenMessage={chat_id !== migratedChatId}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nSharedVoiceNotes.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    migratedChatId: PropTypes.number,\r\n    onClose: PropTypes.func.isRequired,\r\n    popup: PropTypes.bool,\r\n    minHeight: PropTypes.number\r\n};\r\n\r\nSharedVoiceNotes.defaultProps = {\r\n    popup: false,\r\n    minHeight: 0\r\n};\r\n\r\nexport default withTranslation()(SharedVoiceNotes);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport ChatDetails from './ChatDetails';\r\nimport GroupsInCommon from './GroupsInCommon';\r\nimport SharedAudios from './SharedMedia/SharedAudios';\r\nimport SharedDocuments from './SharedMedia/SharedDocuments';\r\nimport SharedLinks from './SharedMedia/SharedLinks';\r\nimport SharedMedia from './SharedMedia';\r\nimport SharedPhotos from './SharedMedia/SharedPhotos';\r\nimport SharedVideos from './SharedMedia/SharedVideos';\r\nimport SharedVoiceNotes from './SharedMedia/SharedVoiceNotes';\r\nimport { changeChatDetailsVisibility, getChatCounters } from '../../Actions/Chat';\r\nimport { getPhotoFromChat, getSupergroupId, isSupergroup } from '../../Utils/Chat';\r\nimport { loadProfileMediaViewerContent } from '../../Utils/File';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport SupergroupStore from '../../Stores/SupergroupStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './ChatInfo.css';\r\n\r\nclass ChatInfo extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.detailsRef = React.createRef();\r\n\r\n        const { popup } = props;\r\n        const { chatId, dialogChatId } = AppStore;\r\n\r\n        this.state = {\r\n            chatId: popup ? dialogChatId : chatId,\r\n            migratedChatId: 0,\r\n            userChatId: null,\r\n            openGroupInCommon: false,\r\n            openSharedAudios: false,\r\n            openSharedDocuments: false,\r\n            openSharedLinks: false,\r\n            openSharedMedia: false,\r\n            openSharedPhotos: false,\r\n            openSharedVideos: false,\r\n            openSharedVoiceNotes: false,\r\n            counters: null,\r\n            migratedCounters: null\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadContent(this.state.chatId);\r\n\r\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\r\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\r\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { chatId } = this.state;\r\n        if (chatId !== prevState.chatId) {\r\n            this.loadContent(chatId);\r\n        }\r\n    }\r\n\r\n    onClientUpdatePageWidth = update => {\r\n        const { isSmallWidth } = update;\r\n        if (!isSmallWidth) return;\r\n\r\n        const { popup } = this.props;\r\n        if (popup) return;\r\n\r\n        this.handleCloseChatDetails();\r\n    };\r\n\r\n    onClientUpdateChatId = update => {\r\n        const { popup } = this.props;\r\n        const { chatId } = this.state;\r\n\r\n        if (popup) return;\r\n        if (chatId === update.nextChatId) return;\r\n\r\n        this.sharedAudios = null;\r\n        this.sharedDocuments = null;\r\n        this.sharedLinks = null;\r\n        this.sharedPhotos = null;\r\n        this.sharedVideos = null;\r\n        this.sharedVoiceNotes = null;\r\n\r\n        this.setState({\r\n            chatId: update.nextChatId,\r\n            migratedChatId: 0,\r\n            userChatId: null,\r\n            openGroupInCommon: false,\r\n            openSharedAudios: false,\r\n            openSharedDocuments: false,\r\n            openSharedLinks: false,\r\n            openSharedMedia: false,\r\n            openSharedPhotos: false,\r\n            openSharedVideos: false,\r\n            openSharedVoiceNotes: false,\r\n            counters: ChatStore.getCounters(update.nextChatId),\r\n            migratedCounters: null\r\n        });\r\n\r\n        if (!update.nextChatId) {\r\n            this.handleCloseChatDetails();\r\n        }\r\n    };\r\n\r\n    loadContent = chatId => {\r\n        this.loadChatCounters(chatId);\r\n        this.loadMigratedCounters(chatId);\r\n\r\n        const photo = getPhotoFromChat(chatId);\r\n        if (!photo) return;\r\n        loadProfileMediaViewerContent(chatId, [photo]);\r\n    };\r\n\r\n    loadChatCounters = async chatId => {\r\n        const counters = await getChatCounters(chatId);\r\n        ChatStore.setCounters(chatId, counters);\r\n\r\n        if (chatId !== this.state.chatId) return;\r\n\r\n        this.setState({ counters });\r\n    };\r\n\r\n    loadMigratedCounters = async chatId => {\r\n        if (!isSupergroup(chatId)) return;\r\n\r\n        const fullInfo = SupergroupStore.getFullInfo(getSupergroupId(chatId));\r\n        if (!fullInfo) return;\r\n\r\n        const { upgraded_from_basic_group_id: basic_group_id } = fullInfo;\r\n        if (!basic_group_id) return;\r\n\r\n        const chat = await TdLibController.send({\r\n            '@type': 'createBasicGroupChat',\r\n            basic_group_id,\r\n            force: true\r\n        });\r\n\r\n        if (!chat) return;\r\n\r\n        const counters = await getChatCounters(chat.id);\r\n        ChatStore.setCounters(chat.id, counters);\r\n\r\n        if (this.state.chatId !== chatId) return;\r\n\r\n        this.setState({ migratedChatId: chat.id, migratedCounters: ChatStore.getCounters(chat.id) });\r\n    };\r\n\r\n    handleOpenSharedMedia = () => {\r\n        this.setState({ openSharedMedia: true });\r\n    };\r\n\r\n    handleCloseSharedMedia = () => {\r\n        this.setState({ openSharedMedia: false });\r\n    };\r\n\r\n    handleOpenGroupInCommon = () => {\r\n        this.setState({ openGroupInCommon: true });\r\n    };\r\n\r\n    handleCloseGroupsInCommon = () => {\r\n        this.setState({ openGroupInCommon: false });\r\n    };\r\n\r\n    handleCloseChatDetails = () => {\r\n        const { popup } = this.props;\r\n        const { userChatId } = this.state;\r\n\r\n        if (userChatId) {\r\n            this.setState({ userChatId: null });\r\n        } else if (popup) {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateDialogChatId',\r\n                chatId: 0\r\n            });\r\n        } else {\r\n            changeChatDetailsVisibility(false);\r\n        }\r\n    };\r\n\r\n    handleOpenSharedDocuments = () => {\r\n        this.setState({ openSharedDocuments: true });\r\n    };\r\n\r\n    handleCloseSharedDocuments = () => {\r\n        this.setState({ openSharedDocuments: false });\r\n    };\r\n\r\n    handleOpenSharedAudios = () => {\r\n        this.setState({ openSharedAudios: true });\r\n    };\r\n\r\n    handleCloseSharedAudios = () => {\r\n        this.setState({ openSharedAudios: false });\r\n    };\r\n\r\n    handleOpenSharedVoiceNotes = () => {\r\n        this.setState({ openSharedVoiceNotes: true });\r\n    };\r\n\r\n    handleCloseSharedVoiceNotes = () => {\r\n        this.setState({ openSharedVoiceNotes: false });\r\n    };\r\n\r\n    handleOpenSharedLinks = () => {\r\n        this.setState({ openSharedLinks: true });\r\n    };\r\n\r\n    handleCloseSharedLinks = () => {\r\n        this.setState({ openSharedLinks: false });\r\n    };\r\n\r\n    handleOpenSharedPhotos = () => {\r\n        this.setState({ openSharedPhotos: true });\r\n    };\r\n\r\n    handleCloseSharedPhotos = () => {\r\n        this.setState({ openSharedPhotos: false });\r\n    };\r\n\r\n    handleOpenSharedVideos = () => {\r\n        this.setState({ openSharedVideos: true });\r\n    };\r\n\r\n    handleCloseSharedVideos = () => {\r\n        this.setState({ openSharedVideos: false });\r\n    };\r\n\r\n    render() {\r\n        const { className, popup } = this.props;\r\n        const {\r\n            chatId,\r\n            counters,\r\n            migratedChatId,\r\n            migratedCounters,\r\n            userChatId,\r\n            openSharedAudios,\r\n            openSharedDocuments,\r\n            openSharedLinks,\r\n            openSharedMedia,\r\n            openSharedPhotos,\r\n            openSharedVideos,\r\n            openSharedVoiceNotes,\r\n            openGroupInCommon\r\n        } = this.state;\r\n\r\n        const currentChatId = chatId || userChatId;\r\n        const minHeight = this.detailsRef && this.detailsRef.current ? this.detailsRef.current.getContentHeight() : 0;\r\n\r\n        let content = null;\r\n        if (openSharedMedia) {\r\n            content = (\r\n                <SharedMedia\r\n                    chatId={currentChatId}\r\n                    popup={popup}\r\n                    minHeight={minHeight}\r\n                    onClose={this.handleCloseSharedMedia}\r\n                />\r\n            );\r\n        } else if (openSharedAudios) {\r\n            this.sharedAudios = this.sharedAudios || (\r\n                <SharedAudios\r\n                    chatId={currentChatId}\r\n                    migratedChatId={migratedChatId}\r\n                    popup={popup}\r\n                    minHeight={minHeight}\r\n                    onClose={this.handleCloseSharedAudios}\r\n                />\r\n            );\r\n\r\n            content = this.sharedAudios;\r\n        } else if (openSharedDocuments) {\r\n            this.sharedDocuments = this.sharedDocuments || (\r\n                <SharedDocuments\r\n                    chatId={currentChatId}\r\n                    migratedChatId={migratedChatId}\r\n                    popup={popup}\r\n                    minHeight={minHeight}\r\n                    onClose={this.handleCloseSharedDocuments}\r\n                />\r\n            );\r\n\r\n            content = this.sharedDocuments;\r\n        } else if (openSharedLinks) {\r\n            this.sharedLinks = this.sharedLinks || (\r\n                <SharedLinks\r\n                    chatId={currentChatId}\r\n                    migratedChatId={migratedChatId}\r\n                    popup={popup}\r\n                    minHeight={minHeight}\r\n                    onClose={this.handleCloseSharedLinks}\r\n                />\r\n            );\r\n\r\n            content = this.sharedLinks;\r\n        } else if (openSharedPhotos) {\r\n            this.sharedPhotos = this.sharedPhotos || (\r\n                <SharedPhotos\r\n                    chatId={currentChatId}\r\n                    migratedChatId={migratedChatId}\r\n                    popup={popup}\r\n                    minHeight={minHeight}\r\n                    onClose={this.handleCloseSharedPhotos}\r\n                />\r\n            );\r\n\r\n            content = this.sharedPhotos;\r\n        } else if (openSharedVideos) {\r\n            this.sharedVideos = this.sharedVideos || (\r\n                <SharedVideos\r\n                    chatId={currentChatId}\r\n                    migratedChatId={migratedChatId}\r\n                    popup={popup}\r\n                    minHeight={minHeight}\r\n                    onClose={this.handleCloseSharedVideos}\r\n                />\r\n            );\r\n\r\n            content = this.sharedVideos;\r\n        } else if (openSharedVoiceNotes) {\r\n            this.sharedVoiceNotes = this.sharedVoiceNotes || (\r\n                <SharedVoiceNotes\r\n                    chatId={currentChatId}\r\n                    migratedChatId={migratedChatId}\r\n                    popup={popup}\r\n                    minHeight={minHeight}\r\n                    onClose={this.handleCloseSharedVoiceNotes}\r\n                />\r\n            );\r\n\r\n            content = this.sharedVoiceNotes;\r\n        } else if (openGroupInCommon) {\r\n            content = (\r\n                <GroupsInCommon\r\n                    chatId={currentChatId}\r\n                    popup={popup}\r\n                    minHeight={minHeight}\r\n                    onClose={this.handleCloseGroupsInCommon}\r\n                />\r\n            );\r\n        } else {\r\n            content = (\r\n                <ChatDetails\r\n                    ref={this.detailsRef}\r\n                    chatId={currentChatId}\r\n                    popup={popup}\r\n                    backButton={userChatId === chatId}\r\n                    counters={counters}\r\n                    migratedCounters={migratedCounters}\r\n                    onOpenGroupInCommon={this.handleOpenGroupInCommon}\r\n                    onOpenSharedAudios={this.handleOpenSharedAudios}\r\n                    onOpenSharedDocuments={this.handleOpenSharedDocuments}\r\n                    onOpenSharedMedia={this.handleOpenSharedMedia}\r\n                    onOpenSharedLinks={this.handleOpenSharedLinks}\r\n                    onOpenSharedPhotos={this.handleOpenSharedPhotos}\r\n                    onOpenSharedVideos={this.handleOpenSharedVideos}\r\n                    onOpenSharedVoiceNotes={this.handleOpenSharedVoiceNotes}\r\n                    onClose={this.handleCloseChatDetails}\r\n                />\r\n            );\r\n        }\r\n\r\n        return popup ? (\r\n            <>{content}</>\r\n        ) : (\r\n            <div className={classNames('chat-info', { 'right-column': !popup }, className)}>{content}</div>\r\n        );\r\n    }\r\n}\r\n\r\nChatInfo.propTypes = {\r\n    className: PropTypes.string,\r\n    classes: PropTypes.object,\r\n    popup: PropTypes.bool\r\n};\r\n\r\nChatInfo.defaultProps = {\r\n    className: null,\r\n    classes: null,\r\n    popup: false\r\n};\r\n\r\nexport default ChatInfo;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport {\r\n    getChatTypingString,\r\n    getChatDraft,\r\n    getLastMessageSenderName,\r\n    getLastMessageContent,\r\n    showChatDraft, isPrivateChat\r\n} from '../../Utils/Chat';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport './DialogContent.css';\r\n\r\nclass DialogContent extends React.Component {\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, t } = this.props;\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.t !== t) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\r\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\r\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\r\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\r\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\r\n        ChatStore.on('updateUserChatAction', this.onUpdate);\r\n        UserStore.on('updateUser', this.onUpdateUser);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\r\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\r\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\r\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\r\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\r\n        ChatStore.off('updateUserChatAction', this.onUpdate);\r\n    }\r\n\r\n    onClientUpdateClearHistory = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (chatId === update.chatId) {\r\n            this.clearHistory = update.inProgress;\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    onFastUpdatingComplete = update => {\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onUpdateUser = update => {\r\n        const { chatId } = this.props;\r\n        const { user } = update;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n        if (isPrivateChat(chatId)) return;\r\n\r\n        const { last_message } = chat;\r\n        if (!last_message) return;\r\n\r\n        const { sender_user_id } = last_message;\r\n        if (sender_user_id !== user.id) return;\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onUpdate = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (chatId !== update.chat_id) return;\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    render() {\r\n        const { chatId, t } = this.props;\r\n\r\n        if (this.clearHistory) return <div className='dialog-content'>{'\\u00A0'}</div>;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return <div className='dialog-content'>{'\\u00A0'}</div>;\r\n\r\n        let contentControl = null;\r\n        const typingString = getChatTypingString(chatId);\r\n        if (typingString) {\r\n            contentControl = <span className='dialog-content-accent'>{typingString}</span>;\r\n        }\r\n\r\n        if (!contentControl) {\r\n            const draft = getChatDraft(chatId);\r\n            if (showChatDraft(chatId)) {\r\n                const text = draft.text || '\\u00A0';\r\n\r\n                contentControl = (\r\n                    <>\r\n                        <span className='dialog-content-draft'>{t('Draft') + ': '}</span>\r\n                        {text}\r\n                    </>\r\n                );\r\n            }\r\n        }\r\n\r\n        if (!contentControl) {\r\n            const content = getLastMessageContent(chat, t) || '\\u00A0';\r\n            const senderName = getLastMessageSenderName(chat, t);\r\n            contentControl = (\r\n                <>\r\n                    {senderName && <span className='dialog-content-accent'>{senderName}: </span>}\r\n                    {content}\r\n                </>\r\n            );\r\n        }\r\n\r\n        return <div className='dialog-content'>{contentControl}</div>;\r\n    }\r\n}\r\n\r\nexport default withTranslation()(DialogContent);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <g strokeWidth='1' fill='none' fillRule='evenodd'>\r\n        <line x1='10.5' y1='13.5' x2='7' y2='17' id='Path-51' strokeWidth='1.66' strokeLinecap='round' />\r\n        <path\r\n            d='M15.2734195,6.29329584 L17.7068554,8.72673178 C18.0977149,9.11759123 18.0977149,9.7512996 17.7068554,10.142159 C17.6489915,10.200023 17.5842494,10.2505721 17.5140791,10.2926743 L15.0747102,11.7562956 C15.5465193,13.1717229 15.0755189,14.5863414 13.661709,16.0001513 L8,10.3384422 C9.41380985,8.92463237 10.8284284,8.45363199 12.2438557,8.92544107 L13.707477,6.48607217 C13.991869,6.01208547 14.6066564,5.85838861 15.0806431,6.14278063 C15.1508135,6.18488284 15.2155555,6.2354319 15.2734195,6.29329584 Z'\r\n            strokeWidth='1.66'\r\n            strokeLinecap='round'\r\n            strokeLinejoin='round'\r\n        />\r\n    </g>,\r\n    'Pin'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport EventEmitter from './EventEmitter';\r\nimport TdLibController from '../Controllers/TdLibController';\r\nimport { isValidPoll } from '../Utils/Poll';\r\n\r\nclass FilterStore extends EventEmitter {\r\n    constructor() {\r\n        super();\r\n\r\n        this.reset();\r\n\r\n        this.addTdLibListener();\r\n    }\r\n\r\n    reset = () => {\r\n        this.chatList = { '@type': 'chatListMain' };\r\n        this.filters = null;\r\n    };\r\n\r\n    onUpdate = update => {\r\n        switch (update['@type']) {\r\n            case 'updateAuthorizationState': {\r\n                const { authorization_state } = update;\r\n                if (!authorization_state) break;\r\n\r\n                switch (authorization_state['@type']) {\r\n                    case 'authorizationStateClosed': {\r\n                        this.reset();\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                break;\r\n            }\r\n            case 'updateChatFilters': {\r\n                const { chat_filters } = update;\r\n\r\n                this.filters = chat_filters;\r\n                this.emit('updateChatFilters', update);\r\n                break;\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    onClientUpdate = update => {\r\n        switch (update['@type']) {\r\n            case 'clientUpdateChatList': {\r\n                const { chatList } = update;\r\n\r\n                this.chatList = chatList;\r\n\r\n                this.emit('clientUpdateChatList', update);\r\n                break;\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    addTdLibListener = () => {\r\n        TdLibController.on('update', this.onUpdate);\r\n        TdLibController.on('clientUpdate', this.onClientUpdate);\r\n    };\r\n\r\n    removeTdLibListener = () => {\r\n        TdLibController.off('update', this.onUpdate);\r\n        TdLibController.off('clientUpdate', this.onClientUpdate);\r\n    };\r\n}\r\n\r\nconst store = new FilterStore();\r\nwindow.filter = store;\r\nexport default store;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport classNames from 'classnames';\r\nimport PinIcon from '../../Assets/Icons/Pin';\r\nimport {\r\n    isChatMuted,\r\n    isChatPinned,\r\n    showChatUnreadCount,\r\n    showChatUnreadMentionCount\r\n} from '../../Utils/Chat';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport FilterStore from '../../Stores/FilterStore';\r\nimport NotificationStore from '../../Stores/NotificationStore';\r\nimport './DialogBadge.css';\r\n\r\nclass DialogBadge extends React.Component {\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, chatList } = this.props;\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.chatList !== chatList) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\r\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\r\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\r\n        ChatStore.on('updateChatIsMarkedAsUnread', this.onUpdate);\r\n        ChatStore.on('updateChatPosition', this.onUpdate);\r\n        ChatStore.on('updateChatNotificationSettings', this.onUpdate);\r\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\r\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\r\n        ChatStore.on('updateChatReadOutbox', this.onUpdate);\r\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\r\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\r\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\r\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\r\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\r\n        ChatStore.off('updateChatIsMarkedAsUnread', this.onUpdate);\r\n        ChatStore.off('updateChatPosition', this.onUpdate);\r\n        ChatStore.off('updateChatNotificationSettings', this.onUpdate);\r\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\r\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\r\n        ChatStore.off('updateChatReadOutbox', this.onUpdate);\r\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\r\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\r\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\r\n    }\r\n\r\n    onClientUpdateClearHistory = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (chatId === update.chatId) {\r\n            this.clearHistory = update.inProgress;\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    onFastUpdatingComplete = update => {\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onUpdate = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (update.chat_id !== chatId) return;\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onUpdateScopeNotificationSettings = update => {\r\n        const { chatId } = this.props;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        switch (update.scope['@type']) {\r\n            case 'notificationSettingsScopeGroupChats': {\r\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\r\n                    this.forceUpdate();\r\n                }\r\n                break;\r\n            }\r\n            case 'notificationSettingsScopePrivateChats': {\r\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\r\n                    this.forceUpdate();\r\n                }\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    render() {\r\n        if (this.clearHistory) return null;\r\n\r\n        const { chatId, chatList } = this.props;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return null;\r\n\r\n        const { unread_count } = chat;\r\n        const isPinned = isChatPinned(chatId, chatList);\r\n\r\n        const showUnreadMentionCount = showChatUnreadMentionCount(chatId);\r\n        const showUnreadCount = showChatUnreadCount(chatId);\r\n        const isMuted = isChatMuted(chatId);\r\n\r\n        return (\r\n            <>\r\n                {showUnreadMentionCount && (\r\n                    <div className='dialog-badge'>\r\n                        <div className='dialog-badge-mention'>@</div>\r\n                    </div>\r\n                )}\r\n                {showUnreadCount && (\r\n                    <div className={classNames({ 'dialog-badge-muted': isMuted }, 'dialog-badge')}>\r\n                        <span className='dialog-badge-text'>{unread_count > 0 ? unread_count : ''}</span>\r\n                    </div>\r\n                )}\r\n                {isPinned && !showUnreadCount && !showUnreadMentionCount && (\r\n                    <div className='dialog-badge-pinned'>\r\n                        <PinIcon className='dialog-badge-pinned-icon' />\r\n                    </div>\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DialogBadge;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <g stroke='none' strokeWidth='1' fill='none' fillRule='evenodd'>\r\n        <g transform='translate(-3.000000, 0.000000)' fill='#E53935' fillRule='nonzero'>\r\n            <path d='M10,0.4 C13.6450793,0.4 16.6,3.35492065 16.6,7 C16.6,10.6450793 13.6450793,13.6 10,13.6 C6.35492065,13.6 3.4,10.6450793 3.4,7 C3.4,3.35492065 6.35492065,0.4 10,0.4 Z M10,9.25 C9.58578644,9.25 9.25,9.58578644 9.25,10 C9.25,10.4142136 9.58578644,10.75 10,10.75 C10.4142136,10.75 10.75,10.4142136 10.75,10 C10.75,9.58578644 10.4142136,9.25 10,9.25 Z M10,2.85 C9.64101491,2.85 9.35,3.14101491 9.35,3.5 L9.35,7.5 C9.35,7.85898509 9.64101491,8.15 10,8.15 C10.3589851,8.15 10.65,7.85898509 10.65,7.5 L10.65,3.5 C10.65,3.14101491 10.3589851,2.85 10,2.85 Z' />\r\n        </g>\r\n    </g>,\r\n    'Error'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <g strokeWidth='1' fill='none' fillRule='evenodd' strokeLinecap='round' strokeLinejoin='round'>\r\n        <g transform='translate(-3.000000, 0.000000)'>\r\n            <circle strokeWidth='1.2' cx='10' cy='7' r='6' />\r\n            <line x1='10' y1='3.5' x2='10' y2='7' strokeWidth='1.3' />\r\n            <line x1='12' y1='9' x2='10' y2='7' strokeWidth='1.3' />\r\n        </g>\r\n    </g>,\r\n    'Pending'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path\r\n        transform='translate(-4.000000, -2.000000)'\r\n        d='M7.96833846,10.0490996 L14.5108251,2.571972 C14.7472185,2.30180819 15.1578642,2.27443181 15.428028,2.51082515 C15.6711754,2.72357915 15.717665,3.07747757 15.5522007,3.34307913 L15.4891749,3.428028 L8.48917485,11.428028 C8.2663359,11.6827011 7.89144111,11.7199091 7.62486888,11.5309823 L7.54038059,11.4596194 L4.54038059,8.45961941 C4.2865398,8.20577862 4.2865398,7.79422138 4.54038059,7.54038059 C4.7688373,7.31192388 5.12504434,7.28907821 5.37905111,7.47184358 L5.45961941,7.54038059 L7.96833846,10.0490996 L14.5108251,2.571972 L7.96833846,10.0490996 Z'\r\n    />,\r\n    'Sent'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path\r\n        transform='translate(-1.000000, -2.000000)'\r\n        d='M4.96833846,10.0490996 L11.5108251,2.571972 C11.7472185,2.30180819 12.1578642,2.27443181 12.428028,2.51082515 C12.6711754,2.72357915 12.717665,3.07747757 12.5522007,3.34307913 L12.4891749,3.428028 L5.48917485,11.428028 C5.2663359,11.6827011 4.89144111,11.7199091 4.62486888,11.5309823 L4.54038059,11.4596194 L1.54038059,8.45961941 C1.2865398,8.20577862 1.2865398,7.79422138 1.54038059,7.54038059 C1.7688373,7.31192388 2.12504434,7.28907821 2.37905111,7.47184358 L2.45961941,7.54038059 L4.96833846,10.0490996 L11.5108251,2.571972 L4.96833846,10.0490996 Z M9.96833846,10.0490996 L16.5108251,2.571972 C16.7472185,2.30180819 17.1578642,2.27443181 17.428028,2.51082515 C17.6711754,2.72357915 17.717665,3.07747757 17.5522007,3.34307913 L17.4891749,3.428028 L10.4891749,11.428028 C10.2663359,11.6827011 9.89144111,11.7199091 9.62486888,11.5309823 L9.54038059,11.4596194 L8.54038059,10.4596194 C8.2865398,10.2057786 8.2865398,9.79422138 8.54038059,9.54038059 C8.7688373,9.31192388 9.12504434,9.28907821 9.37905111,9.47184358 L9.45961941,9.54038059 L9.96833846,10.0490996 L16.5108251,2.571972 L9.96833846,10.0490996 Z'\r\n    />,\r\n    'Succeeded'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ErrorIcon from '../../Assets/Icons/Error';\r\nimport PendingIcon from '../../Assets/Icons/Pending';\r\nimport SentIcon from '../../Assets/Icons/Sent';\r\nimport SucceededIcon from '../../Assets/Icons/Succeeded';\r\nimport { isMessageUnread } from '../../Utils/Message';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport './Status.css';\r\n\r\nclass Status extends React.Component {\r\n    state = {};\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { chatId, messageId } = props;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        const sendingState = message ? message.sending_state : null;\r\n\r\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\r\n            return {\r\n                prevChatId: chatId,\r\n                prevMessageId: messageId,\r\n                sendingState,\r\n                unread: isMessageUnread(chatId, messageId)\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        ChatStore.on('updateChatReadOutbox', this.onUpdateChatReadOutbox);\r\n\r\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSend);\r\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSend);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ChatStore.off('updateChatReadOutbox', this.onUpdateChatReadOutbox);\r\n\r\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSend);\r\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSend);\r\n    }\r\n\r\n    onUpdateMessageSend = update => {\r\n        const { chatId, messageId } = this.props;\r\n        const { old_message_id, message } = update;\r\n\r\n        if (messageId !== old_message_id) return;\r\n        if (!message) return;\r\n\r\n        const { chat_id, id, sending_state } = message;\r\n        if (chatId !== chat_id) return;\r\n\r\n        this.newMessageId = id;\r\n        this.setState({ sendingState: sending_state });\r\n    };\r\n\r\n    onUpdateChatReadOutbox = update => {\r\n        const { chatId, messageId } = this.props;\r\n        const { chat_id, last_read_outbox_message_id } = update;\r\n        const { newMessageId } = this;\r\n\r\n        if (chatId !== chat_id) return;\r\n\r\n        if ((newMessageId && newMessageId <= last_read_outbox_message_id) || messageId <= last_read_outbox_message_id) {\r\n            this.setState({ sendingState: null, unread: false });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { sendingState, unread } = this.state;\r\n        if (!unread) {\r\n            return <SucceededIcon className='status' viewBox='0 0 17 10' style={{ width: 16, height: 9 }} />;\r\n        }\r\n\r\n        if (sendingState) {\r\n            return sendingState['@type'] === 'messageSendingStateFailed' ? (\r\n                <ErrorIcon\r\n                    className='status'\r\n                    viewBox='0 0 14 14'\r\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)' }}\r\n                />\r\n            ) : (\r\n                <PendingIcon\r\n                    className='status'\r\n                    viewBox='0 0 14 14'\r\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)', stroke: 'currentColor' }}\r\n                />\r\n            );\r\n        }\r\n\r\n        return <SentIcon className='status' viewBox='0 0 12 10' style={{ width: 16, height: 9 }} />;\r\n    }\r\n}\r\n\r\nStatus.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired\r\n};\r\n\r\nexport default Status;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport Status from '../Message/Status';\r\nimport { getLastMessageDate, isMeChat } from '../../Utils/Chat';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport './DialogMeta.css';\r\n\r\nclass DialogMeta extends React.Component {\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId } = this.props;\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\r\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\r\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\r\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\r\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\r\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\r\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\r\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\r\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\r\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\r\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\r\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\r\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\r\n    }\r\n\r\n    onClientUpdateClearHistory = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (chatId === update.chatId) {\r\n            this.clearHistory = update.inProgress;\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    onFastUpdatingComplete = update => {\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onUpdate = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (chatId !== update.chat_id) return;\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    render() {\r\n        if (this.clearHistory) return null;\r\n\r\n        const { chatId } = this.props;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return null;\r\n\r\n        const isMe = isMeChat(chatId);\r\n\r\n        const { last_message } = chat;\r\n        if (!last_message) return null;\r\n\r\n        const date = getLastMessageDate(chat);\r\n        if (!date) return null;\r\n\r\n        const { id, is_outgoing } = last_message;\r\n\r\n        return (\r\n            <div className='dialog-meta'>\r\n                {is_outgoing && !isMe && (\r\n                    <>\r\n                        <Status chatId={chatId} messageId={id} />\r\n                        <span> </span>\r\n                    </>\r\n                )}\r\n                {date}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DialogMeta;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M8.29289322,11.2928932 C8.68341751,10.9023689 9.31658249,10.9023689 9.70710678,11.2928932 L9.70710678,11.2928932 L12,13.5857864 L14.2928932,11.2928932 C14.6834175,10.9023689 15.3165825,10.9023689 15.7071068,11.2928932 C16.0976311,11.6834175 16.0976311,12.3165825 15.7071068,12.7071068 L15.7071068,12.7071068 L12.7071068,15.7071068 C12.3165825,16.0976311 11.6834175,16.0976311 11.2928932,15.7071068 L11.2928932,15.7071068 L8.29289322,12.7071068 C7.90236893,12.3165825 7.90236893,11.6834175 8.29289322,11.2928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\r\n    'Archive'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M12.7071068,10.7928932 L15.7071068,13.7928932 C16.0976311,14.1834175 16.0976311,14.8165825 15.7071068,15.2071068 C15.3165825,15.5976311 14.6834175,15.5976311 14.2928932,15.2071068 L12,12.9142136 L9.70710678,15.2071068 C9.31658249,15.5976311 8.68341751,15.5976311 8.29289322,15.2071068 C7.90236893,14.8165825 7.90236893,14.1834175 8.29289322,13.7928932 L11.2928932,10.7928932 C11.6834175,10.4023689 12.3165825,10.4023689 12.7071068,10.7928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\r\n    'Unarchive'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z' />,\r\n    'Pin2'\r\n);\r\n\r\n// <?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n// <svg width=\"16px\" height=\"21px\" viewBox=\"0 0 16 21\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\r\n//     <!-- Generator: Sketch 61.2 (89653) - https://sketch.com -->\r\n// <title>Combined Shape</title>\r\n// <desc>Created with Sketch.</desc>\r\n// <g id=\"Graphics\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\r\n// <g id=\"Graphics-/-Icons-/-Pin\" transform=\"translate(-4.000000, -2.000000)\" fill=\"#707579\" fill-rule=\"nonzero\">\r\n// <path d=\"M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z\" id=\"Combined-Shape\"></path>\r\n// </g>\r\n// </g>\r\n// </svg>\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M3.30352462,2.28241931 C3.6998335,1.89776658 4.33292796,1.90721575 4.71758069,2.30352462 L4.71758069,2.30352462 L21.2175807,19.3035246 C21.6022334,19.6998335 21.5927842,20.332928 21.1964754,20.7175807 C20.8001665,21.1022334 20.167072,21.0927842 19.7824193,20.6964754 L19.7824193,20.6964754 L18.127874,18.9919007 C18.1241295,18.9923786 18.1203785,18.9928359 18.1166211,18.9932723 L18,19 L4,19 C3.23933773,19 2.77101468,18.1926118 3.11084891,17.5416503 L3.16794971,17.4452998 L5,14.6972244 L5,9 C5,7.98873702 5.21529462,7.00715088 5.62359521,6.10821117 L3.28241931,3.69647538 C2.89776658,3.3001665 2.90721575,2.66707204 3.30352462,2.28241931 Z M7.00817933,8.71121787 L7,9 L7,14.6972244 C7,15.0356672 6.91413188,15.3676193 6.75167088,15.6624466 L6.66410059,15.8066248 L5.86851709,17 L16.1953186,16.9999993 L7.16961011,7.7028948 C7.08210009,8.02986218 7.02771758,8.36725335 7.00817933,8.71121787 Z M12,2 C15.7854517,2 18.8690987,5.00478338 18.995941,8.75935025 L19,9 L19,12 C19,12.5522847 18.5522847,13 18,13 C17.4871642,13 17.0644928,12.6139598 17.0067277,12.1166211 L17,12 L17,9 C17,6.23857625 14.7614237,4 12,4 C11.3902636,4 10.7970241,4.10872043 10.239851,4.31831953 C9.72293204,4.51277572 9.14624852,4.25136798 8.95179232,3.734449 C8.75733613,3.21753002 9.01874387,2.6408465 9.53566285,2.4463903 C10.3171048,2.15242503 11.1488212,2 12,2 Z' />,\r\n    'Mute'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M12,2 C15.8659932,2 19,5.13400675 19,9 L19,14.6972244 L20.8320503,17.4452998 C21.2750868,18.1098545 20.7986954,19 20,19 L4,19 C3.20130462,19 2.72491322,18.1098545 3.16794971,17.4452998 L5,14.6972244 L5,9 C5,5.13400675 8.13400675,2 12,2 Z M12,4 C9.23857625,4 7,6.23857625 7,9 L7,14.6972244 C7,15.0920743 6.88312395,15.4780897 6.66410059,15.8066248 L5.86851709,17 L18.1314829,17 L17.3358994,15.8066248 C17.1168761,15.4780897 17,15.0920743 17,14.6972244 L17,9 C17,6.23857625 14.7614237,4 12,4 Z' />,\r\n    'Unmute'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M12,12 C15.9072418,12 18.715318,13.0364023 20.3351717,15.1788288 C20.7665758,15.7493929 21,16.4451545 21,17.1604559 L21,18.2857143 C21,19.7847729 19.7847729,21 18.2857143,21 L5.71428571,21 C4.21522711,21 3,19.7847729 3,18.2857143 L3,17.160494 C3,16.445199 3.23340019,15.7494497 3.66478123,15.178891 C5.28463457,13.0364199 8.09272555,12 12,12 Z M12,14 C8.66170181,14 6.44476079,14.8182362 5.26012276,16.3850773 C5.09133017,16.6083279 5,16.8805766 5,17.160494 L5,18.2857143 C5,18.6802034 5.31979661,19 5.71428571,19 L18.2857143,19 C18.6802034,19 19,18.6802034 19,18.2857143 L19,17.1604559 C19,16.8805572 18.9086617,16.6083073 18.7398491,16.38504 C17.5552048,14.8182236 15.3382718,14 12,14 Z M12,2 C14.209139,2 16,3.790861 16,6 C16,8.209139 14.209139,10 12,10 C9.790861,10 8,8.209139 8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 C10,7.1045695 10.8954305,8 12,8 C13.1045695,8 14,7.1045695 14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\r\n    'User'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M8,13 C11.3229116,13 13.7530244,13.8337117 15.2223821,15.5699359 C15.724477,16.1632234 16,16.915291 16,17.6925226 L16,18.5 C16,19.8807119 14.8807119,21 13.5,21 L2.5,21 C1.11928813,21 0,19.8807119 0,18.5 L0,17.6925204 C0,16.9152876 0.275524605,16.1632192 0.777621166,15.569932 C2.24697824,13.8337108 4.67709024,13 8,13 Z M17.9515112,14.0335753 L18.0683205,14.0347288 C20.2213596,14.1802785 21.8813904,14.7876525 23.0130897,15.8958397 C23.5916808,16.4623828 23.9388003,17.2206225 23.9926356,18.0235027 L24,18.2434663 L24,18.75 C24,19.940864 23.0748384,20.9156449 21.9040488,20.9948092 L21.75,21 L19,21 C18.4477153,21 18,20.5522847 18,20 C18,19.4871642 18.3860402,19.0644928 18.8833789,19.0067277 L19,19 L21.75,19 C21.8683467,19 21.9674868,18.9177666 21.9933973,18.8073227 L22,18.75 L22,18.2434663 C22,17.8977921 21.8608093,17.5666871 21.6138154,17.3248364 C20.8641159,16.5907126 19.6490875,16.1461566 17.9334244,16.0301743 C17.3823973,15.9929238 16.9658991,15.5160306 17.0031496,14.9650035 C17.0377394,14.4533355 17.4514089,14.0576643 17.9515112,14.0335753 L17.9515112,14.0335753 Z M8,15 C5.21130036,15 3.33538166,15.6435809 2.30428673,16.861943 C2.10781409,17.0940989 2,17.3883868 2,17.6925212 L2,18.5 C2,18.7761424 2.22385763,19 2.5,19 L13.5,19 C13.7761424,19 14,18.7761424 14,18.5 L14,17.6925226 C14,17.3883883 13.8921864,17.0941004 13.6957148,16.8619448 C12.6646202,15.6435815 10.788701,15 8,15 Z M17,5 C18.9329966,5 20.5,6.56700338 20.5,8.5 C20.5,10.4329966 18.9329966,12 17,12 C15.0670034,12 13.5,10.4329966 13.5,8.5 C13.5,6.56700338 15.0670034,5 17,5 Z M8,3 C10.209139,3 12,4.790861 12,7 C12,9.209139 10.209139,11 8,11 C5.790861,11 4,9.209139 4,7 C4,4.790861 5.790861,3 8,3 Z M17,7 C16.1715729,7 15.5,7.67157288 15.5,8.5 C15.5,9.32842712 16.1715729,10 17,10 C17.8284271,10 18.5,9.32842712 18.5,8.5 C18.5,7.67157288 17.8284271,7 17,7 Z M8,5 C6.8954305,5 6,5.8954305 6,7 C6,8.1045695 6.8954305,9 8,9 C9.1045695,9 10,8.1045695 10,7 C10,5.8954305 9.1045695,5 8,5 Z' />,\r\n    'Group'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.11589252,22.3301061 2,22.0503168 2,21.7585786 L2,6 C2,3.790861 3.790861,2 6,2 L18,2 C20.209139,2 22,3.790861 22,6 L22,15 C22,17.209139 20.209139,19 18,19 L7.41421356,19 Z M4,19.5857864 L6.20502525,17.3807612 C6.44882255,17.1369639 6.77948263,17 7.12426407,17 L18,17 C19.1045695,17 20,16.1045695 20,15 L20,6 C20,4.8954305 19.1045695,4 18,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,19.5857864 Z' />,\r\n    'Message'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M6,2 L18,2 C20.1421954,2 21.8910789,3.68396847 21.9951047,5.80035966 L22,6 L22,10 C22,10.5522847 21.5522847,11 21,11 C20.4871642,11 20.0644928,10.6139598 20.0067277,10.1166211 L20,10 L20,6 C20,4.9456382 19.1841222,4.08183488 18.1492623,4.00548574 L18,4 L6,4 C4.9456382,4 4.08183488,4.81587779 4.00548574,5.85073766 L4,6 L4,19.5857864 L6.20502525,17.3807612 C6.41399436,17.1717921 6.68678103,17.0413128 6.97757724,17.0082977 L7.12426407,17 L13,17 C13.5522847,17 14,17.4477153 14,18 C14,18.5128358 13.6139598,18.9355072 13.1166211,18.9932723 L13,19 L7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.14536253,22.3595761 2.034957,22.1287566 2.00702113,21.8826983 L2,21.7585786 L2,6 C2,3.85780461 3.68396847,2.10892112 5.80035966,2.00489531 L6,2 L18,2 L6,2 Z M19,12 C21.209139,12 23,13.790861 23,16 C23,18.209139 21.209139,20 19,20 C16.790861,20 15,18.209139 15,16 C15,13.790861 16.790861,12 19,12 Z M19,14 C17.8954305,14 17,14.8954305 17,16 C17,17.1045695 17.8954305,18 19,18 C20.1045695,18 21,17.1045695 21,16 C21,14.8954305 20.1045695,14 19,14 Z' />,\r\n    'Unread'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport ChatTile from './ChatTile';\r\nimport DialogContent from './DialogContent';\r\nimport DialogBadge from './DialogBadge';\r\nimport DialogTitle from './DialogTitle';\r\nimport DialogMeta from './DialogMeta';\r\nimport ArchiveIcon from '../../Assets/Icons/Archive';\r\nimport UnarchiveIcon from '../../Assets/Icons/Unarchive';\r\nimport PinIcon from '../../Assets/Icons/Pin2';\r\nimport UnpinIcon from '../../Assets/Icons/Pin2';\r\nimport MuteIcon from '../../Assets/Icons/Mute';\r\nimport UnmuteIcon from '../../Assets/Icons/Unmute';\r\nimport UserIcon from '../../Assets/Icons/User';\r\nimport GroupIcon from '../../Assets/Icons/Group';\r\nimport MessageIcon from '../../Assets/Icons/Message';\r\nimport UnreadIcon from '../../Assets/Icons/Unread';\r\nimport {\r\n    canAddChatToList,\r\n    isChatArchived,\r\n    isChatMuted,\r\n    isChatPinned,\r\n    isChatSecret,\r\n    isChatUnread,\r\n    isPrivateChat\r\n} from '../../Utils/Chat';\r\nimport {\r\n    addChatToList,\r\n    toggleChatIsMarkedAsUnread,\r\n    toggleChatIsPinned,\r\n    toggleChatNotificationSettings\r\n} from '../../Actions/Chat';\r\nimport { openChat } from '../../Actions/Client';\r\nimport { viewMessages } from '../../Actions/Message';\r\nimport ApplicationStore from '../../Stores/ApplicationStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport OptionStore from '../../Stores/OptionStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './Dialog.css';\r\n\r\nclass Dialog extends Component {\r\n    static contextMenuId;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.dialog = React.createRef();\r\n\r\n        const chat = ChatStore.get(this.props.chatId);\r\n        this.state = {\r\n            chat,\r\n            contextMenu: false,\r\n            left: 0,\r\n            top: 0\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, t, hidden, isLastPinned, chatList, style } = this.props;\r\n        const { contextMenu } = this.state;\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            // console.log('[vl] Dialog.shouldUpdate true chatId');\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.t !== t) {\r\n            // console.log('[vl] Dialog.shouldUpdate true t');\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.hidden !== hidden) {\r\n            // console.log('[vl] Dialog.shouldUpdate true hidden');\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.isLastPinned !== isLastPinned) {\r\n            // console.log('[vl] Dialog.shouldUpdate true isLastPinned');\r\n            return true;\r\n        }\r\n\r\n        if (nextState.contextMenu !== contextMenu) {\r\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\r\n            return true;\r\n        }\r\n\r\n        if (nextState.chatList !== chatList) {\r\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.style && style && style.top !== nextProps.style.top) {\r\n            // console.log('[vl] Dialog.shouldUpdate true style');\r\n            return true;\r\n        }\r\n\r\n        // console.log('[vl] Dialog.shouldUpdate false');\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ApplicationStore.off('clientUpdateChatId', this.onClientUpdateChatId);\r\n    }\r\n\r\n    onClientUpdateChatId = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (chatId === update.previousChatId || chatId === update.nextChatId) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    handleSelect = event => {\r\n        if (event.button === 0) {\r\n            openChat(this.props.chatId);\r\n        }\r\n    };\r\n\r\n    handleContextMenu = async event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        const { chatId, chatList } = this.props;\r\n        const { contextMenu } = this.state;\r\n\r\n        if (contextMenu) {\r\n            this.setState({ contextMenu: false });\r\n        } else {\r\n            const contextMenuId = new Date();\r\n            Dialog.contextMenuId = contextMenuId;\r\n\r\n            const left = event.clientX;\r\n            const top = event.clientY;\r\n            const isPinned = isChatPinned(chatId, chatList);\r\n            const canTogglePin = (await this.canPinChats(chatId)) || isPinned;\r\n            const canToggleArchive = canAddChatToList(chatId);\r\n\r\n            if (Dialog.contextMenuId !== contextMenuId) {\r\n                return;\r\n            }\r\n\r\n            this.setState({\r\n                contextMenu: true,\r\n                canTogglePin,\r\n                canToggleArchive,\r\n                left,\r\n                top\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseContextMenu = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({ contextMenu: false });\r\n    };\r\n\r\n    handleMute = event => {\r\n        this.handleCloseContextMenu(event);\r\n\r\n        const { chatId } = this.props;\r\n\r\n        toggleChatNotificationSettings(chatId, !isChatMuted(chatId));\r\n    };\r\n\r\n    canPinChats = async chatId => {\r\n        const { chatList } = this.props;\r\n\r\n        const pinnedSumMaxOption = isChatArchived(chatId)\r\n            ? OptionStore.get('pinned_archived_chat_count_max')\r\n            : OptionStore.get('pinned_chat_count_max');\r\n        if (!pinnedSumMaxOption) return false;\r\n\r\n        const isSecret = isChatSecret(chatId);\r\n        const chats = await TdLibController.send({\r\n            '@type': 'getChats',\r\n            chat_list: chatList,\r\n            offset_order: '9223372036854775807',\r\n            offset_chat_id: 0,\r\n            limit: pinnedSumMaxOption.value + 10\r\n        });\r\n\r\n        const pinnedSum = chats.chat_ids.reduce((x, id) => {\r\n            if (isChatSecret(id) !== isSecret) return x;\r\n\r\n            const chat = ChatStore.get(id);\r\n\r\n            return x + (chat && isChatPinned(chat.id, chatList) ? 1 : 0);\r\n        }, 0);\r\n\r\n        return pinnedSum < pinnedSumMaxOption.value;\r\n    };\r\n\r\n    handlePin = async event => {\r\n        this.handleCloseContextMenu(event);\r\n\r\n        const { chatId, chatList } = this.props;\r\n        const isPinned = isChatPinned(chatId, chatList);\r\n\r\n        if (!isPinned && !this.canPinChats(chatId)) return;\r\n\r\n        toggleChatIsPinned(chatId, chatList, !isPinned);\r\n    };\r\n\r\n    handleArchive = async event => {\r\n        this.handleCloseContextMenu(event);\r\n\r\n        const { chatId } = this.props;\r\n        if (!canAddChatToList(chatId)) return;\r\n\r\n        addChatToList(chatId, { '@type': isChatArchived(chatId) ? 'chatListMain' : 'chatListArchive' });\r\n    };\r\n\r\n    getViewInfoTitle = () => {\r\n        const { chatId, t } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        const { type } = chat;\r\n        switch (type['@type']) {\r\n            case 'chatTypeBasicGroup': {\r\n                return t('ViewGroupInfo');\r\n            }\r\n            case 'chatTypePrivate':\r\n            case 'chatTypeSecret': {\r\n                return t('ViewProfile');\r\n            }\r\n            case 'chatTypeSupergroup': {\r\n                if (type.is_channel) {\r\n                    return t('ViewChannelInfo');\r\n                }\r\n\r\n                return t('ViewGroupInfo');\r\n            }\r\n        }\r\n    };\r\n\r\n    handleViewInfo = event => {\r\n        this.handleCloseContextMenu(event);\r\n\r\n        const { chatId } = this.props;\r\n\r\n        openChat(chatId, null, true);\r\n    };\r\n\r\n    handleRead = event => {\r\n        this.handleCloseContextMenu(event);\r\n\r\n        const { chatId } = this.props;\r\n\r\n        const isUnread = isChatUnread(chatId);\r\n        if (isUnread) {\r\n            const chat = ChatStore.get(chatId);\r\n            if (!chat) return;\r\n\r\n            const { is_marked_as_unread, last_message, unread_count } = chat;\r\n            if (unread_count > 0 && last_message) {\r\n                viewMessages(chatId, [last_message.id], true);\r\n            } else if (is_marked_as_unread) {\r\n                toggleChatIsMarkedAsUnread(chatId, false);\r\n            }\r\n        } else {\r\n            toggleChatIsMarkedAsUnread(chatId, true);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { chatId, chatList, showSavedMessages, hidden, t, isLastPinned, style } = this.props;\r\n        const { contextMenu, left, top, canToggleArchive, canTogglePin } = this.state;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        const isPinned = isChatPinned(chatId, chatList);\r\n        const currentChatId = ApplicationStore.getChatId();\r\n        const isSelected = currentChatId === chatId;\r\n        const isMuted = isChatMuted(chatId);\r\n        const isUnread = isChatUnread(chatId);\r\n        const isArchived = isChatArchived(chatId);\r\n        return (\r\n            <div\r\n                ref={this.dialog}\r\n                className={classNames('dialog', { 'item-selected': isSelected }, { 'dialog-hidden': hidden })}\r\n                onMouseDown={this.handleSelect}\r\n                onContextMenu={this.handleContextMenu}\r\n                style={style}>\r\n                <div className='dialog-wrapper'>\r\n                    <ChatTile chatId={chatId} dialog showSavedMessages={showSavedMessages} showOnline />\r\n                    <div className='dialog-inner-wrapper'>\r\n                        <div className='tile-first-row'>\r\n                            <DialogTitle chatId={chatId} />\r\n                            <DialogMeta chatId={chatId} />\r\n                        </div>\r\n                        <div className='tile-second-row'>\r\n                            <DialogContent chatId={chatId} />\r\n                            <DialogBadge chatId={chatId} chatList={chatList} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Popover\r\n                    open={contextMenu}\r\n                    onClose={this.handleCloseContextMenu}\r\n                    anchorReference='anchorPosition'\r\n                    anchorPosition={{ top, left }}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'left'\r\n                    }}\r\n                    onMouseDown={e => e.stopPropagation()}>\r\n                    <MenuList onClick={e => e.stopPropagation()}>\r\n                        {canToggleArchive && (\r\n                            <MenuItem onClick={this.handleArchive}>\r\n                                {isArchived ? (\r\n                                    <>\r\n                                        <ListItemIcon>\r\n                                            <UnarchiveIcon />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText primary={t('Unarchive')} />\r\n                                    </>\r\n                                ) : (\r\n                                    <>\r\n                                        <ListItemIcon>\r\n                                            <ArchiveIcon />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText primary={t('Archive')} />\r\n                                    </>\r\n                                )}\r\n                            </MenuItem>\r\n                        )}\r\n                        {canTogglePin && (\r\n                            <MenuItem onClick={this.handlePin}>\r\n                                {isPinned ? (\r\n                                    <>\r\n                                        <ListItemIcon>\r\n                                            <UnpinIcon />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText primary={t('UnpinFromTop')} />\r\n                                    </>\r\n                                ) : (\r\n                                    <>\r\n                                        <ListItemIcon>\r\n                                            <PinIcon />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText primary={t('PinToTop')} />\r\n                                    </>\r\n                                )}\r\n                            </MenuItem>\r\n                        )}\r\n                        <MenuItem onClick={this.handleViewInfo}>\r\n                            {isPrivateChat(chatId) ? (\r\n                                <>\r\n                                    <ListItemIcon>\r\n                                        <UserIcon />\r\n                                    </ListItemIcon>\r\n                                    <ListItemText primary={this.getViewInfoTitle()} />\r\n                                </>\r\n                            ) : (\r\n                                <>\r\n                                    <ListItemIcon>\r\n                                        <GroupIcon />\r\n                                    </ListItemIcon>\r\n                                    <ListItemText primary={this.getViewInfoTitle()} />\r\n                                </>\r\n                            )}\r\n                        </MenuItem>\r\n                        <MenuItem onClick={this.handleMute}>\r\n                            {isMuted ? (\r\n                                <>\r\n                                    <ListItemIcon>\r\n                                        <UnmuteIcon />\r\n                                    </ListItemIcon>\r\n                                    <ListItemText primary={t('ChatsUnmute')} />\r\n                                </>\r\n                            ) : (\r\n                                <>\r\n                                    <ListItemIcon>\r\n                                        <MuteIcon />\r\n                                    </ListItemIcon>\r\n                                    <ListItemText primary={t('ChatsMute')} />\r\n                                </>\r\n                            )}\r\n                        </MenuItem>\r\n                        <MenuItem onClick={this.handleRead}>\r\n                            {isUnread ? (\r\n                                <>\r\n                                    <ListItemIcon>\r\n                                        <MessageIcon />\r\n                                    </ListItemIcon>\r\n                                    <ListItemText primary={t('MarkAsRead')} />\r\n                                </>\r\n                            ) : (\r\n                                <>\r\n                                    <ListItemIcon>\r\n                                        <UnreadIcon />\r\n                                    </ListItemIcon>\r\n                                    <ListItemText primary={t('MarkAsUnread')} />\r\n                                </>\r\n                            )}\r\n                        </MenuItem>\r\n                    </MenuList>\r\n                </Popover>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nDialog.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    chatList: PropTypes.object.isRequired,\r\n    hidden: PropTypes.bool,\r\n    showSavedMessages: PropTypes.bool,\r\n    isLastPinned: PropTypes.bool,\r\n    style: PropTypes.object\r\n};\r\n\r\nDialog.defaultProps = {\r\n    hidden: false,\r\n    showSavedMessages: true\r\n};\r\n\r\nexport default withTranslation()(Dialog);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport TdLibController from '../Controllers/TdLibController';\r\n\r\nexport function viewMessages(chatId, messageIds, forceRead) {\r\n    TdLibController.send({\r\n        '@type': 'viewMessages',\r\n        chat_id: chatId,\r\n        message_ids: messageIds,\r\n        force_read: forceRead\r\n    });\r\n}\r\n\r\nexport function pinMessage(chatId, messageId, disableNotification = false) {\r\n    TdLibController.send({\r\n        '@type': 'pinChatMessage',\r\n        chat_id: chatId,\r\n        message_id: messageId,\r\n        disable_notification: disableNotification\r\n    });\r\n}\r\n\r\nexport function unpinMessage(chatId) {\r\n    TdLibController.send({\r\n        '@type': 'unpinChatMessage',\r\n        chat_id: chatId\r\n    });\r\n}\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { getChatTitle } from '../../Utils/Chat';\r\nimport './DialogPlaceholder.css';\r\n\r\nclass DialogPlaceholder extends React.Component {\r\n    render() {\r\n        const { chatId, index, showTitle } = this.props;\r\n\r\n        let title = null;\r\n        if (showTitle) {\r\n            title = getChatTitle(chatId, true);\r\n        }\r\n\r\n        const titleWidth = `${50 + Math.sin(index) * 10}%`;\r\n        const contentWidth = `${70 + Math.cos(index) * 10}%`;\r\n\r\n        return (\r\n            <div className='dialog-placeholder'>\r\n                <div className='dialog-placeholder-wrapper'>\r\n                    <div className='dialog-placeholder-tile' />\r\n                    <div className='dialog-placeholder-inner-wrapper'>\r\n                        <div className='tile-first-row'>\r\n                            {showTitle ? (\r\n                                title\r\n                            ) : (\r\n                                <div className='dialog-placeholder-title' style={{ width: titleWidth }} />\r\n                            )}\r\n                        </div>\r\n                        <div className='tile-second-row'>\r\n                            <div className='dialog-placeholder-content' style={{ width: contentWidth }} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nDialogPlaceholder.propTypes = {\r\n    index: PropTypes.number.isRequired,\r\n    showTitle: PropTypes.bool\r\n};\r\n\r\nexport default DialogPlaceholder;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport './VirtualizedList.css';\r\n\r\nconst style = {\r\n    listWrapper: height => ({\r\n        height,\r\n        position: 'relative'\r\n    }),\r\n    item: (index, height) => ({\r\n        height,\r\n        left: 0,\r\n        right: 0,\r\n        top: height * index,\r\n        position: 'absolute'\r\n    })\r\n};\r\n\r\nexport class VirtualizedList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.listRef = React.createRef();\r\n\r\n        this.state = {\r\n            scrollTop: 0,\r\n            renderIds: new Map(),\r\n            renderIdsList: [],\r\n            viewportHeight: 0\r\n        };\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.source !== this.props.source) {\r\n            this.setViewportHeight();\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        return true;\r\n\r\n        // const { renderIds } = this.state;\r\n        // const { renderIds: nextRenderIds } = nextState;\r\n        //\r\n        // if (renderIds.size === nextRenderIds.size) {\r\n        //     renderIds.forEach((value, key) => {\r\n        //         if (!nextRenderIds.has(key)) {\r\n        //             return true;\r\n        //         }\r\n        //     });\r\n        //\r\n        //     return false;\r\n        // }\r\n        //\r\n        // return true;\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('resize', this.setViewportHeight, true);\r\n\r\n        const { current } = this.listRef;\r\n        if (!current) return;\r\n        current.addEventListener('scroll', this.setScrollPosition, true);\r\n\r\n        this.setViewportHeight();\r\n    }\r\n\r\n    setViewportHeight = () => {\r\n        const { source } = this.props;\r\n        const { scrollTop } = this.state;\r\n        const { current } = this.listRef;\r\n        if (!current) return;\r\n\r\n        const viewportHeight = parseFloat(window.getComputedStyle(current, null).getPropertyValue('height'));\r\n        const renderIds = this.getRenderIds(source, viewportHeight, scrollTop);\r\n\r\n        // console.log('[vl] setViewportHeight');\r\n        this.setState({ viewportHeight, ...renderIds });\r\n    };\r\n\r\n    getRenderIds(source, viewportHeight, scrollTop) {\r\n        const renderIds = new Map();\r\n        const renderIdsList = [];\r\n        source.forEach((item, index) => {\r\n            if (this.isVisibleItem(index, viewportHeight, scrollTop)) {\r\n                renderIds.set(index, index);\r\n                renderIdsList.push(index);\r\n            }\r\n        });\r\n\r\n        return { renderIds, renderIdsList };\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.setViewportHeight);\r\n\r\n        const { current } = this.listRef;\r\n        if (!current) return;\r\n        current.removeEventListener('scroll', this.setScrollPosition);\r\n    }\r\n\r\n    getListRenderIds() {\r\n        const { renderIds } = this.state;\r\n\r\n        return renderIds;\r\n    }\r\n\r\n    setScrollPosition = event => {\r\n        const { source, rowHeight, onScroll } = this.props;\r\n        const { viewportHeight, scrollTop } = this.state;\r\n\r\n        if (Math.abs(event.target.scrollTop - scrollTop) >= rowHeight) {\r\n            const renderIds = this.getRenderIds(source, viewportHeight, event.target.scrollTop);\r\n\r\n            this.setState({\r\n                scrollTop: event.target.scrollTop,\r\n                ...renderIds\r\n            });\r\n        }\r\n\r\n        if (onScroll) {\r\n            onScroll(event);\r\n        }\r\n    };\r\n\r\n    getListRef() {\r\n        return this.listRef;\r\n    }\r\n\r\n    isVisibleItem = (index, viewportHeight, scrollTop) => {\r\n        const { overScanCount, rowHeight } = this.props;\r\n\r\n        const itemTop = index * rowHeight;\r\n        const itemBottom = (index + 1) * rowHeight;\r\n\r\n        return (\r\n            itemTop > scrollTop - overScanCount * rowHeight &&\r\n            itemBottom < scrollTop + viewportHeight + overScanCount * rowHeight\r\n        );\r\n    };\r\n\r\n    render() {\r\n        const { className, source, renderItem, rowHeight } = this.props;\r\n        const { renderIds } = this.state;\r\n\r\n        const items = (source || []).map((item, index) => {\r\n            return renderIds.has(index) && renderItem({ index, style: style.item(index, rowHeight) });\r\n        });\r\n\r\n        // console.log('[vl] render', source, renderIds);\r\n\r\n        return (\r\n            <div ref={this.listRef} className={classNames('vlist', className)}>\r\n                <div style={style.listWrapper((source || []).length * rowHeight)}>{items}</div>\r\n                {/*<div className='vlist-top-border'/>*/}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nVirtualizedList.defaultProps = {\r\n    source: [],\r\n    rowHeight: 72,\r\n    overScanCount: 5\r\n};\r\n\r\nVirtualizedList.propTypes = {\r\n    renderItem: PropTypes.func,\r\n    onScroll: PropTypes.func,\r\n    rowHeight: PropTypes.number,\r\n    className: PropTypes.string,\r\n    source: PropTypes.array.isRequired,\r\n    overScanCount: PropTypes.number.isRequired\r\n};\r\n\r\nexport default VirtualizedList;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nexport function findLastTextNode(element) {\r\n    if (element.nodeType === Node.TEXT_NODE) {\r\n        return element;\r\n    }\r\n\r\n    for (let i = element.childNodes.length - 1; i >= 0; i--) {\r\n        const textNode = findLastTextNode(element.childNodes[i]);\r\n        if (textNode) {\r\n            return textNode;\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nexport function focusInput(element) {\r\n    if (!element) return;\r\n\r\n    const textNode = findLastTextNode(element);\r\n    if (textNode) {\r\n        const range = document.createRange();\r\n        range.setStart(textNode, textNode.length);\r\n        range.collapse(true);\r\n\r\n        const selection = window.getSelection();\r\n        selection.removeAllRanges();\r\n        selection.addRange(range);\r\n    }\r\n\r\n    element.focus();\r\n}\r\n\r\nexport function scrollTop(element, behavior = 'smooth') {\r\n    if (!element) return;\r\n\r\n    element.scrollTop = Math.min(element.scrollTop, 100);\r\n    setTimeout(() => {\r\n        element.scrollTo({\r\n            top: 0,\r\n            behavior\r\n        });\r\n    }, 50);\r\n}\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M18.5,1.6784749 C19.8807119,1.6784749 21,2.79776303 21,4.1784749 L21,19.8215251 C21,20.4013736 20.7984395,20.9631907 20.4298256,21.4107932 C19.552097,22.4766065 17.9765451,22.6290792 16.9107319,21.7513507 L12,17.7064749 L12,19.5 C12,21.0976809 10.75108,22.4036609 9.17627279,22.4949073 L9,22.5 C7.34314575,22.5 6,21.1568542 6,19.5 L6,19.5 L5.99981203,16.8999437 C3.71766536,16.4366008 2,14.4188915 2,12 C2,9.23857625 4.23857625,7 7,7 L11.1412346,7 L16.9107319,2.24864931 C17.3583344,1.88003543 17.9201515,1.6784749 18.5,1.6784749 Z M8,19.5 C8,20.0522847 8.44771525,20.5 9,20.5 C9.55228475,20.5 10,20.0522847 10,19.5 L10,19.5 L10,16.9994749 L8,16.9994749 Z M18.5,3.6784749 C18.3840303,3.6784749 18.2716669,3.71878701 18.1821464,3.79250978 L12.4126491,8.54386047 C12.054567,8.83875158 11.6051134,9 11.1412346,9 L7,9 C5.34314575,9 4,10.3431458 4,12 C4,13.6568542 5.34314575,15 7,15 L11.1412346,15 C11.6051134,15 12.054567,15.1612484 12.4126491,15.4561395 L18.1821464,20.2074902 C18.395309,20.3830359 18.7104194,20.3525414 18.8859651,20.1393787 C18.9596879,20.0498582 19,19.9374948 19,19.8215251 L19,4.1784749 C19,3.90233253 18.7761424,3.6784749 18.5,3.6784749 Z' />,\r\n    'Channel'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M4,16 L20,16 C20.5522847,16 21,16.4477153 21,17 C21,17.5128358 20.6139598,17.9355072 20.1166211,17.9932723 L20,18 L4,18 C3.44771525,18 3,17.5522847 3,17 C3,16.4871642 3.38604019,16.0644928 3.88337887,16.0067277 L4,16 L20,16 L4,16 Z M4,11 L20,11 C20.5522847,11 21,11.4477153 21,12 C21,12.5128358 20.6139598,12.9355072 20.1166211,12.9932723 L20,13 L4,13 C3.44771525,13 3,12.5522847 3,12 C3,11.4871642 3.38604019,11.0644928 3.88337887,11.0067277 L4,11 Z M4,6 L20,6 C20.5522847,6 21,6.44771525 21,7 C21,7.51283584 20.6139598,7.93550716 20.1166211,7.99327227 L20,8 L4,8 C3.44771525,8 3,7.55228475 3,7 C3,6.48716416 3.38604019,6.06449284 3.88337887,6.00672773 L4,6 Z' />,\r\n    'Menu'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M11.9779053,15.294165 C12.6523978,15.294165 13.1985107,15.8124506 13.1985107,16.4732666 C13.1985107,17.1238794 12.6418359,17.6523682 11.9779053,17.6523682 C11.3175981,17.6523682 10.7572998,17.1168932 10.7572998,16.4732666 C10.7572998,15.8194152 11.3070616,15.294165 11.9779053,15.294165 Z M12.3306885,6.9 C14.2795758,6.9 15.719873,7.96860761 15.719873,9.65625 C15.719873,10.6709643 15.2884676,11.3128276 14.2962576,12.0165438 L13.7962596,12.3573922 C13.1714716,12.7953495 12.9391113,13.1198405 12.9391113,13.5887451 L12.9391113,13.7132568 C12.9391113,14.2033083 12.5618823,14.5499512 11.9986572,14.5499512 C11.4068652,14.5499512 11.0789551,14.2281702 11.0789551,13.630249 L11.0789551,13.4953613 C11.0789551,12.5573197 11.487326,11.9745882 12.4189711,11.3276124 L12.7619755,11.0871498 C13.5110635,10.5470305 13.7248291,10.2540011 13.7248291,9.73925781 C13.7248291,8.99900037 13.149745,8.51113281 12.2580566,8.51113281 C11.6278214,8.51113281 11.1498312,8.8062186 10.7980484,9.38963394 L10.5277106,9.73161327 L10.5277106,9.73161327 L10.4428973,9.8298462 C10.2452762,10.0412654 10.0433297,10.1297852 9.70556641,10.1297852 C9.27040611,10.1297852 8.9,9.79174463 8.9,9.31384277 C8.9,9.13743147 8.92867764,8.96536563 8.98734042,8.76592778 C9.31829759,7.6784971 10.623966,6.9 12.3306885,6.9 Z' />,\r\n    'Help'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M13.4542714,1 C14.5034049,1 15.447759,1.80035641 15.6254934,2.83409123 L15.8863908,4.35151652 C16.4016786,4.58533298 16.8892685,4.86975342 17.3418997,5.20083722 L18.729489,4.68523838 C19.7215225,4.31661974 20.8874905,4.74674629 21.4093705,5.66596818 L22.3631385,7.34590292 C22.8807104,8.25753682 22.6641696,9.47960173 21.8668015,10.158283 L20.7203437,11.1340925 C20.7523279,11.4263818 20.768775,11.713662 20.768775,12 C20.768775,12.2863013 20.7523321,12.5735444 20.7203561,12.8657949 L21.8666717,13.8411466 C22.6665193,14.5217032 22.8803536,15.7423983 22.3631806,16.6535107 L21.4094127,18.3337799 C20.8871999,19.2537711 19.7186485,19.6823124 18.729489,19.3147616 L17.3418997,18.7991628 C16.8892685,19.1302466 16.4016786,19.414667 15.8863908,19.6484835 L15.6254934,21.1659088 C15.4482371,22.1968626 14.500959,23 13.4542714,23 L11.5464067,23 C10.4973482,23 9.55294448,22.1997516 9.37499917,21.1661206 L9.11371177,19.6483803 C8.59870239,19.4145642 8.11116816,19.1301583 7.65836517,18.7991106 L6.27103566,19.3147347 C5.27906015,19.683419 4.11313098,19.25315 3.59116388,18.3339086 L2.63706709,16.6536394 C2.11936149,15.741903 2.33579039,14.5197379 3.13332831,13.8411466 L4.27990265,12.8655748 C4.24777315,12.5724368 4.23122501,12.2856623 4.23122501,12 C4.23122501,11.7143012 4.24777739,11.4274899 4.27991498,11.1343127 L3.1331985,10.158283 C2.33341387,9.47754488 2.11971252,8.25678535 2.6371093,7.34577419 L3.59120609,5.66583945 C4.11357343,4.74607633 5.28204594,4.31769072 6.27103566,4.68526527 L7.65836517,5.20088944 C8.02060756,4.93605128 8.40507795,4.70106385 8.80806121,4.49794854 L9.11371177,4.35161967 L9.37499917,2.83387942 C9.55246572,1.80302941 10.4997942,1 11.5464067,1 L13.4542714,1 Z M13.4542714,3 L11.5464067,3 C11.4759721,3 11.3587093,3.09940116 11.3460046,3.17319893 L10.9911423,5.23448734 C10.9307198,5.5854636 10.6881938,5.87781899 10.3544182,6.00203275 C9.66471384,6.25870451 9.03276419,6.62813555 8.48454956,7.09507573 C8.20871593,7.3300162 7.82737524,7.39737412 7.48774669,7.2711455 L5.57427032,6.55997006 C5.50662795,6.53482964 5.36908018,6.58525743 5.33030218,6.65353615 L4.37620539,8.3334709 C4.33235155,8.41068695 4.36153792,8.57741281 4.42951339,8.63527025 L5.99467372,9.96745916 C6.26327177,10.1960769 6.39156502,10.5492878 6.3322987,10.8969923 C6.26535074,11.2897637 6.23122501,11.6509097 6.23122501,12 C6.23122501,12.3490903 6.26535074,12.7102363 6.3322987,13.1030077 C6.39157523,13.4507721 6.26322722,13.80404 5.99454391,14.0326513 L4.42938358,15.3643802 C4.36263141,15.4211768 4.33280785,15.5895892 4.3762476,15.6660914 L5.33034439,17.3463606 C5.36962791,17.4155432 5.5053715,17.4656373 5.57427032,17.4400299 L7.48774669,16.7288545 C7.82737524,16.6026259 8.20871593,16.6699838 8.48454956,16.9049243 C9.03276419,17.3718644 9.66471384,17.7412955 10.3544182,17.9979673 C10.6881938,18.122181 10.9307198,18.4145364 10.9911423,18.7655127 L11.3460046,20.8268011 C11.3591616,20.9032262 11.473368,21 11.5464067,21 L13.4542714,21 C13.5246311,21 13.6417446,20.9007069 13.6544151,20.8270129 L14.0088212,18.7657245 C14.0691981,18.4145617 14.3118672,18.1220527 14.6458423,17.9978703 C15.3359969,17.7412494 15.9677081,17.3719578 16.5150513,16.9052644 C16.7908836,16.6700754 17.1723926,16.6025695 17.512181,16.7288276 L19.4261097,17.4400031 C19.4938321,17.4651673 19.631347,17.4147366 19.6700861,17.3464893 L20.623854,15.6662201 C20.6677382,15.5889085 20.6385289,15.422164 20.5706164,15.3643802 L19.0054561,14.0326513 C18.7363402,13.803672 18.6080436,13.4496677 18.6679701,13.1014383 C18.7347206,12.7135552 18.768775,12.3516302 18.768775,12 C18.768775,11.6483698 18.7347206,11.2864448 18.6679701,10.8985617 C18.6080539,10.5503923 18.7362957,10.196445 19.0053263,9.96745916 L20.5704866,8.63527025 C20.6374086,8.57830946 20.6672761,8.40975011 20.6238962,8.33334216 L19.6701283,6.65340742 C19.6309511,6.58440211 19.4952014,6.53432393 19.4261097,6.55999695 L17.512181,7.27117239 C17.1723926,7.39743055 16.7908836,7.32992456 16.5150513,7.09473562 C15.9677081,6.62804223 15.3359969,6.25875055 14.6458423,6.00212967 C14.3118672,5.87794735 14.0691981,5.58543825 14.0088212,5.23427554 L13.6544151,3.17298713 C13.6412929,3.0966658 13.5272352,3 13.4542714,3 Z M12.5,10 C13.6045695,10 14.5,10.8954305 14.5,12 C14.5,13.1045695 13.6045695,14 12.5,14 C11.3954305,14 10.5,13.1045695 10.5,12 C10.5,10.8954305 11.3954305,10 12.5,10 Z' />,\r\n    'Settings'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nclass CacheManager {\r\n    async load(key) {\r\n        const value = localStorage.getItem(key);\r\n        if (!value) return null;\r\n\r\n        try {\r\n            return JSON.parse(value);\r\n        } catch {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    async save(key, value) {\r\n        localStorage.setItem(key, JSON.stringify(value));\r\n    }\r\n\r\n    async remove(key) {\r\n        localStorage.removeItem(key);\r\n    }\r\n\r\n    async clear() {\r\n        localStorage.clear();\r\n    }\r\n}\r\n\r\nconst manager = new CacheManager();\r\nexport default manager;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport EventEmitter from './EventEmitter';\r\nimport { debounce } from '../Utils/Common';\r\nimport CacheManager from '../Workers/CacheManager';\r\nimport BasicGroupStore from './BasicGroupStore';\r\nimport ChatStore from './ChatStore';\r\nimport FileStore from './FileStore';\r\nimport MessageStore from './MessageStore';\r\nimport OptionStore from './OptionStore';\r\nimport SupergroupStore from './SupergroupStore';\r\nimport UserStore from './UserStore';\r\nimport TdLibController from '../Controllers/TdLibController';\r\n\r\nclass CacheStore extends EventEmitter {\r\n    constructor() {\r\n        super();\r\n\r\n        this.cacheContacts = false;\r\n\r\n        this.reset();\r\n\r\n        this.addTdLibListener();\r\n\r\n        this.saveInternal = debounce(this.saveInternal, 2000);\r\n    }\r\n\r\n    reset = () => {\r\n        this.filters = null;\r\n        this.chatIds = [];\r\n        this.archiveChatIds = [];\r\n        this.meChat = null;\r\n        if (this.cacheContacts) {\r\n            this.contacts = null;\r\n        }\r\n\r\n        this.cache = null;\r\n    };\r\n\r\n    onUpdate = update => {\r\n        switch (update['@type']) {\r\n            case 'updateAuthorizationState': {\r\n                const { authorization_state } = update;\r\n                if (!authorization_state) break;\r\n\r\n                switch (authorization_state['@type']) {\r\n                    case 'authorizationStateClosed': {\r\n                        this.reset();\r\n                        break;\r\n                    }\r\n                    case 'authorizationStateLoggingOut':\r\n                    case 'authorizationStateWaitCode':\r\n                    case 'authorizationStateWaitPhoneNumber':\r\n                    case 'authorizationStateWaitPassword':\r\n                    case 'authorizationStateWaitRegistration': {\r\n                        CacheManager.remove('cache');\r\n                        CacheManager.remove('files');\r\n                        if (this.cacheContacts) {\r\n                            CacheManager.remove('contacts');\r\n                        }\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                break;\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    onClientUpdate = update => {\r\n        switch (update['@type']) {\r\n            case 'clientUpdateDialogsReady': {\r\n                this.clear();\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    addTdLibListener = () => {\r\n        TdLibController.on('update', this.onUpdate);\r\n        TdLibController.on('clientUpdate', this.onClientUpdate);\r\n    };\r\n\r\n    removeTdLibListener = () => {\r\n        TdLibController.off('update', this.onUpdate);\r\n        TdLibController.off('clientUpdate', this.onClientUpdate);\r\n    };\r\n\r\n    async load() {\r\n        // console.log('[cm] getChats start');\r\n        const promises = [];\r\n        promises.push(CacheManager.load('cache').catch(error => null));\r\n        promises.push(CacheManager.load('files').catch(error => null));\r\n        promises.push(CacheManager.load('filters').catch(error => null));\r\n        if (this.cacheContacts) {\r\n            promises.push(CacheManager.load('contacts').catch(error => null));\r\n        }\r\n        const [cache, files, filters, contacts] = await Promise.all(promises);\r\n        this.cache = cache;\r\n        if (this.cache) {\r\n            this.cache.files = files || [];\r\n        }\r\n\r\n        if (this.cacheContacts) {\r\n            if (contacts) {\r\n                (contacts || []).forEach(x => {\r\n                    UserStore.set(x);\r\n                })\r\n\r\n                this.contacts = {\r\n                    '@type': 'users',\r\n                    user_ids: contacts.map(x => x.id),\r\n                    total_count: contacts.length\r\n                };\r\n            }\r\n        }\r\n\r\n        this.filters = filters;\r\n\r\n        if (this.cache) {\r\n            this.parseCache(this.cache);\r\n        }\r\n\r\n        // console.log('[cm] load', this.filters, filters);\r\n        return this.cache;\r\n    }\r\n\r\n    parseCache(cache) {\r\n        if (!cache) return;\r\n\r\n        const { meChat, chats, archiveChats, users, basicGroups, supergroups, files, options } = cache;\r\n        // console.log('[cache] parseCache', cache);\r\n\r\n        (files || []).filter(x => Boolean(x)).forEach(({ id, url }) => {\r\n            FileStore.setDataUrl(id, url);\r\n        });\r\n\r\n        (users || []).forEach(x => {\r\n            UserStore.set(x);\r\n        });\r\n\r\n        (basicGroups || []).forEach(x => {\r\n            BasicGroupStore.set(x);\r\n        });\r\n\r\n        (supergroups || []).forEach(x => {\r\n            SupergroupStore.set(x);\r\n        });\r\n\r\n        (chats || []).concat(archiveChats || []).concat([meChat]).forEach(x => {\r\n            if (x) {\r\n                delete x.OutputTypingManager;\r\n\r\n                ChatStore.set(x);\r\n                if (x.photo) {\r\n                    if (x.photo.small) FileStore.set(x.photo.small);\r\n                    if (x.photo.big) FileStore.set(x.photo.big);\r\n                }\r\n                if (x.position) {\r\n                    ChatStore.updateChatChatLists(x.id);\r\n                }\r\n                if (x.last_message) {\r\n                    MessageStore.set(x.last_message);\r\n                }\r\n            }\r\n        });\r\n\r\n        (options || []).forEach(([id, option]) => {\r\n            OptionStore.set(id, option);\r\n        });\r\n    }\r\n\r\n    async getCache(chatIds, archiveChatIds) {\r\n        const fileMap = new Map();\r\n        const userMap = new Map();\r\n        const basicGroupMap = new Map();\r\n        const supergroupMap = new Map();\r\n        const meChat = this.meChat;\r\n        const chats = chatIds.map(x => ChatStore.get(x));\r\n        const archiveChats = archiveChatIds.map(x => ChatStore.get(x));\r\n\r\n\r\n        chats.concat(archiveChats).concat([meChat]).forEach(x => {\r\n            const { photo, type, last_message } = x;\r\n            if (photo && photo.small) {\r\n                const { id } = photo.small;\r\n                if (id) {\r\n                    const blob = FileStore.getBlob(id);\r\n                    if (blob) {\r\n                        fileMap.set(id, blob);\r\n                    }\r\n                }\r\n            }\r\n\r\n            switch (type['@type']) {\r\n                case 'chatTypeBasicGroup': {\r\n                    const basicGroup = BasicGroupStore.get(type.basic_group_id);\r\n                    if (basicGroup) {\r\n                        basicGroupMap.set(basicGroup.id, basicGroup);\r\n                    }\r\n                }\r\n                case 'chatTypePrivate':\r\n                case 'chatTypeSecret': {\r\n                    const user = UserStore.get(type.user_id);\r\n                    if (user) {\r\n                        userMap.set(user.id, user);\r\n                    }\r\n                }\r\n                case 'chatTypeSupergroup': {\r\n                    const supergroup = SupergroupStore.get(type.supergroup_id);\r\n                    if (supergroup) {\r\n                        supergroupMap.set(supergroup.id, supergroup);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (last_message) {\r\n                const { sender_user_id } = last_message;\r\n                if (sender_user_id) {\r\n                    const user = UserStore.get(sender_user_id);\r\n                    if (user) {\r\n                        userMap.set(user.id, user);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        return {\r\n            meChat,\r\n            chats,\r\n            archiveChats,\r\n            users: [...userMap.values()],\r\n            basicGroups: [...basicGroupMap.values()],\r\n            supergroups: [...supergroupMap.values()],\r\n            files: [...fileMap.entries()],\r\n            options: [...OptionStore.items.entries()]\r\n        };\r\n    }\r\n\r\n    async save(filters, chatIds, archiveChatIds) {\r\n        this.chatIds = chatIds;\r\n        this.archiveChatIds = archiveChatIds;\r\n        this.meChat = this.meChat || await TdLibController.send({\r\n            '@type': 'createPrivateChat',\r\n            user_id: UserStore.getMyId(),\r\n            force: false\r\n        });\r\n        if (this.cacheContacts) {\r\n            this.contacts = this.contacts || await TdLibController.send({\r\n                '@type': 'getContacts'\r\n            });\r\n        }\r\n        this.filters = filters;\r\n\r\n        this.saveInternal();\r\n    }\r\n\r\n    async saveInternal() {\r\n        // console.log('[cm] saveInternal', this.filters, this.chatIds, this.archiveChatIds);\r\n        const cache = await this.getCache(this.chatIds, this.archiveChatIds);\r\n        const files = cache.files;\r\n        cache.files = [];\r\n        // console.log('[cm] save cache', cache);\r\n        await CacheManager.save('cache', cache);\r\n\r\n        const promises = [];\r\n        files.forEach(x => {\r\n            const [id, blob] = x;\r\n            promises.push(\r\n                new Promise((resolve, reject) => {\r\n                    const fileReader = new FileReader();\r\n                    fileReader.readAsDataURL(blob);\r\n                    fileReader.onload = e => {\r\n                        resolve({ id, url: e.target.result });\r\n                    };\r\n                    fileReader.onerror = e => {\r\n                        resolve(null);\r\n                    };\r\n                })\r\n            );\r\n        });\r\n        // console.log('[cm] save files start', files);\r\n        const results = await Promise.all(promises);\r\n        // console.log('[cm] save files', results);\r\n        await CacheManager.save('files', results);\r\n\r\n        if (this.cacheContacts) {\r\n            const contacts = this.contacts.user_ids.map(x => UserStore.get(x));\r\n            await CacheManager.save('contacts', contacts);\r\n        }\r\n\r\n        if (this.filters) {\r\n            await CacheManager.save('filters', this.filters);\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        if (this.cache) {\r\n            const { files } = this.cache;\r\n\r\n            files.filter(x => Boolean(x)).forEach(({ id, url }) => {\r\n                FileStore.deleteDataUrl(id);\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nconst store = new CacheStore();\r\nwindow.cache = store;\r\nexport default store;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\r\nimport ArrowBackIcon from '../../Assets/Icons/Back';\r\nimport ChannelIcon from '../../Assets/Icons/Channel';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport ArchiveIcon from '../../Assets/Icons/Archive';\r\nimport SearchIcon from '../../Assets/Icons/Search';\r\nimport MenuIcon from '../../Assets/Icons/Menu';\r\nimport GroupIcon from '../../Assets/Icons/Group';\r\nimport HelpIcon from '../../Assets/Icons/Help';\r\nimport SavedIcon from '../../Assets/Icons/Saved';\r\nimport SettingsIcon from '../../Assets/Icons/Settings';\r\nimport UserIcon from '../../Assets/Icons/User';\r\nimport { isAuthorizationReady } from '../../Utils/Common';\r\nimport { openArchive, openChat, searchChat } from '../../Actions/Client';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport CacheStore from '../../Stores/CacheStore';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './MainMenuButton.css';\r\n\r\nclass MainMenuButton extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            authorizationState: AppStore.getAuthorizationState(),\r\n            anchorEl: null,\r\n            isSmallWidth: AppStore.isSmallWidth\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\r\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\r\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\r\n    }\r\n\r\n    onClientUpdatePageWidth = update => {\r\n        const { isSmallWidth } = update;\r\n\r\n        this.setState({ isSmallWidth });\r\n    };\r\n\r\n    onUpdateAuthorizationState = update => {\r\n        this.setState({ authorizationState: update.authorization_state });\r\n    };\r\n\r\n    handleMenuOpen = event => {\r\n        const { authorizationState } = this.state;\r\n        if (!isAuthorizationReady(authorizationState)) return;\r\n\r\n        this.setState({ anchorEl: event.currentTarget });\r\n    };\r\n\r\n    handleMenuClose = () => {\r\n        this.setState({ anchorEl: null });\r\n    };\r\n\r\n    handleCheckUpdates = async () => {\r\n        this.handleMenuClose();\r\n\r\n        //await update();\r\n    };\r\n\r\n    handleNewChannel = event => {\r\n        this.handleMenuClose();\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateNewChannel',\r\n            open: true\r\n        });\r\n    };\r\n\r\n    handleNewGroup = event => {\r\n        this.handleMenuClose();\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateNewGroup',\r\n            open: true\r\n        });\r\n    };\r\n\r\n    handleContacts = event => {\r\n        this.handleMenuClose();\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateContacts',\r\n            open: true\r\n        });\r\n    };\r\n\r\n    handleArchived = event => {\r\n        this.handleMenuClose();\r\n\r\n        openArchive();\r\n    };\r\n\r\n    handleSaved = async event => {\r\n        this.handleMenuClose();\r\n\r\n        let chat = CacheStore.cache ? CacheStore.cache.meChat : null;\r\n        if (!chat) {\r\n            chat = await TdLibController.send({\r\n                '@type': 'createPrivateChat',\r\n                user_id: UserStore.getMyId(),\r\n                force: false\r\n            });\r\n        }\r\n\r\n        if (!chat) return;\r\n\r\n        openChat(chat.id);\r\n    };\r\n\r\n    handleSettings = async event => {\r\n        this.handleMenuClose();\r\n\r\n        let chat = CacheStore.cache ? CacheStore.cache.meChat : null;\r\n        if (!chat) {\r\n            chat = await TdLibController.send({\r\n                '@type': 'createPrivateChat',\r\n                user_id: UserStore.getMyId(),\r\n                force: false\r\n            });\r\n        }\r\n\r\n        if (!chat) return;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateSettings',\r\n            open: true,\r\n            chatId: chat.id\r\n        });\r\n    };\r\n\r\n    handleHelp = async event => {\r\n        this.handleMenuClose();\r\n        // unregister();\r\n    };\r\n\r\n    handleSearch = () => {\r\n        this.handleMenuClose();\r\n\r\n        searchChat(0);\r\n    };\r\n\r\n    render() {\r\n        const { t, timeout, popup, showClose, onClose } = this.props;\r\n        const { anchorEl, authorizationState, isSmallWidth } = this.state;\r\n\r\n        const mainMenuControl =\r\n            !showClose && isAuthorizationReady(authorizationState) ? (\r\n                <Menu\r\n                    id='main-menu'\r\n                    anchorEl={anchorEl}\r\n                    open={Boolean(anchorEl)}\r\n                    onClose={this.handleMenuClose}\r\n                    getContentAnchorEl={null}\r\n                    disableAutoFocusItem\r\n                    disableRestoreFocus={true}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'left'\r\n                    }}>\r\n                    <MenuItem onClick={this.handleNewChannel}>\r\n                        <ListItemIcon>\r\n                            <ChannelIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('NewChannel')} />\r\n                    </MenuItem>\r\n                    <MenuItem onClick={this.handleNewGroup}>\r\n                        <ListItemIcon>\r\n                            <GroupIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('NewGroup')} />\r\n                    </MenuItem>\r\n                    { isSmallWidth && (\r\n                        <MenuItem onClick={this.handleSearch}>\r\n                            <ListItemIcon>\r\n                                <SearchIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('Search')} />\r\n                        </MenuItem>\r\n                    )}\r\n                    <MenuItem onClick={this.handleContacts}>\r\n                        <ListItemIcon>\r\n                            <UserIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('Contacts')} />\r\n                    </MenuItem>\r\n                    <MenuItem onClick={this.handleArchived}>\r\n                        <ListItemIcon>\r\n                            <ArchiveIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('Archived')} />\r\n                    </MenuItem>\r\n                    <MenuItem onClick={this.handleSaved}>\r\n                        <ListItemIcon>\r\n                            <SavedIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('Saved')} />\r\n                    </MenuItem>\r\n                    <MenuItem onClick={this.handleSettings}>\r\n                        <ListItemIcon>\r\n                            <SettingsIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('Settings')} />\r\n                    </MenuItem>\r\n                    <MenuItem onClick={this.handleHelp}>\r\n                        <ListItemIcon>\r\n                            <HelpIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('SettingsHelp')} />\r\n                    </MenuItem>\r\n                </Menu>\r\n            ) : null;\r\n\r\n        const closeIcon = popup\r\n            ? <CloseIcon/>\r\n            : <ArrowBackIcon/>;\r\n\r\n        return (\r\n            <>\r\n                <IconButton\r\n                    aria-owns={anchorEl ? 'simple-menu' : null}\r\n                    aria-haspopup='true'\r\n                    className='header-left-button main-menu-button'\r\n                    aria-label='Menu'\r\n                    onClick={showClose ? onClose : this.handleMenuOpen}>\r\n                    { timeout\r\n                        ? (<SpeedDialIcon open={showClose} openIcon={<ArrowBackIcon />} icon={<MenuIcon />} />)\r\n                        : (<>{showClose ? closeIcon : <MenuIcon />}</>)\r\n                    }\r\n\r\n                </IconButton>\r\n                {mainMenuControl}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTranslation()(MainMenuButton);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport SearchIcon from '../../../Assets/Icons/Search';\r\nimport './SearchInput.css';\r\n\r\nclass SearchInput extends React.Component {\r\n    handleKeyDown = event => {\r\n        if (event.keyCode === 13) {\r\n            event.preventDefault();\r\n        } else if (event.keyCode === 27) {\r\n            const { onChange, onClose } = this.props;\r\n\r\n            const element = event.target;\r\n            if (!element) return;\r\n\r\n            if (element.innerText) {\r\n                event.stopPropagation();\r\n                event.nativeEvent.stopImmediatePropagation();\r\n\r\n                element.innerText = null;\r\n                if (onChange) onChange(element.innerText);\r\n                return;\r\n            }\r\n\r\n            if (onClose) {\r\n                onClose(event);\r\n            }\r\n        } else if (event.keyCode === 8) {\r\n            const { onBackspace } = this.props;\r\n\r\n            const element = event.target;\r\n            if (!element) return;\r\n            if (element.innerText) return;\r\n\r\n            if (onBackspace) {\r\n                event.stopPropagation();\r\n                onBackspace();\r\n            }\r\n        }\r\n    };\r\n\r\n    handleKeyUp = event => {\r\n        const element = event.target;\r\n        if (!element) return;\r\n\r\n        const { innerHTML } = element;\r\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\r\n            element.innerHTML = null;\r\n        }\r\n    };\r\n\r\n    handlePaste = event => {\r\n        const plainText = event.clipboardData.getData('text/plain');\r\n        if (plainText) {\r\n            event.preventDefault();\r\n            document.execCommand('insertText', false, plainText);\r\n        }\r\n    };\r\n\r\n    handleInput = event => {\r\n        const { onChange } = this.props;\r\n\r\n        const element = event.target;\r\n        if (!element) return;\r\n\r\n        if (onChange) {\r\n            onChange(element.innerText);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { inputRef, t, onFocus, hint, showIcon } = this.props;\r\n\r\n        return (\r\n            <div className='search-input'>\r\n                <div\r\n                    id='search-inputbox'\r\n                    ref={inputRef}\r\n                    placeholder={hint || t('Search')}\r\n                    contentEditable\r\n                    suppressContentEditableWarning\r\n                    onKeyDown={this.handleKeyDown}\r\n                    onKeyUp={this.handleKeyUp}\r\n                    onPaste={this.handlePaste}\r\n                    onInput={this.handleInput}\r\n                    onFocus={onFocus}\r\n                />\r\n                {showIcon && <SearchIcon className='search-input-icon' />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSearchInput.propTypes = {\r\n    inputRef: PropTypes.object,\r\n    hint: PropTypes.string,\r\n    showIcon: PropTypes.bool,\r\n    onBackspace: PropTypes.func,\r\n    onChange: PropTypes.func,\r\n    onFocus: PropTypes.func,\r\n    onClose: PropTypes.func\r\n};\r\n\r\nSearchInput.defaultProps = {\r\n    showIcon: true\r\n}\r\n\r\nexport default withTranslation()(SearchInput);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport MainMenuButton from './MainMenuButton';\r\nimport SearchInput from './Search/SearchInput';\r\nimport { isAuthorizationReady } from '../../Utils/Common';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport '../ColumnMiddle/Header.css';\r\n\r\nclass DialogsHeader extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.searchInputRef = React.createRef();\r\n\r\n        this.state = {\r\n            authorizationState: AppStore.getAuthorizationState(),\r\n            open: false\r\n        };\r\n    }\r\n\r\n    setInitQuery(query) {\r\n        const { onSearchTextChange } = this.props;\r\n\r\n        const searchInput = this.searchInputRef.current;\r\n        if (searchInput) {\r\n            searchInput.innerText = query;\r\n            if (searchInput.childNodes.length > 0) {\r\n                const range = document.createRange();\r\n                range.setStart(searchInput.childNodes[0], searchInput.childNodes[0].length);\r\n                range.collapse(true);\r\n\r\n                const selection = window.getSelection();\r\n                selection.removeAllRanges();\r\n                selection.addRange(range);\r\n            }\r\n            searchInput.focus();\r\n            onSearchTextChange(query);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { openSearch } = this.props;\r\n\r\n        if (openSearch !== prevProps.openSearch) {\r\n            if (openSearch) {\r\n                this.focusInput();\r\n            } else {\r\n                const searchInput = this.searchInputRef.current;\r\n                if (searchInput) {\r\n                    searchInput.innerText = null;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    focusInput() {\r\n        const searchInput = this.searchInputRef.current;\r\n        if (searchInput) {\r\n            searchInput.focus();\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.popup) {\r\n            this.focusInput();\r\n        }\r\n\r\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\r\n    }\r\n\r\n    onUpdateAuthorizationState = update => {\r\n        this.setState({ authorizationState: update.authorization_state });\r\n    };\r\n\r\n    handleSearch = () => {\r\n        const { onSearch, openSearch } = this.props;\r\n        const { authorizationState } = this.state;\r\n        if (!isAuthorizationReady(authorizationState)) return;\r\n\r\n        onSearch(!openSearch);\r\n    };\r\n\r\n    handleSearchTextChange = () => {\r\n        const { onSearchTextChange } = this.props;\r\n\r\n        const element = this.searchInputRef.current;\r\n        if (!element) return;\r\n\r\n        const { innerHTML } = element;\r\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\r\n            element.innerHTML = null;\r\n        }\r\n        const { innerText } = element;\r\n\r\n        onSearchTextChange(innerText);\r\n    };\r\n\r\n    handleCloseSearch = () => {\r\n        this.handleSearch();\r\n    };\r\n\r\n    handleFocus = () => {\r\n        this.handleSearch();\r\n    };\r\n\r\n    render() {\r\n        const { openSearch, timeout, popup } = this.props;\r\n\r\n        let content = null;\r\n        let showBack = false;\r\n        if (openSearch) {\r\n            showBack = true;\r\n            content = (\r\n                <SearchInput\r\n                    inputRef={this.searchInputRef}\r\n                    onChange={this.handleSearchTextChange}\r\n                    onClose={this.handleCloseSearch}\r\n                />\r\n            );\r\n        } else {\r\n            content = <SearchInput inputRef={this.searchInputRef} onFocus={this.handleFocus} />;\r\n        }\r\n\r\n        return (\r\n            <div className='header-master'>\r\n                <MainMenuButton timeout={timeout} showClose={showBack} popup={popup} onClose={this.handleCloseSearch} />\r\n                {content}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nDialogsHeader.propTypes = {\r\n    openSearch: PropTypes.bool.isRequired,\r\n    onClick: PropTypes.func,\r\n    onSearch: PropTypes.func.isRequired,\r\n    onSearchTextChange: PropTypes.func.isRequired,\r\n    timeout: PropTypes.bool,\r\n    popup: PropTypes.bool\r\n};\r\n\r\nexport default DialogsHeader;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport classNames from 'classnames';\r\nimport Animator from '../../Utils/Animatior';\r\nimport { clamp, getFirstLetter, throttle } from '../../Utils/Common';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport CacheStore from '../../Stores/CacheStore';\r\nimport FilterStore from '../../Stores/FilterStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './Filters.css';\r\nimport LocalizationStore from '../../Stores/LocalizationStore';\r\n\r\nclass Filters extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.filterRef = new Map();\r\n        this.filtersRef = React.createRef();\r\n        this.filterSelectionRef = React.createRef();\r\n\r\n        const { isSmallWidth } = AppStore;\r\n        const { filters, chatList } = FilterStore;\r\n\r\n        this.state = {\r\n            isSmallWidth,\r\n            filters,\r\n            chatList\r\n        };\r\n\r\n        this.onWindowResize = throttle(this.onWindowResize, 250);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.observeResize();\r\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\r\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\r\n        FilterStore.on('clientUpdateChatList', this.onClientUpdateChatList);\r\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\r\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguageChange);\r\n\r\n        this.setSelection();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        this.unobserveResize();\r\n        this.observeResize();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.unobserveResize();\r\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\r\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\r\n        FilterStore.off('clientUpdateChatList', this.onClientUpdateChatList);\r\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\r\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguageChange);\r\n    }\r\n\r\n    hasObserver = () => {\r\n        return 'ResizeObserver' in window;\r\n    };\r\n\r\n    observeResize() {\r\n        if (!this.hasObserver()) return;\r\n        const filters = this.filtersRef.current;\r\n        if (!filters) return;\r\n\r\n        const observer = new ResizeObserver(this.onWindowResize);\r\n        observer.observe(filters);\r\n\r\n        this.resizeObserver = { observer, filters }\r\n    }\r\n\r\n    unobserveResize() {\r\n        if (!this.hasObserver()) return;\r\n        if (!this.resizeObserver) return;\r\n\r\n        const { observer, filters } = this.resizeObserver;\r\n        if (!observer) return;\r\n        if (!filters) return;\r\n\r\n        observer.unobserve(filters);\r\n    }\r\n\r\n    onClientUpdateLanguageChange = update => {\r\n        if (!this.hasObserver()) this.setSelection(false);\r\n    };\r\n\r\n    onClientUpdateCacheLoaded = update => {\r\n        const { filters } = this.state;\r\n        if (filters) return;\r\n\r\n        const { filters: cachedFilters } = CacheStore;\r\n        if (!cachedFilters) return;\r\n\r\n        this.setState({\r\n            filters: cachedFilters\r\n        }, () => {\r\n            if (!this.hasObserver()) this.setSelection(false);\r\n        });\r\n    };\r\n\r\n    onWindowResize = () => {\r\n        this.setSelection(true);\r\n    };\r\n\r\n    onClientUpdatePageWidth = update => {\r\n        const { isSmallWidth } = AppStore;\r\n        this.setState({\r\n            isSmallWidth\r\n        }, () => {\r\n            if (!this.hasObserver()) this.setSelection(false);\r\n        });\r\n    };\r\n\r\n    setSelection = (transition = true) => {\r\n        const { chatList, filters, isSmallWidth } = this.state;\r\n\r\n        const scroll = this.filtersRef.current;\r\n\r\n        let item = null;\r\n        let left = 9;\r\n        if (chatList['@type'] === 'chatListMain') {\r\n            const main = this.filterRef.get('chatListMain');\r\n            if (main){\r\n                item = main;\r\n                left += isSmallWidth ? 0 : 7;\r\n            }\r\n        } else if (chatList['@type'] === 'chatListFilter') {\r\n            const main = this.filterRef.get('chatListMain');\r\n            if (main){\r\n                left += main.scrollWidth;\r\n            }\r\n            for (let i = 0; i < filters.length; i++) {\r\n                const filter = this.filterRef.get('chatListFilter_id=' + filters[i].id);\r\n                if (filters[i].id === chatList.chat_filter_id) {\r\n                    item = filter;\r\n                    left += isSmallWidth ? 0 : 7;\r\n                    break;\r\n                } else {\r\n                    left += filter.scrollWidth;\r\n                }\r\n            }\r\n        }\r\n        if (!item) return;\r\n\r\n        const filterSelection = this.filterSelectionRef.current;\r\n        if (filterSelection) {\r\n            const transitionStyle = transition ? 'transition: left 0.25s ease, width 0.25s ease' : null;\r\n            filterSelection.style.cssText = `left: ${left}px; width: ${item.scrollWidth - 14}px; ${transitionStyle}`;\r\n        }\r\n\r\n        if (item && transition){\r\n            const { animator } = this;\r\n\r\n            if (animator) {\r\n                animator.stop();\r\n            }\r\n\r\n            this.animator = new Animator(250, [\r\n                {\r\n                    from: scroll.scrollLeft,\r\n                    to: clamp(left - scroll.offsetWidth / 2 + item.offsetWidth / 2, 0, scroll.scrollWidth - scroll.offsetWidth),\r\n                    func: left => (scroll.scrollLeft = left)\r\n                }\r\n            ]);\r\n\r\n            setTimeout(() => {\r\n                if (!this.animator) return;\r\n\r\n                this.animator.start();\r\n            }, 0);\r\n\r\n\r\n            // item.scrollIntoView();\r\n        }\r\n    };\r\n\r\n    onUpdateChatFilters = update => {\r\n        const { chatList } = this.state;\r\n        const { filters } = FilterStore;\r\n\r\n        this.setState({\r\n            filters\r\n        }, () => {\r\n            if (chatList['@type'] === 'chatListFilter' && filters.findIndex(x => x.id === chatList.chat_filter_id) === -1) {\r\n                this.handleMainClick();\r\n            } else {\r\n                if (!this.hasObserver()) this.setSelection();\r\n            }\r\n        });\r\n    };\r\n\r\n    onClientUpdateChatList = update => {\r\n        const { chatList } = FilterStore;\r\n\r\n        this.setState({\r\n            chatList\r\n        }, () => {\r\n            if (!this.hasObserver()) this.setSelection();\r\n        });\r\n    };\r\n\r\n    handleMainClick = event => {\r\n        if (event && event.button !== 0) return;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateChatList',\r\n            chatList: {\r\n                '@type': 'chatListMain'\r\n            }\r\n        });\r\n    };\r\n\r\n    handleFilterClick = (event, id) => {\r\n        if (event && event.button !== 0) return;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateChatList',\r\n            chatList: {\r\n                '@type': 'chatListFilter',\r\n                chat_filter_id: id\r\n            }\r\n        });\r\n    };\r\n\r\n    handleWheel = event => {\r\n        if (!event.deltaY) {\r\n            return;\r\n        }\r\n\r\n        event.currentTarget.scrollLeft += event.deltaY;\r\n        event.stopPropagation();\r\n    };\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        const { filters, chatList, isSmallWidth } = this.state;\r\n\r\n        if (!filters) return null;\r\n        if (!filters.length) return null;\r\n\r\n        this.filterRef = new Map();\r\n        return (\r\n            <div ref={this.filtersRef} className='filters' onWheel={this.handleWheel}>\r\n                <div\r\n                    ref={r => this.filterRef.set('chatListMain', r)}\r\n                    className={classNames('filter', { 'item-selected': chatList['@type'] === 'chatListMain'})}\r\n                    onMouseDown={this.handleMainClick}\r\n                    title={isSmallWidth ? t('FilterAllChats') : null}>\r\n                    {isSmallWidth ? getFirstLetter(t('FilterAllChats')) : t('FilterAllChats')}\r\n                </div>\r\n                {filters.map(x => (\r\n                    <div\r\n                        key={x.id}\r\n                        ref={r => this.filterRef.set('chatListFilter_id=' + x.id, r)}\r\n                        className={classNames('filter', { 'item-selected': chatList.chat_filter_id === x.id})}\r\n                        onMouseDown={e => this.handleFilterClick(e, x.id)}\r\n                        title={isSmallWidth ? x.title : null}>\r\n                        {isSmallWidth ? getFirstLetter(x.title) : x.title}\r\n                    </div>))}\r\n                <div ref={this.filterSelectionRef} className='filter-selection'/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nFilters.propTypes = {\r\n\r\n};\r\n\r\nexport default withTranslation()(Filters);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Dialog from '../Tile/Dialog';\r\nimport DialogPlaceholder from '../Tile/DialogPlaceholder';\r\nimport VirtualizedList from '../Additional/VirtualizedList';\r\nimport { changeChatDetailsVisibility } from '../../Actions/Chat';\r\nimport { loadChatsContent } from '../../Utils/File';\r\nimport { isAuthorizationReady, orderCompare } from '../../Utils/Common';\r\nimport { scrollTop } from '../../Utils/DOM';\r\nimport { chatListEquals, getChatOrder, hasChatList, isChatMember, isChatPinned, positionListEquals } from '../../Utils/Chat';\r\nimport { CHAT_SLICE_LIMIT, SCROLL_CHATS_PRECISION } from '../../Constants';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport SupergroupStore from '../../Stores/SupergroupStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './DialogsList.css';\r\nimport FilterStore from '../../Stores/FilterStore';\r\nimport DialogsHeader from './DialogsHeader';\r\nimport Filters from './Filters';\r\n\r\nclass DialogListItem extends React.Component {\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { chatId, chatList, style, hidden } = this.props;\r\n        if (nextProps.chatId !== chatId) {\r\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.chatList !== chatList) {\r\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.hidden !== hidden) {\r\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.style.top !== style.top) {\r\n            // console.log('[vl] UserListItem.shouldUpdate true style');\r\n            return true;\r\n        }\r\n\r\n        // console.log('[vl] UserListItem.shouldUpdate false');\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        const { chatId, chatList, hidden, style } = this.props;\r\n\r\n        return (\r\n            <div className='dialog-list-item' style={style}>\r\n                <Dialog chatId={chatId} chatList={chatList} hidden={hidden} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass DialogsList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.hiddenChats = new Map();\r\n\r\n        this.listRef = React.createRef();\r\n\r\n        const { authorizationState } = AppStore;\r\n\r\n        this.state = {\r\n            authorizationState,\r\n            offset: 0,\r\n            chats: null,\r\n            fistSliceLoaded: false,\r\n            chatList: props.type === 'chatListMain' ? { '@type': 'chatListMain' } : { '@type': 'chatListArchive' }\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { theme, open, showArchive, archiveTitle, items, cacheItems } = this.props;\r\n        const { chats, offset, chatList } = this.state;\r\n\r\n        if (nextProps.theme !== theme) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.open !== open) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.items !== items) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.cacheItems !== cacheItems) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.showArchive !== showArchive) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.archiveTitle !== archiveTitle) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.offset !== offset) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.chats !== chats) {\r\n            return true;\r\n        }\r\n\r\n        // if (nextState.chatList !== chatList) {\r\n        //     return true;\r\n        // }\r\n\r\n        return false;\r\n    }\r\n\r\n    getSnapshotBeforeUpdate(prevProps, prevState) {\r\n        const { current: list } = this.listRef;\r\n        if (!list) return { scrollTop: 0 };\r\n\r\n        return { scrollTop: list.scrollTop };\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { current: list } = this.listRef;\r\n        if (!list) return;\r\n\r\n        const { scrollTop } = snapshot;\r\n\r\n        // if (prevState.offset > this.state.offset) {\r\n        //     list.scrollTop += ( - this.state.offset + prevState.offset) * 72;\r\n        // }\r\n        // list.scrollTop = scrollTop;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadFirstSlice();\r\n\r\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\r\n\r\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\r\n        ChatStore.on('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\r\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\r\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\r\n        ChatStore.on('updateChatPosition', this.onUpdateChatPosition);\r\n\r\n        FilterStore.on('clientUpdateChatList', this.onClientUpdateChatList);\r\n\r\n        SupergroupStore.on('updateSupegroup', this.onUpdateSupergroup);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\r\n\r\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\r\n        ChatStore.off('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\r\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\r\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\r\n        ChatStore.off('updateChatPosition', this.onUpdateChatPosition);\r\n\r\n        FilterStore.off('clientUpdateChatList', this.onClientUpdateChatList);\r\n\r\n        SupergroupStore.off('updateSupegroup', this.onUpdateSupergroup);\r\n    }\r\n\r\n    onClientUpdateChatList = update => {\r\n        const { chatList } = update;\r\n\r\n        this.setState({\r\n            chatList\r\n        }, () => {\r\n            this.loadFirstSlice();\r\n        });\r\n    };\r\n\r\n    onUpdateSupergroup = update => {\r\n        // const { supegroup, prevSupergroup } = update;\r\n        //\r\n        // if (!hasLeftSupergroup(supegroup, prevSupergroup)) {\r\n        //     return;\r\n        // }\r\n\r\n\r\n    };\r\n\r\n    onClientUpdateLeaveChat = update => {\r\n        const { inProgress, chatId } = update;\r\n\r\n        if (inProgress) {\r\n            this.hiddenChats.set(chatId, chatId);\r\n        } else {\r\n            this.hiddenChats.delete(chatId);\r\n        }\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onUpdateAuthorizationState = update => {\r\n        const { authorization_state: authorizationState } = update;\r\n\r\n        this.setState({ authorizationState }, () => this.loadFirstSlice());\r\n    };\r\n\r\n    onFastUpdatingComplete = update => {\r\n        this.onLoadNext(true);\r\n        // this.setState({ chats: [] }, () => this.onLoadNext(true));\r\n    };\r\n\r\n    loadFirstSlice = async () => {\r\n        const { authorizationState } = this.state;\r\n        if (!isAuthorizationReady(authorizationState)) return;\r\n\r\n        await FileStore.initDB(() => this.onLoadNext(true));\r\n    };\r\n\r\n    saveCache = () => {\r\n        const { onSaveCache, type } = this.props;\r\n        const { chatList } = this.state;\r\n        if (type !== 'chatListMain') return;\r\n        if (chatList['@type'] !== 'chatListMain') return;\r\n\r\n        if (onSaveCache) onSaveCache();\r\n    };\r\n\r\n    onUpdateChatPosition = update => {\r\n        const { chatList } = this.state;\r\n        const { position } = update;\r\n\r\n        if (!chatListEquals(chatList, position.list)) {\r\n            return;\r\n        }\r\n\r\n        this.onUpdateChatOrder(update);\r\n    };\r\n\r\n    onUpdateChatOrder = update => {\r\n        const { chats, chatList } = this.state;\r\n        if (!chats) return;\r\n\r\n        const { loading } = this;\r\n        if (loading && !chats.length) return;\r\n\r\n        const { chat_id } = update;\r\n\r\n        const chat = ChatStore.get(chat_id);\r\n        if (!chat) {\r\n            return;\r\n        }\r\n\r\n        if (!hasChatList(chat_id, chatList)) {\r\n            return;\r\n        }\r\n\r\n        const order = getChatOrder(chat_id, chatList);\r\n        const currentIndex = chats.findIndex(x => x === chat_id);\r\n        if (currentIndex === -1 && order === '0') {\r\n            return;\r\n        }\r\n\r\n        const chatIds = [];\r\n        for (let i = 0; i < chats.length; i++) {\r\n            const chat = ChatStore.get(chats[i]);\r\n            const chatOrder = getChatOrder(chats[i], chatList);\r\n            if (chat && chatOrder !== '0') {\r\n                chatIds.push(chat.id);\r\n            }\r\n        }\r\n\r\n        const newChatIds = [];\r\n        if (order === '0') {\r\n            // unselect deleted chat\r\n            if (chat_id === AppStore.getChatId() && !chat.last_message) {\r\n                TdLibController.setChatId(0);\r\n                changeChatDetailsVisibility(false);\r\n            }\r\n        } else {\r\n            if (currentIndex === -1) {\r\n                newChatIds.push(chat_id);\r\n            }\r\n        }\r\n\r\n        this.reorderChats(chatIds, newChatIds, () => {\r\n            this.loadChatContents(newChatIds);\r\n            this.saveCache();\r\n        });\r\n    };\r\n\r\n    reorderChats(chatIds, newChatIds = [], callback) {\r\n        const { chatList } = this.state;\r\n\r\n        const orderedChatIds = chatIds.concat(newChatIds).sort((a, b) => {\r\n            return orderCompare(getChatOrder(b, chatList), getChatOrder(a, chatList));\r\n        });\r\n\r\n        if (!DialogsList.isDifferentOrder(this.state.chats, orderedChatIds)) {\r\n            if (callback) callback();\r\n            return;\r\n        }\r\n\r\n        this.setState({ chats: orderedChatIds }, callback);\r\n    }\r\n\r\n    static isDifferentOrder(oldChatIds, newChatIds) {\r\n        if (oldChatIds.length === newChatIds.length) {\r\n            for (let i = 0; i < oldChatIds.length; i++) {\r\n                if (oldChatIds[i] !== newChatIds[i]) return true;\r\n            }\r\n\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    handleScroll = () => {\r\n        // console.log('[vl] onScroll');\r\n        const list = this.listRef.current.getListRef().current;\r\n        if (!list) return;\r\n\r\n        // console.log(`[vl] onScroll [scrollTop, offsetHeight, scrollHeight] = [${list.scrollTop}, ${list.offsetHeight}, ${list.scrollHeight}]`, list.scrollTop + list.offsetHeight, (list.scrollHeight - SCROLL_CHATS_PRECISION));\r\n        if (list.scrollTop <= SCROLL_CHATS_PRECISION) {\r\n            this.onLoadPrev();\r\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - list.offsetHeight) {\r\n            // console.log(`[vl] onScroll onLoadNext`);\r\n            this.onLoadNext();\r\n        }\r\n    };\r\n\r\n    onLoadPrev() {\r\n        this.setState({\r\n            offset: Math.max(this.state.offset - CHAT_SLICE_LIMIT, 0)\r\n        });\r\n    }\r\n\r\n    async onLoadNext(replace = false) {\r\n        const { type } = this.props;\r\n        const { offset, chats, chatList } = this.state;\r\n\r\n        if (chats && offset + 2 * CHAT_SLICE_LIMIT < chats.length) {\r\n            this.setState({\r\n                offset: offset + CHAT_SLICE_LIMIT\r\n            });\r\n            return;\r\n        }\r\n\r\n        if (this.loading) {\r\n            return;\r\n        }\r\n\r\n        let offsetOrder = '9223372036854775807'; // 2^63 - 1\r\n        let offsetChatId = 0;\r\n        if (!replace && chats && chats.length > 0) {\r\n            const chat = ChatStore.get(chats[chats.length - 1]);\r\n            if (chat) {\r\n                offsetOrder = getChatOrder(chat.id, chatList);\r\n                offsetChatId = chat.id;\r\n            }\r\n        }\r\n\r\n        if (type === 'chatListMain') console.log('[p] GETCHATS start', type, offsetOrder, offsetChatId);\r\n        this.loading = true;\r\n        const result = await TdLibController.send({\r\n            '@type': 'getChats',\r\n            chat_list: chatList,\r\n            offset_chat_id: offsetChatId,\r\n            offset_order: offsetOrder,\r\n            limit: CHAT_SLICE_LIMIT\r\n        }).finally(() => {\r\n            this.loading = false;\r\n            if (replace) {\r\n                TdLibController.clientUpdate({ '@type': 'clientUpdateDialogsReady', list: chatList });\r\n            }\r\n        });\r\n        if (type === 'chatListMain') console.log('[p] GETCHATS stop', replace, type, result);\r\n\r\n        if (result.chat_ids.length > 0 && result.chat_ids[0] === offsetChatId) {\r\n            result.chat_ids.shift();\r\n        }\r\n\r\n        if (replace) {\r\n            this.replaceChats(result.chat_ids, () => {\r\n                this.loadChatContents(result.chat_ids);\r\n                this.saveCache();\r\n\r\n                if (result.chat_ids.length < CHAT_SLICE_LIMIT) {\r\n                    this.onLoadNext();\r\n                }\r\n\r\n                const list = this.listRef.current.getListRef().current;\r\n                if (!list) return;\r\n                list.scrollTop = 0;\r\n            });\r\n        } else {\r\n            // console.log('DialogsList.onLoadNext setState start', offsetChatId, offsetOrder);\r\n            this.appendChats(result.chat_ids, () => {\r\n                // console.log('DialogsList.onLoadNext setState stop', offsetChatId, offsetOrder);\r\n                this.loadChatContents(result.chat_ids);\r\n            });\r\n        }\r\n    }\r\n\r\n    loadChatContents(chatIds) {\r\n        const store = FileStore.getStore();\r\n        loadChatsContent(store, chatIds);\r\n    }\r\n\r\n    appendChats(chatIds, callback) {\r\n        if (chatIds.length === 0) {\r\n            if (callback) callback();\r\n            return;\r\n        }\r\n\r\n        const { chats } = this.state;\r\n\r\n        const newChats = (chats || []).concat(chatIds);\r\n        this.setState({ chats: newChats, offset: newChats.length - 2 * CHAT_SLICE_LIMIT }, callback);\r\n    }\r\n\r\n    replaceChats(chats, callback) {\r\n        this.setState({ chats, offset: 0 }, callback);\r\n    }\r\n\r\n    scrollToTop() {\r\n        const list = this.listRef.current.getListRef().current;\r\n\r\n        scrollTop(list);\r\n    }\r\n\r\n    renderItem = ({ index, style }, source) => {\r\n        const { chatList } = this.state;\r\n        const x = source[index];\r\n\r\n        return <DialogListItem key={x} chatId={x} chatList={chatList} hidden={this.hiddenChats.has(x)} style={style} />;\r\n\r\n        // return <Dialog key={x} chatId={x} hidden={this.hiddenChats.has(x)} style={style} />\r\n    };\r\n\r\n    render() {\r\n        const { open, cacheItems, showArchive, archiveTitle } = this.props;\r\n        const { chats, offset, chatList } = this.state;\r\n\r\n        // console.log('[dl] render', type, open, chats, cacheChats);\r\n        if (!open) return null;\r\n\r\n        this.source = [];\r\n        let dialogs = null;\r\n        if (chats) {\r\n            let lastPinnedId = 0;\r\n            chats.forEach(x => {\r\n                if (isChatPinned(x, chatList)) {\r\n                    lastPinnedId = x;\r\n                }\r\n            });\r\n            this.source = chats;\r\n            // dialogs = chats.slice(offset, offset + 2 * CHAT_SLICE_LIMIT).map(x => (\r\n            //     <Dialog key={x} chatId={x} isLastPinned={x === lastPinnedId} hidden={this.hiddenChats.has(x)} />\r\n            // ));\r\n        } else if (cacheItems) {\r\n            let lastPinnedId = 0;\r\n            cacheItems.forEach(x => {\r\n                if (isChatPinned(x, chatList)) {\r\n                    lastPinnedId = x;\r\n                }\r\n            });\r\n            this.source = cacheItems.map(x => x.id);\r\n            // dialogs = cacheItems.map(x => (\r\n            //     <Dialog\r\n            //         key={x.id}\r\n            //         chatId={x.id}\r\n            //         isLastPinned={x === lastPinnedId}\r\n            //         hidden={this.hiddenChats.has(x.id)}\r\n            //     />\r\n            // ));\r\n        } else {\r\n            if (chatList['@type'] === 'chatListMain') {\r\n                dialogs = Array.from(Array(10)).map((x, index) => <DialogPlaceholder key={index} index={index} />);\r\n            }\r\n        }\r\n\r\n        return (\r\n            <VirtualizedList\r\n                ref={this.listRef}\r\n                className='dialogs-list'\r\n                source={this.source}\r\n                rowHeight={76}\r\n                overScanCount={20}\r\n                renderItem={x => this.renderItem(x, this.source)}\r\n                onScroll={this.handleScroll}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nDialogsList.propTypes = {\r\n    type: PropTypes.oneOf(['chatListMain', 'chatListArchive']).isRequired,\r\n    showArchive: PropTypes.bool,\r\n    archiveTitle: PropTypes.string,\r\n    cacheItems: PropTypes.array,\r\n    items: PropTypes.array\r\n};\r\n\r\nexport default DialogsList;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIcon from '../../Assets/Icons/Back';\r\nimport DialogsList from './DialogsList';\r\n\r\nclass Archive extends React.Component {\r\n    render() {\r\n        const { t, innerListRef, items, cacheItems, onClose } = this.props;\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button main-menu-button' onClick={onClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{t('ArchivedChats')}</span>\r\n                    </div>\r\n                </div>\r\n                <div className='dialogs-content'>\r\n                    <DialogsList\r\n                        type='chatListArchive'\r\n                        ref={innerListRef}\r\n                        cacheItems={cacheItems}\r\n                        open={true}\r\n                        items={items}\r\n                    />\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nArchive.propTypes = {};\r\n\r\nexport default withTranslation()(Archive);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M18,6.5 C18.5522847,6.5 19,6.94771525 19,7.5 L19,18 C19,19.6568542 17.6568542,21 16,21 L8,21 C6.34314575,21 5,19.6568542 5,18 L5,7.5 C5,6.94771525 5.44771525,6.5 6,6.5 L18,6.5 Z M17,8.5 L7,8.5 L7,18 C7,18.5522847 7.44771525,19 8,19 L16,19 C16.5522847,19 17,18.5522847 17,18 L17,8.5 Z M10,2 L14,2 C14.2210137,2 14.434484,2.07316447 14.6080295,2.20608063 L14.7071068,2.29289322 L15.415,3 L19,3 C19.5128358,3 19.9355072,3.38604019 19.9932723,3.88337887 L20,4 C20,4.51283584 19.6139598,4.93550716 19.1166211,4.99327227 L19,5 L5,5 C4.44771525,5 4,4.55228475 4,4 C4,3.48716416 4.38604019,3.06449284 4.88337887,3.00672773 L5,3 L8.584,3 L9.29289322,2.29289322 C9.44917353,2.1366129 9.65185492,2.03740171 9.86855602,2.00867243 L10,2 L14,2 L10,2 Z' />,\r\n    'Delete'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport DeleteIcon from '../../Assets/Icons/Delete';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport ChatTile from './ChatTile';\r\nimport { getChatShortTitle } from '../../Utils/Chat';\r\nimport './TopChat.css';\r\n\r\nclass TopChat extends React.PureComponent {\r\n    state = {\r\n        contextMenu: false,\r\n        top: 0,\r\n        left: 0\r\n    };\r\n\r\n    handleContextMenu = async event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        const { contextMenu } = this.state;\r\n\r\n        if (contextMenu) {\r\n            this.setState({ contextMenu: false });\r\n        } else {\r\n            const left = event.clientX;\r\n            const top = event.clientY;\r\n\r\n            this.setState({\r\n                contextMenu: true,\r\n                left,\r\n                top\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseContextMenu = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({ contextMenu: false });\r\n    };\r\n\r\n    handleDelete = event => {\r\n        this.handleCloseContextMenu();\r\n\r\n        const { onDelete } = this.props;\r\n\r\n        onDelete();\r\n    };\r\n\r\n    render() {\r\n        const { chatId, onSelect, showSavedMessages, t } = this.props;\r\n        const { contextMenu, top, left } = this.state;\r\n\r\n        const shortTitle = getChatShortTitle(chatId, showSavedMessages, t);\r\n\r\n        return (\r\n            <>\r\n                <ListItem button className='top-chat' onClick={onSelect} onContextMenu={this.handleContextMenu}>\r\n                    <ChatTile dialog chatId={chatId} showSavedMessages={showSavedMessages} showOnline />\r\n                    <div className='top-chat-title'>{shortTitle}</div>\r\n                </ListItem>\r\n                <Popover\r\n                    open={contextMenu}\r\n                    onClose={this.handleCloseContextMenu}\r\n                    anchorReference='anchorPosition'\r\n                    anchorPosition={{ top, left }}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'left'\r\n                    }}\r\n                    onMouseDown={e => e.stopPropagation()}>\r\n                    <MenuList onClick={e => e.stopPropagation()}>\r\n                        <MenuItem onClick={this.handleDelete}>\r\n                            <ListItemIcon>\r\n                                <DeleteIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('Delete')} />\r\n                        </MenuItem>\r\n                    </MenuList>\r\n                </Popover>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nTopChat.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    onSelect: PropTypes.func,\r\n    onDelete: PropTypes.func,\r\n    showSavedMessages: PropTypes.bool\r\n};\r\n\r\nTopChat.defaultProps = {\r\n    showSavedMessages: true\r\n};\r\n\r\nexport default withTranslation()(TopChat);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport DeleteIcon from '../../Assets/Icons/Delete';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport Chat from './Chat';\r\nimport './RecentlyFoundChat.css';\r\n\r\nclass RecentlyFoundChat extends React.PureComponent {\r\n    state = {\r\n        contextMenu: false,\r\n        top: 0,\r\n        left: 0\r\n    };\r\n\r\n    handleContextMenu = async event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        const { contextMenu } = this.state;\r\n\r\n        if (contextMenu) {\r\n            this.setState({ contextMenu: false });\r\n        } else {\r\n            const left = event.clientX;\r\n            const top = event.clientY;\r\n\r\n            this.setState({\r\n                contextMenu: true,\r\n                left,\r\n                top\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseContextMenu = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({ contextMenu: false });\r\n    };\r\n\r\n    handleDelete = event => {\r\n        this.handleCloseContextMenu();\r\n\r\n        const { onDelete } = this.props;\r\n\r\n        onDelete();\r\n    };\r\n\r\n    render() {\r\n        const { t, chatId, onClick } = this.props;\r\n        const { contextMenu, top, left } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <ListItem\r\n                    button\r\n                    className='recently-found-chat'\r\n                    onClick={onClick}\r\n                    onContextMenu={this.handleContextMenu}>\r\n                    <Chat chatId={chatId} />\r\n                </ListItem>\r\n                <Popover\r\n                    open={contextMenu}\r\n                    onClose={this.handleCloseContextMenu}\r\n                    anchorReference='anchorPosition'\r\n                    anchorPosition={{ top, left }}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'left'\r\n                    }}\r\n                    onMouseDown={e => e.stopPropagation()}>\r\n                    <MenuList onClick={e => e.stopPropagation()}>\r\n                        <MenuItem onClick={this.handleDelete}>\r\n                            <ListItemIcon>\r\n                                <DeleteIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('Delete')} />\r\n                        </MenuItem>\r\n                    </MenuList>\r\n                </Popover>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nRecentlyFoundChat.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    onSelect: PropTypes.func,\r\n    onDelete: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(RecentlyFoundChat);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Chat from './Chat';\r\nimport { getChatUsername } from '../../Utils/Chat';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport './FoundPublicChat.css';\r\n\r\nclass FoundPublicChat extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            nextChatId: AppStore.getChatId(),\r\n            previousChatId: null\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId } = this.props;\r\n\r\n        if (nextState.nextChatId === chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.previousChatId === chatId) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\r\n    }\r\n\r\n    onClientUpdateChatId = update => {\r\n        const { nextChatId, previousChatId } = update;\r\n\r\n        this.setState({\r\n            nextChatId: nextChatId,\r\n            previousChatId: previousChatId\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, onClick } = this.props;\r\n        const { nextChatId: selectedChatId } = this.state;\r\n\r\n        const username = getChatUsername(chatId);\r\n\r\n        return (\r\n            <ListItem\r\n                button\r\n                className={classNames('found-public-chat', { 'item-selected': chatId === selectedChatId })}\r\n                onClick={onClick}>\r\n                <div className='found-public-chat-wrapper'>\r\n                    <Chat chatId={chatId} subtitle={username ? '@' + username : null} />\r\n                </div>\r\n            </ListItem>\r\n        );\r\n    }\r\n}\r\n\r\nFoundPublicChat.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default FoundPublicChat;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ChatTile from './ChatTile';\r\nimport UserTile from './UserTile';\r\nimport DialogTitle from './DialogTitle';\r\nimport { getMessageDate, getMessageSenderFullName, getMessageSenderName } from '../../Utils/Chat';\r\nimport { getContent } from '../../Utils/Message';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport './FoundMessage.css';\r\n\r\nclass FoundMessage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            nextChatId: AppStore.getChatId(),\r\n            nextMessageId: AppStore.getMessageId()\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, messageId } = this.props;\r\n\r\n        if (nextState.nextChatId === chatId && nextState.nextMessageId === messageId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.previousChatId === chatId && nextState.previousMessageId === messageId) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\r\n    }\r\n\r\n    onClientUpdateChatId = update => {\r\n        this.setState({\r\n            ...update\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, messageId, chatSearch, onClick, t } = this.props;\r\n        const selectedChatId = this.state.nextChatId;\r\n        const selectedMessageId = this.state.nextMessageId;\r\n        const message = MessageStore.get(chatId, messageId);\r\n\r\n        const { sender_user_id } = message;\r\n\r\n        const date = getMessageDate(message);\r\n        const senderName = getMessageSenderName(message, t);\r\n        const senderFullName = getMessageSenderFullName(message, t);\r\n        const content = getContent(message, t) || '\\u00A0';\r\n        const selected = chatId === selectedChatId && messageId === selectedMessageId;\r\n\r\n        const tile =\r\n            sender_user_id && chatSearch ? (\r\n                <UserTile userId={sender_user_id} dialog />\r\n            ) : (\r\n                <ChatTile chatId={chatId} dialog />\r\n            );\r\n\r\n        return (\r\n            <ListItem button className={classNames('found-message', { 'item-selected': selected })} onClick={onClick}>\r\n                <div className='dialog-wrapper'>\r\n                    {tile}\r\n                    <div className='dialog-inner-wrapper'>\r\n                        <div className='tile-first-row'>\r\n                            {chatSearch && senderFullName ? (\r\n                                <div className='dialog-title'>{senderFullName}</div>\r\n                            ) : (\r\n                                <DialogTitle chatId={chatId} />\r\n                            )}\r\n                            <div className='dialog-meta'>{date}</div>\r\n                        </div>\r\n                        <div className='tile-second-row'>\r\n                            <div className='dialog-content'>\r\n                                {\r\n                                    <>\r\n                                        {!chatSearch && senderName && (\r\n                                            <span className='dialog-content-accent'>{senderName}: </span>\r\n                                        )}\r\n                                        {content}\r\n                                    </>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </ListItem>\r\n        );\r\n    }\r\n}\r\n\r\nFoundMessage.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    chatSearch: PropTypes.bool,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(FoundMessage);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport './SectionHeader.css';\r\n\r\nfunction SectionHeader({ command, multiline, onClick, children }) {\r\n    return (\r\n        <div className='section-header'>\r\n            <div className={classNames('section-header-title', { 'section-header-title-multiline': multiline })}>{children}</div>\r\n            {Boolean(command) && <a onClick={onClick}>{command}</a>}\r\n        </div>\r\n    );\r\n}\r\n\r\nSectionHeader.propTypes = {\r\n    command: PropTypes.string,\r\n    multiline: PropTypes.bool,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default SectionHeader;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport KeyboardManager, { KeyboardHandler } from '../../Additional/KeyboardManager';\r\nimport CloseIcon from '../../../Assets/Icons/Close';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Chat from '../../Tile/Chat';\r\nimport TopChat from '../../Tile/TopChat';\r\nimport RecentlyFoundChat from '../../Tile/RecentlyFoundChat';\r\nimport FoundPublicChat from '../../Tile/FoundPublicChat';\r\nimport FoundMessage from '../../Tile/FoundMessage';\r\nimport SectionHeader from '../SectionHeader';\r\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\r\nimport { filterDuplicateMessages } from '../../../Utils/Message';\r\nimport { getCyrillicInput, getLatinInput } from '../../../Utils/Language';\r\nimport { orderCompare } from '../../../Utils/Common';\r\nimport { getChatOrder } from '../../../Utils/Chat';\r\nimport { modalManager } from '../../../Utils/Modal';\r\nimport { SCROLL_PRECISION, USERNAME_LENGTH_MIN } from '../../../Constants';\r\nimport ChatStore from '../../../Stores/ChatStore';\r\nimport FileStore from '../../../Stores/FileStore';\r\nimport MessageStore from '../../../Stores/MessageStore';\r\nimport UserStore from '../../../Stores/UserStore';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './Search.css';\r\n\r\nclass Search extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\r\n        this.listRef = React.createRef();\r\n        this.state = {};\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { text } = this.props;\r\n\r\n        this.searchOrLoadContent(text);\r\n\r\n        KeyboardManager.add(this.keyboardHandler);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        KeyboardManager.remove(this.keyboardHandler);\r\n    }\r\n\r\n    handleKeyDown = event => {\r\n        if (modalManager.modals.length > 0) {\r\n            return;\r\n        }\r\n\r\n        if (event.isComposing) {\r\n            return;\r\n        }\r\n\r\n        switch (event.key) {\r\n            case 'Escape':\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                event.target.blur();\r\n\r\n                this.handleClose();\r\n                break;\r\n        }\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { chatId, text } = this.props;\r\n\r\n        if (prevProps.text !== text) {\r\n            this.searchOrLoadContent(text);\r\n        } else if (prevProps.chatId !== chatId) {\r\n            this.searchOrLoadContent(text);\r\n        }\r\n    }\r\n\r\n    searchOrLoadContent(text) {\r\n        const trimmedText = text ? text.trim() : '';\r\n\r\n        if (!trimmedText) {\r\n            this.loadContent();\r\n        } else {\r\n            this.searchText(trimmedText);\r\n        }\r\n    }\r\n\r\n    concatSearchResults = results => {\r\n        const arr = [];\r\n        const map = new Map();\r\n\r\n            for (let i = 0; i < results.length; i++) {\r\n            let result = results[i] && results[i].chat_ids;\r\n            if (result) {\r\n                for (let j = 0; j < result.length; j++) {\r\n                    if (!map.has(result[j])) {\r\n                        map.set(result[j], result[j]);\r\n                        arr.push(result[j]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        arr.sort((a, b) => {\r\n            return orderCompare(getChatOrder(b), getChatOrder(a));\r\n        });\r\n\r\n        return arr;\r\n    };\r\n\r\n    searchText = async text => {\r\n        this.sessionId = new Date();\r\n        this.text = text;\r\n        const sessionId = this.sessionId;\r\n        let store = null;\r\n\r\n        // console.log('[se] searchText=' + text);\r\n\r\n        const { chatId } = this.props;\r\n        const { savedMessages } = this.state;\r\n\r\n        if (!chatId) {\r\n            const promises = [];\r\n            const localPromise = TdLibController.send({\r\n                '@type': 'searchChats',\r\n                query: text,\r\n                limit: 100\r\n            });\r\n            promises.push(localPromise);\r\n\r\n            const latinText = getLatinInput(text);\r\n            if (latinText && latinText !== text) {\r\n                const latinLocalPromise = TdLibController.send({\r\n                    '@type': 'searchChats',\r\n                    query: latinText,\r\n                    limit: 100\r\n                });\r\n                promises.push(latinLocalPromise);\r\n            }\r\n\r\n            const cyrillicText = getCyrillicInput(text);\r\n            if (cyrillicText && cyrillicText !== text) {\r\n                const cyrillicLocalPromise = TdLibController.send({\r\n                    '@type': 'searchChats',\r\n                    query: cyrillicText,\r\n                    limit: 100\r\n                });\r\n                promises.push(cyrillicLocalPromise);\r\n            }\r\n\r\n            const results = await Promise.all(promises.map(x => x.catch(e => null)));\r\n            const local = this.concatSearchResults(results);\r\n\r\n            if (sessionId !== this.sessionId) {\r\n                return;\r\n            }\r\n\r\n            if (savedMessages) {\r\n                const { t } = this.props;\r\n\r\n                const searchText = text.toUpperCase();\r\n                const savedMessagesStrings = ['SAVED MESSAGES', t('SavedMessages').toUpperCase()];\r\n\r\n                if (\r\n                    savedMessagesStrings.some(el => el.includes(searchText)) ||\r\n                    (latinText && savedMessagesStrings.some(el => el.includes(latinText.toUpperCase())))\r\n                ) {\r\n                    local.splice(0, 0, savedMessages.id);\r\n                }\r\n            }\r\n\r\n            this.setState({\r\n                top: null,\r\n                recentlyFound: null,\r\n                local: local\r\n            });\r\n\r\n            store = FileStore.getStore();\r\n            loadChatsContent(store, local);\r\n\r\n            let trimmedText = text.trim();\r\n            trimmedText = trimmedText.startsWith('@') ? trimmedText.substr(1) : trimmedText;\r\n            if (trimmedText.length >= USERNAME_LENGTH_MIN) {\r\n                const globalPromises = [];\r\n\r\n                const globalPromise = TdLibController.send({\r\n                    '@type': 'searchPublicChats',\r\n                    query: trimmedText\r\n                });\r\n                globalPromises.push(globalPromise);\r\n\r\n                if (latinText) {\r\n                    let latinTrimmedText = latinText.trim();\r\n                    latinTrimmedText = latinTrimmedText.startsWith('@') ? latinTrimmedText.substr(1) : latinTrimmedText;\r\n                    if (latinTrimmedText.length >= USERNAME_LENGTH_MIN && latinTrimmedText !== trimmedText) {\r\n                        const globalLatinPromise = TdLibController.send({\r\n                            '@type': 'searchPublicChats',\r\n                            query: latinTrimmedText\r\n                        });\r\n                        globalPromises.push(globalLatinPromise);\r\n                    }\r\n                }\r\n\r\n                const globalResults = await Promise.all(globalPromises.map(x => x.catch(e => null)));\r\n                const global = this.concatSearchResults(globalResults);\r\n\r\n                if (sessionId !== this.sessionId) {\r\n                    return;\r\n                }\r\n\r\n                this.setState({\r\n                    global\r\n                });\r\n\r\n                store = FileStore.getStore();\r\n                loadChatsContent(store, global);\r\n            } else {\r\n                this.setState({\r\n                    global: null\r\n                });\r\n            }\r\n        }\r\n\r\n        let messages = [];\r\n        if (chatId) {\r\n            messages = await TdLibController.send({\r\n                '@type': 'searchChatMessages',\r\n                chat_id: chatId,\r\n                query: text,\r\n                sender_user_id: 0,\r\n                from_message_id: 0,\r\n                offset: 0,\r\n                limit: 50,\r\n                filter: null\r\n            });\r\n        } else {\r\n            messages = await TdLibController.send({\r\n                '@type': 'searchMessages',\r\n                chat_list: { '@type': 'chatListMain' },\r\n                query: text,\r\n                offset_date: 0,\r\n                offset_chat_id: 0,\r\n                offset_message_id: 0,\r\n                limit: 50\r\n            });\r\n        }\r\n\r\n        MessageStore.setItems(messages.messages);\r\n\r\n        let linkMessage = null;\r\n        if (!chatId) {\r\n            try {\r\n                const messageLinkInfo = await TdLibController.send({\r\n                    '@type': 'getMessageLinkInfo',\r\n                    url: text\r\n                });\r\n                // console.log('[se] searchText=' + text + ' messageLinkInfo', messageLinkInfo);\r\n\r\n                MessageStore.setItems([messageLinkInfo.message]);\r\n\r\n                linkMessage = messageLinkInfo;\r\n            } catch (error) {\r\n                console.log('[se] searchText=' + text + ' messageLinkInfo error', error);\r\n            }\r\n        }\r\n\r\n        // console.log('[se] searchText=' + text + ' result', messages, linkMessage);\r\n\r\n        if (sessionId !== this.sessionId) {\r\n            return;\r\n        }\r\n\r\n        // console.log('[se] searchText=' + text + ' result session', messages, linkMessage);\r\n\r\n        this.setState({\r\n            messages,\r\n            linkMessage\r\n        });\r\n\r\n        const chats = new Map();\r\n        const users = new Map();\r\n        for (let i = 0; i < messages.messages.length; i++) {\r\n            chats.set(messages.messages[i].chat_id, messages.messages[i].chat_id);\r\n            if (messages.messages[i].sender_user_id) {\r\n                users.set(messages.messages[i].sender_user_id, messages.messages[i].sender_user_id);\r\n            }\r\n        }\r\n\r\n        if (linkMessage) {\r\n            const { chat_id, sender_user_id } = linkMessage;\r\n\r\n            chats.set(chat_id, chat_id);\r\n            if (sender_user_id) {\r\n                users.set(sender_user_id, sender_user_id);\r\n            }\r\n        }\r\n\r\n        store = FileStore.getStore();\r\n        loadChatsContent(store, [...chats.keys()]);\r\n        loadUsersContent(store, [...users.keys()]);\r\n    };\r\n\r\n    loadContent = async () => {\r\n        const { chatId } = this.props;\r\n        if (chatId) {\r\n            this.setState({\r\n                top: null,\r\n                recentlyFound: null,\r\n                local: null,\r\n                global: null,\r\n                messages: null,\r\n                linkMessage: null\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        const topPromise = TdLibController.send({\r\n            '@type': 'getTopChats',\r\n            category: { '@type': 'topChatCategoryUsers' },\r\n            limit: 30\r\n        }).catch(() => {\r\n            return { '@type': 'chats', chat_ids: [] };\r\n        });\r\n\r\n        const recentlyFoundPromise = TdLibController.send({\r\n            '@type': 'searchChats',\r\n            query: '',\r\n            limit: 100\r\n        }).catch(() => {\r\n            return { '@type': 'chats', chat_ids: [] };\r\n        });\r\n\r\n        const savedMessagesPromise = TdLibController.send({\r\n            '@type': 'createPrivateChat',\r\n            user_id: UserStore.getMyId(),\r\n            force: true\r\n        }).catch(error => {});\r\n\r\n        const [top, recentlyFound, savedMessages] = await Promise.all([\r\n            topPromise,\r\n            recentlyFoundPromise,\r\n            savedMessagesPromise\r\n        ]);\r\n\r\n        this.setState({\r\n            top,\r\n            recentlyFound,\r\n            savedMessages,\r\n            local: null,\r\n            global: null,\r\n            messages: null,\r\n            linkMessage: null\r\n        });\r\n\r\n        const store = FileStore.getStore();\r\n        loadChatsContent(store, top.chat_ids);\r\n        loadChatsContent(store, recentlyFound.chat_ids);\r\n    };\r\n\r\n    handleClearRecentlyFound = event => {\r\n        event.stopPropagation();\r\n\r\n        TdLibController.send({\r\n            '@type': 'clearRecentlyFoundChats'\r\n        });\r\n\r\n        this.setState({ recentlyFound: null });\r\n    };\r\n\r\n    handleSelectMessage = (chatId, messageId, addToRecent, keepOpen) => {\r\n        const { onSelectMessage } = this.props;\r\n\r\n        if (addToRecent) {\r\n            TdLibController.send({\r\n                '@type': 'addRecentlyFoundChat',\r\n                chat_id: chatId\r\n            });\r\n        }\r\n\r\n        onSelectMessage(chatId, messageId, keepOpen);\r\n    };\r\n\r\n    handleScroll = () => {\r\n        const list = this.listRef.current;\r\n\r\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\r\n            this.onLoadPrevious();\r\n        }\r\n    };\r\n\r\n    getOffset = messages => {\r\n        const length = messages ? messages.messages.length : 0;\r\n\r\n        const offsetDate = length > 0 ? messages.messages[length - 1].date : 0;\r\n        const offsetChatId = length > 0 ? messages.messages[length - 1].chat_id : 0;\r\n        const offsetMessageId = length > 0 ? messages.messages[length - 1].id : 0;\r\n\r\n        return {\r\n            offset_date: offsetDate,\r\n            offset_chat_id: offsetChatId,\r\n            offset_message_id: offsetMessageId\r\n        };\r\n    };\r\n\r\n    concatMessages = (messages, result) => {\r\n        if (!result) return messages;\r\n        if (!result.messages.length) return messages;\r\n\r\n        if (!messages) return result;\r\n        if (!messages.messages.length) return result;\r\n\r\n        return {\r\n            total_count: result.total_count,\r\n            messages: messages.messages.concat(result.messages)\r\n        };\r\n    };\r\n\r\n    onLoadPrevious = async () => {\r\n        if (this.loading) return;\r\n\r\n        const { chatId } = this.props;\r\n\r\n        const sessionId = this.sessionId;\r\n\r\n        const { messages } = this.state;\r\n\r\n        const offset = this.getOffset(messages);\r\n\r\n        this.loading = true;\r\n        let result = [];\r\n        if (chatId) {\r\n            result = await TdLibController.send({\r\n                '@type': 'searchChatMessages',\r\n                chat_id: chatId,\r\n                query: this.text,\r\n                sender_user_id: 0,\r\n                from_message_id: offset.offset_message_id,\r\n                limit: 50,\r\n                filter: null\r\n            });\r\n        } else {\r\n            result = await TdLibController.send({\r\n                '@type': 'searchMessages',\r\n                chat_list: { '@type': 'chatListMain' },\r\n                query: this.text,\r\n                ...offset,\r\n                limit: 50\r\n            });\r\n        }\r\n        this.loading = false;\r\n\r\n        filterDuplicateMessages(result, messages ? messages.messages : []);\r\n        MessageStore.setItems(result.messages);\r\n\r\n        if (sessionId !== this.sessionId) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            messages: this.concatMessages(messages, result)\r\n        });\r\n\r\n        const chats = new Map();\r\n        const users = new Map();\r\n        for (let i = 0; i < result.messages.length; i++) {\r\n            chats.set(result.messages[i].chat_id, result.messages[i].chat_id);\r\n            if (result.messages[i].sender_user_id) {\r\n                users.set(result.messages[i].sender_user_id, result.messages[i].sender_user_id);\r\n            }\r\n        }\r\n\r\n        const store = FileStore.getStore();\r\n        loadChatsContent(store, [...chats.keys()]);\r\n        loadUsersContent(store, [...users.keys()]);\r\n    };\r\n\r\n    handleTopChatsScroll = event => {\r\n        event.stopPropagation();\r\n    };\r\n\r\n    handleClose = () => {\r\n        const { onClose } = this.props;\r\n\r\n        onClose();\r\n    };\r\n\r\n    handleDeleteRecentlyFoundChat = async chatId => {\r\n        if (!chatId) return;\r\n\r\n        await TdLibController.send({\r\n            '@type': 'removeRecentlyFoundChat',\r\n            chat_id: chatId\r\n        });\r\n\r\n        const { recentlyFound } = this.state;\r\n        if (!recentlyFound) return;\r\n\r\n        this.setState({\r\n            recentlyFound: { ...recentlyFound, chat_ids: recentlyFound.chat_ids.filter(x => x !== chatId) }\r\n        });\r\n    };\r\n\r\n    handleDeleteTopChat = async chatId => {\r\n        if (!chatId) return;\r\n\r\n        await TdLibController.send({\r\n            '@type': 'removeTopChat',\r\n            chat_id: chatId,\r\n            category: {\r\n                '@type': 'topChatCategoryUsers'\r\n            }\r\n        });\r\n\r\n        const { top } = this.state;\r\n        if (!top) return;\r\n\r\n        this.setState({\r\n            top: { ...top, chat_ids: top.chat_ids.filter(x => x !== chatId) }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, t } = this.props;\r\n        const { top, recentlyFound, local, global, messages, linkMessage } = this.state;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n\r\n        const topChats =\r\n            top && top.chat_ids\r\n                ? top.chat_ids.map(x => (\r\n                      <TopChat\r\n                          key={x}\r\n                          chatId={x}\r\n                          onSelect={() => this.handleSelectMessage(x, null, false, false)}\r\n                          onDelete={() => this.handleDeleteTopChat(x)}\r\n                      />\r\n                  ))\r\n                : [];\r\n\r\n        const recentlyFoundChats =\r\n            recentlyFound && recentlyFound.chat_ids\r\n                ? recentlyFound.chat_ids.map(x => (\r\n                      <RecentlyFoundChat\r\n                          key={x}\r\n                          chatId={x}\r\n                          onClick={() => this.handleSelectMessage(x, null, true, false)}\r\n                          onDelete={() => this.handleDeleteRecentlyFoundChat(x)}\r\n                      />\r\n                  ))\r\n                : [];\r\n\r\n        const localChats = local\r\n            ? local.map(x => (\r\n                  <RecentlyFoundChat\r\n                      key={x}\r\n                      chatId={x}\r\n                      onClick={() => this.handleSelectMessage(x, null, true, false)}\r\n                  />\r\n              ))\r\n            : [];\r\n\r\n        const globalChatsMap = new Map();\r\n        const globalChats = global\r\n            ? global.map(x => {\r\n                  globalChatsMap.set(x, x);\r\n\r\n                  return (\r\n                      <FoundPublicChat\r\n                          key={x}\r\n                          chatId={x}\r\n                          onClick={() => this.handleSelectMessage(x, null, true, true)}\r\n                      />\r\n                  );\r\n              })\r\n            : [];\r\n\r\n        const globalLinkChat =\r\n            linkMessage && linkMessage.chat_id && !linkMessage.message && !globalChatsMap.has(linkMessage.chat_id) ? (\r\n                <FoundPublicChat\r\n                    key={linkMessage.chat_id}\r\n                    chatId={linkMessage.chat_id}\r\n                    onClick={() => this.handleSelectMessage(linkMessage.chat_id, null, true, true)}\r\n                />\r\n            ) : null;\r\n\r\n        const globalMessagesMap = new Map();\r\n        const globalMessages =\r\n            messages && messages.messages\r\n                ? messages.messages.map(x => {\r\n                      const key = `${x.chat_id}_${x.id}`;\r\n                      globalMessagesMap.set(key, key);\r\n\r\n                      return (\r\n                          <FoundMessage\r\n                              key={key}\r\n                              chatId={x.chat_id}\r\n                              messageId={x.id}\r\n                              chatSearch={Boolean(chatId)}\r\n                              onClick={() => this.handleSelectMessage(x.chat_id, x.id, false, true)}\r\n                          />\r\n                      );\r\n                  })\r\n                : [];\r\n\r\n        const globalLinkMessage =\r\n            linkMessage &&\r\n            linkMessage.message &&\r\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`) ? (\r\n                <FoundMessage\r\n                    key={`${linkMessage.message.chat_id}_${linkMessage.message.id}`}\r\n                    chatId={linkMessage.message.chat_id}\r\n                    messageId={linkMessage.message.id}\r\n                    chatSearch={false}\r\n                    onClick={() =>\r\n                        this.handleSelectMessage(linkMessage.message.chat_id, linkMessage.message.id, false, true)\r\n                    }\r\n                />\r\n            ) : null;\r\n\r\n        let count = messages ? messages.total_count : 0;\r\n        if (\r\n            linkMessage &&\r\n            linkMessage.message &&\r\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`)\r\n        ) {\r\n            count++;\r\n        }\r\n\r\n        let messagesCaption = t('NoMessages');\r\n        if (count) {\r\n            messagesCaption = count === 1 ? 'Found 1 message' : `Found ${count} messages`;\r\n        }\r\n\r\n        return (\r\n            <div ref={this.listRef} className='search' onScroll={this.handleScroll}>\r\n                {chat && (\r\n                    <>\r\n                        <div className='sidebar-page-section'>\r\n                            <SectionHeader>{t('SearchMessagesIn')}</SectionHeader>\r\n                            <div className='search-chat-wrapper'>\r\n                                <div className='search-chat-control'>\r\n                                    <Chat chatId={chatId} showStatus={false} />\r\n                                </div>\r\n                                <IconButton\r\n                                    className='header-right-button'\r\n                                    aria-label='Search'\r\n                                    onMouseDown={this.handleClose}>\r\n                                    <CloseIcon />\r\n                                </IconButton>\r\n                            </div>\r\n                        </div>\r\n                        <div className='sidebar-page-section-divider' />\r\n                    </>\r\n                )}\r\n                {topChats.length > 0 && (\r\n                    <>\r\n                        <div className='sidebar-page-section'>\r\n                            <SectionHeader>{t('ChatHints')}</SectionHeader>\r\n                            <div className='search-top-chats-list' onScroll={this.handleTopChatsScroll}>\r\n                                <div className='search-top-chats-placeholder' />\r\n                                {topChats}\r\n                                <div className='search-top-chats-placeholder' />\r\n                            </div>\r\n                        </div>\r\n                        <div className='sidebar-page-section-divider' />\r\n                    </>\r\n                )}\r\n                {recentlyFoundChats.length > 0 && (\r\n                    <div className='sidebar-page-section'>\r\n                        <SectionHeader command={t('ClearButton')} onClick={this.handleClearRecentlyFound}>\r\n                            {t('Recent')}\r\n                        </SectionHeader>\r\n                        {recentlyFoundChats}\r\n                    </div>\r\n                )}\r\n                {localChats.length > 0 && (\r\n                    <>\r\n                        <div className='sidebar-page-section'>\r\n                            <SectionHeader>{t('ChatsAndContacts')}</SectionHeader>\r\n                            {localChats}\r\n                        </div>\r\n                        <div className='sidebar-page-section-divider' />\r\n                    </>\r\n                )}\r\n                {globalChats.length > 0 && (\r\n                    <>\r\n                        <div className='sidebar-page-section'>\r\n                            <SectionHeader>{t('GlobalSearch')}</SectionHeader>\r\n                            {globalLinkChat}\r\n                            {globalChats}\r\n                        </div>\r\n                        <div className='sidebar-page-section-divider' />\r\n                    </>\r\n                )}\r\n                {(messages || (linkMessage && linkMessage.message)) && (\r\n                    <div className='sidebar-page-section'>\r\n                        <SectionHeader>{messagesCaption}</SectionHeader>\r\n                        {globalLinkMessage}\r\n                        {globalMessages}\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSearch.propTypes = {\r\n    chatId: PropTypes.number,\r\n    text: PropTypes.string,\r\n    onSelectMessage: PropTypes.func.isRequired,\r\n    onClose: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withTranslation()(Search);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes, { number } from 'prop-types';\r\nimport { Slide } from '@material-ui/core';\r\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport './SidebarPage.css';\r\n\r\nclass SidebarPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\r\n    }\r\n\r\n    handleKeyDown = event => {\r\n        if (modalManager.modals.length > 0) {\r\n            return;\r\n        }\r\n\r\n        if (event.isComposing) {\r\n            return;\r\n        }\r\n\r\n        switch (event.key) {\r\n            case 'Escape':\r\n                const { onClose } = this.props;\r\n                if (onClose) {\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                    event.target.blur();\r\n\r\n                    onClose();\r\n                }\r\n                break;\r\n        }\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { open } = this.props;\r\n\r\n        if (prevProps.open !== open) {\r\n            if (open) {\r\n                KeyboardManager.add(this.keyboardHandler);\r\n            } else {\r\n                KeyboardManager.remove(this.keyboardHandler);\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { children, open, timeout, onClose } = this.props;\r\n\r\n        return (\r\n            <Slide direction='right' in={open} timeout={timeout} mountOnEnter unmountOnExit>\r\n                <div className='sidebar-page'>{onClose ? React.cloneElement(children, { onClose }) : children}</div>\r\n            </Slide>\r\n        );\r\n    }\r\n}\r\n\r\nSidebarPage.propTypes = {\r\n    open: PropTypes.bool.isRequired,\r\n    timeout: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\r\n    onClose: PropTypes.func\r\n};\r\n\r\nexport default SidebarPage;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M9.37867966,2 C9.97541676,2 10.5501571,2.2133476 11.0009229,2.59780217 L11.1464466,2.73223305 L13.267767,4.85355339 C13.3427815,4.92856794 13.4391777,4.97728504 13.542631,4.9937713 L13.6213203,5 L19,5 C21.1421954,5 22.8910789,6.68396847 22.9951047,8.80035966 L23,9 L23,18 C23,20.1421954 21.3160315,21.8910789 19.1996403,21.9951047 L19,22 L5,22 C2.85780461,22 1.10892112,20.3160315 1.00489531,18.1996403 L1,18 L1,6 C1,3.85780461 2.68396847,2.10892112 4.80035966,2.00489531 L5,2 L9.37867966,2 Z M9.37867966,4 L5,4 C3.9456382,4 3.08183488,4.81587779 3.00548574,5.85073766 L3,6 L3,18 C3,19.0543618 3.81587779,19.9181651 4.85073766,19.9945143 L5,20 L19,20 C20.0543618,20 20.9181651,19.1841222 20.9945143,18.1492623 L21,18 L21,9 C21,7.9456382 20.1841222,7.08183488 19.1492623,7.00548574 L19,7 L13.6213203,7 C13.0245832,7 12.4498429,6.7866524 11.9990771,6.40219783 L11.8535534,6.26776695 L9.73223305,4.14644661 C9.6572185,4.07143206 9.56082233,4.02271496 9.45736903,4.0062287 L9.37867966,4 Z M19,10 C19.5522847,10 20,10.4477153 20,11 C20,11.5128358 19.6139598,11.9355072 19.1166211,11.9932723 L19,12 L5,12 C4.44771525,12 4,11.5522847 4,11 C4,10.4871642 4.38604019,10.0644928 4.88337887,10.0067277 L5,10 L19,10 Z'/>,\r\n    'Folder'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M7.70710678,20.7071068 C7.5195704,20.8946432 7.26521649,21 7,21 L4,21 C3.44771525,21 3,20.5522847 3,20 L3,17 C3,16.7347835 3.10535684,16.4804296 3.29289322,16.2928932 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L7.70710678,20.7071068 Z M5,17.4142136 L5,19 L6.58578644,19 L16.5857864,9 L15,7.41421356 L5,17.4142136 Z M18,4.41421356 L16.414,5.99921356 L18,7.58521356 L19.5857864,6 L18,4.41421356 Z' />,\r\n    'Edit'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M11,2 C13.209139,2 15,3.790861 15,6 C15,6.55228475 14.5522847,7 14,7 C13.4477153,7 13,6.55228475 13,6 L13,6 L12.9945143,5.85073766 C12.9181651,4.81587779 12.0543618,4 11,4 L11,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,6 L4,18 C4,19.1045695 4.8954305,20 6,20 L6,20 L11,20 C12.1045695,20 13,19.1045695 13,18 L13,18 L13.0067277,17.8833789 C13.0644928,17.3860402 13.4871642,17 14,17 C14.5522847,17 15,17.4477153 15,18 C15,20.209139 13.209139,22 11,22 L11,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,18 L2,6 C2,3.790861 3.790861,2 6,2 L6,2 Z M18.7071068,7.29289322 L22.7071068,11.2928932 C22.7355731,11.3213595 22.7623312,11.3515341 22.787214,11.3832499 L22.7071068,11.2928932 C22.7425008,11.3282873 22.774687,11.3656744 22.8036654,11.4046934 C22.8215099,11.4288693 22.8382813,11.453725 22.8539326,11.4793398 C22.8613931,11.4913869 22.8685012,11.5036056 22.8753288,11.5159379 C22.8862061,11.5357061 22.8966234,11.5561086 22.9063462,11.5769009 C22.914321,11.5939015 22.9218036,11.6112044 22.9287745,11.628664 C22.9366843,11.6484208 22.9438775,11.6682023 22.9504533,11.6882636 C22.9552713,11.7031487 22.9599023,11.7185367 22.9641549,11.734007 C22.9701664,11.7555635 22.9753602,11.7772539 22.9798348,11.7992059 C22.9832978,11.8166247 22.9863719,11.834051 22.9889822,11.8515331 C22.9962388,11.8996379 23,11.9493797 23,12 L22.9962979,11.9137692 C22.9978436,11.9317345 22.9989053,11.9497336 22.9994829,11.9677454 L23,12 C23,12.0112225 22.9998151,12.0224019 22.9994483,12.0335352 C22.9988772,12.050591 22.997855,12.0679231 22.996384,12.0852242 C22.994564,12.1070574 22.9920941,12.1281144 22.9889807,12.1489612 C22.9863719,12.165949 22.9832978,12.1833753 22.9797599,12.2007258 C22.9753602,12.2227461 22.9701664,12.2444365 22.964279,12.2658396 C22.9599023,12.2814633 22.9552713,12.2968513 22.9502619,12.3121425 C22.9438775,12.3317977 22.9366843,12.3515792 22.928896,12.3710585 C22.9218036,12.3887956 22.914321,12.4060985 22.9063266,12.4232215 C22.8966234,12.4438914 22.8862061,12.4642939 22.8751242,12.484277 C22.8685012,12.4963944 22.8613931,12.5086131 22.8540045,12.5207088 C22.8382813,12.546275 22.8215099,12.5711307 22.8036865,12.5951593 C22.7982466,12.602603 22.7927155,12.6098424 22.7870723,12.6170223 C22.7849289,12.6196628 22.7826279,12.6225624 22.7803112,12.625449 L22.7071068,12.7071068 L22.7071068,12.7071068 L18.7071068,16.7071068 C18.3165825,17.0976311 17.6834175,17.0976311 17.2928932,16.7071068 C16.9023689,16.3165825 16.9023689,15.6834175 17.2928932,15.2928932 L19.585,13 L13,13 C12.4871642,13 12.0644928,12.6139598 12.0067277,12.1166211 L12,12 C12,11.4477153 12.4477153,11 13,11 L13,11 L19.585,11 L17.2928932,8.70710678 C16.9023689,8.31658249 16.9023689,7.68341751 17.2928932,7.29289322 C17.6834175,6.90236893 18.3165825,6.90236893 18.7071068,7.29289322 Z' />,\r\n    'LogOut'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M12,16 C13.1045695,16 14,16.8954305 14,18 C14,19.1045695 13.1045695,20 12,20 C10.8954305,20 10,19.1045695 10,18 C10,16.8954305 10.8954305,16 12,16 Z M12,10 C13.1045695,10 14,10.8954305 14,12 C14,13.1045695 13.1045695,14 12,14 C10.8954305,14 10,13.1045695 10,12 C10,10.8954305 10.8954305,10 12,10 Z M12,4 C13.1045695,4 14,4.8954305 14,6 C14,7.1045695 13.1045695,8 12,8 C10.8954305,8 10,7.1045695 10,6 C10,4.8954305 10.8954305,4 12,4 Z' />,\r\n    'More'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport LogOutIcon from '../../../Assets/Icons/LogOut';\r\nimport MoreIcon from '../../../Assets/Icons/More';\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\r\nimport { modalManager } from '../../../Utils/Modal';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\n\r\nclass SettingsMenuButton extends React.Component {\r\n    state = {\r\n        anchorEl: null,\r\n        open: false\r\n    };\r\n\r\n    handleMenuOpen = event => {\r\n        this.setState({ anchorEl: event.currentTarget });\r\n    };\r\n\r\n    handleMenuClose = () => {\r\n        this.setState({ anchorEl: null });\r\n    };\r\n\r\n    handleLogOut = () => {\r\n        this.handleMenuClose();\r\n\r\n        this.setState({ open: true });\r\n    };\r\n\r\n    handleDone = () => {\r\n        this.handleClose();\r\n        TdLibController.logOut();\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ open: false });\r\n    };\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        const { anchorEl, open } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <IconButton\r\n                    aria-owns={anchorEl ? 'simple-menu' : null}\r\n                    aria-haspopup='true'\r\n                    className='header-right-button'\r\n                    aria-label='Menu'\r\n                    onClick={this.handleMenuOpen}>\r\n                    <MoreIcon />\r\n                </IconButton>\r\n                <Menu\r\n                    id='main-menu'\r\n                    anchorEl={anchorEl}\r\n                    open={Boolean(anchorEl)}\r\n                    onClose={this.handleMenuClose}\r\n                    getContentAnchorEl={null}\r\n                    disableAutoFocusItem\r\n                    disableRestoreFocus={true}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'right'\r\n                    }}>\r\n                    <MenuItem onClick={this.handleLogOut}>\r\n                        <ListItemIcon>\r\n                            <LogOutIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('LogOut')} />\r\n                    </MenuItem>\r\n                </Menu>\r\n                <Dialog\r\n                    manager={modalManager}\r\n                    transitionDuration={0}\r\n                    open={open}\r\n                    onClose={this.handleClose}\r\n                    aria-labelledby='form-dialog-title'>\r\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\r\n                            {t('AreYouSureLogout')}\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color='primary'>\r\n                            {t('Cancel')}\r\n                        </Button>\r\n                        <Button onClick={this.handleDone} color='primary'>\r\n                            {t('Ok')}\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nSettingsMenuButton.propTypes = {};\r\n\r\nexport default withTranslation()(SettingsMenuButton);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M12,1 C14.6887547,1 16.8818181,3.12230671 16.9953805,5.78311038 L17,6 L17,8 C18.6568542,8 20,9.34314575 20,11 L20,19 C20,20.6568542 18.6568542,22 17,22 L7,22 C5.34314575,22 4,20.6568542 4,19 L4,11 C4,9.34314575 5.34314575,8 7,8 L7,6 C7,3.23857625 9.23857625,1 12,1 Z M17,10 L7,10 C6.44771525,10 6,10.4477153 6,11 L6,19 C6,19.5522847 6.44771525,20 7,20 L17,20 C17.5522847,20 18,19.5522847 18,19 L18,11 C18,10.4477153 17.5522847,10 17,10 Z M12,13.5 C12.8284271,13.5 13.5,14.1715729 13.5,15 C13.5,15.8284271 12.8284271,16.5 12,16.5 C11.1715729,16.5 10.5,15.8284271 10.5,15 C10.5,14.1715729 11.1715729,13.5 12,13.5 Z M12.1762728,3.00509269 L12,3 C10.4023191,3 9.09633912,4.24891996 9.00509269,5.82372721 L9,6 L9,8 L15,8 L15,6 C15,4.40231912 13.75108,3.09633912 12.1762728,3.00509269 L12,3 L12.1762728,3.00509269 Z' />,\r\n    'Data'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M12.4100787,14.6155108 L10.33,12.56 L10.33,12.56 L10.36,12.53 C12.1,10.59 13.34,8.36 14.07,6 L16,6 C16.5522847,6 17,5.55228475 17,5 C17,4.44771525 16.5522847,4 16,4 L10,4 L10,4 L10,3 C10,2.44771525 9.55228475,2 9,2 C8.44771525,2 8,2.44771525 8,3 L8,4 L8,4 L1.995,4 C1.44547667,4 1,4.44547667 1,4.995 C1,5.54452333 1.44547667,5.99 1.995,5.99 L12.17,5.99 L12.17,5.99 C11.5,7.92 10.44,9.75 9,11.35 C8.29025814,10.5639418 7.67370319,9.7196418 7.15033516,8.83487918 C7.09974701,8.74935905 7.03930045,8.64304956 6.96899548,8.51595071 C6.79288115,8.1975972 6.45776707,8 6.09394677,8 L5.69,8 C5.34408921,8 5.06367311,8.2804161 5.06367311,8.62632689 C5.06367311,8.72554854 5.08724633,8.82335055 5.13246346,8.91167013 C5.1653189,8.97586688 5.19575217,9.03408878 5.22376326,9.08633583 C5.88285067,10.3156835 6.70136504,11.4828779 7.67,12.56 L3.29489879,16.8749328 C2.90279535,17.2616439 2.89842396,17.8929978 3.28513501,18.2851012 C3.28675102,18.2867397 3.28837269,18.2883727 3.29,18.29 L3.29289322,18.2928932 C3.68341751,18.6834175 4.31658249,18.6834175 4.70710678,18.2928932 L9,14 L9,14 L11.3403247,16.3403247 C11.6133932,16.6133932 12.0561246,16.6133932 12.3291931,16.3403247 C12.4001325,16.2693853 12.4549762,16.1840114 12.49,16.09 L12.6442671,15.6759147 C12.7816472,15.3071575 12.6899849,14.8921111 12.4100787,14.6155108 Z M17.8069995,10 L17.1930005,10 C16.7761559,10 16.4030352,10.2585728 16.2566713,10.6488766 L12.3511234,21.0636708 C12.2167367,21.4220355 12.3983067,21.8214894 12.7566713,21.9558761 C12.8344793,21.9850541 12.916901,22 13,22 L13.3059169,22 C13.7232965,22 14.0967782,21.7407727 14.2427584,21.3497542 L15.12,19 L15.12,19 L19.87,19 L20.7561047,21.3524905 C20.9028501,21.74208 21.2756099,22 21.6919201,22 L22,22 C22.3827336,22 22.6930005,21.6897331 22.6930005,21.3069995 C22.6930005,21.2239005 22.6780546,21.1414789 22.6488766,21.0636708 L18.7433287,10.6488766 C18.5969648,10.2585728 18.2238441,10 17.8069995,10 Z M17.5,12.67 L19.12,17 L15.88,17 L17.5,12.67 Z' />,\r\n    'Language'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { IconButton } from '@material-ui/core';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\r\nimport CloseIcon from '../../../Assets/Icons/Close';\r\nimport FilterIcon from '../../../Assets/Icons/Folder';\r\nimport Chat from '../../Tile/Chat';\r\nimport EditIcon from '../../../Assets/Icons/Edit';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport SettingsIcon from '../../../Assets/Icons/Settings';\r\nimport SettingsMenuButton from './SettingsMenuButton';\r\nimport UnmuteIcon from '../../../Assets/Icons/Unmute';\r\nimport DataIcon from '../../../Assets/Icons/Data';\r\nimport LanguageIcon from '../../../Assets/Icons/Language';\r\nimport packageJson from '../../../../package.json';\r\nimport { setProfileMediaViewerContent } from '../../../Actions/Client';\r\nimport ChatStore from '../../../Stores/ChatStore';\r\nimport './Main.css';\r\n\r\nclass Main extends React.Component {\r\n\r\n    handleOpenViewer = () => {\r\n        const { chatId } = this.props;\r\n        \r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n        if (!chat.photo) return;\r\n\r\n        setProfileMediaViewerContent({ chatId });\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            chatId,\r\n            popup,\r\n            t,\r\n            onClose,\r\n            onEditProfile,\r\n            onGeneral,\r\n            onNotifications,\r\n            onPrivacySecurity,\r\n            onLanguage,\r\n            onFilters\r\n        } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return null;\r\n\r\n        const { photo } = chat;\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={onClose}>\r\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{t('Settings')}</span>\r\n                    </div>\r\n                    <SettingsMenuButton />\r\n                </div>\r\n                <div className='sidebar-page-content settings-main-content'>\r\n                    <div className='chat-details-info'>\r\n                        <Chat\r\n                            chatId={chatId}\r\n                            big={true}\r\n                            showStatus={true}\r\n                            showSavedMessages={false}\r\n                            onTileSelect={photo ? this.handleOpenViewer : null}\r\n                        />\r\n                    </div>\r\n                    <ListItem className='settings-list-item' button onClick={onEditProfile}>\r\n                        <ListItemIcon>\r\n                            <EditIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('EditProfile')} />\r\n                    </ListItem>\r\n                    <ListItem className='settings-list-item' button onClick={onGeneral}>\r\n                        <ListItemIcon>\r\n                            <SettingsIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('GeneralSettings')} />\r\n                    </ListItem>\r\n                    <ListItem className='settings-list-item' button onClick={onNotifications}>\r\n                        <ListItemIcon>\r\n                            <UnmuteIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('Notifications')} />\r\n                    </ListItem>\r\n                    <ListItem className='settings-list-item' button onClick={onPrivacySecurity}>\r\n                        <ListItemIcon>\r\n                            <DataIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('PrivacySettings')} />\r\n                    </ListItem>\r\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onFilters}>\r\n                        <ListItemIcon>\r\n                            <FilterIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('Filters')} />\r\n                    </ListItem>\r\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onLanguage}>\r\n                        <ListItemIcon>\r\n                            <LanguageIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('Language')} />\r\n                    </ListItem>\r\n                    <div className='settings-main-footer'>\r\n                        {packageJson.version}\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nMain.propTypes = {\r\n    chatId: PropTypes.number,\r\n    popup: PropTypes.bool,\r\n    onClose: PropTypes.func,\r\n    onEditProfile: PropTypes.func,\r\n    onGeneral: PropTypes.func,\r\n    onNotifications: PropTypes.func,\r\n    onPrivacySecurity: PropTypes.func,\r\n    onLanguage: PropTypes.func,\r\n    onFilters: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(Main);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M19.8833789,16.0067277 L20,16 C20.5128358,16 20.9355072,16.3860402 20.9932723,16.8833789 L21,17 L21,19 L23,19 C23.5128358,19 23.9355072,19.3860402 23.9932723,19.8833789 L24,20 C24,20.5128358 23.6139598,20.9355072 23.1166211,20.9932723 L23,21 L21,21 L21,23 C21,23.5128358 20.6139598,23.9355072 20.1166211,23.9932723 L20,24 C19.4871642,24 19.0644928,23.6139598 19.0067277,23.1166211 L19,23 L19,21 L17,21 C16.4871642,21 16.0644928,20.6139598 16.0067277,20.1166211 L16,20 C16,19.4871642 16.3860402,19.0644928 16.8833789,19.0067277 L17,19 L19,19 L19,17 C19,16.4871642 19.3860402,16.0644928 19.8833789,16.0067277 L20,16 L19.8833789,16.0067277 Z M8.41421356,2 L13.5857864,2 C14.0572824,2 14.5116128,2.16648982 14.8701798,2.46691315 L15,2.58578644 L16.4142136,4 L18,4 C19.5976809,4 20.9036609,5.24891996 20.9949073,6.82372721 L21,7 L21,12 C21,12.5522847 20.5522847,13 20,13 C19.4871642,13 19.0644928,12.6139598 19.0067277,12.1166211 L19,12 L19,7 C19,6.48716416 18.6139598,6.06449284 18.1166211,6.00672773 L18,6 L16.4142136,6 C15.9427176,6 15.4883872,5.83351018 15.1298202,5.53308685 L15,5.41421356 L13.5857864,4 L8.41421356,4 L7,5.41421356 C6.66660199,5.74761157 6.22761579,5.95114561 5.76163928,5.99225938 L5.58578644,6 L4,6 C3.48716416,6 3.06449284,6.38604019 3.00672773,6.88337887 L3,7 L3,18 C3,18.5128358 3.38604019,18.9355072 3.88337887,18.9932723 L4,19 L13,19 C13.5522847,19 14,19.4477153 14,20 C14,20.5128358 13.6139598,20.9355072 13.1166211,20.9932723 L13,21 L4,21 C2.40231912,21 1.09633912,19.75108 1.00509269,18.1762728 L1,18 L1,7 C1,5.40231912 2.24891996,4.09633912 3.82372721,4.00509269 L4,4 L5.58578644,4 L7,2.58578644 C7.33339801,2.25238843 7.77238421,2.04885439 8.23836072,2.00774062 L8.41421356,2 L13.5857864,2 L8.41421356,2 Z M11,7 C13.7614237,7 16,9.23857625 16,12 C16,14.7614237 13.7614237,17 11,17 C8.23857625,17 6,14.7614237 6,12 C6,9.23857625 8.23857625,7 11,7 Z M11,9 C9.34314575,9 8,10.3431458 8,12 C8,13.6568542 9.34314575,15 11,15 C12.6568542,15 14,13.6568542 14,12 C14,10.3431458 12.6568542,9 11,9 Z' />,\r\n    'AddImage'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Cropper from 'react-cropper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport AddImageIcon from '../../Assets/Icons/AddImage';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport CheckIcon from '../../Assets/Icons/Check';\r\nimport { getFitSize, readImageSize } from '../../Utils/Common';\r\nimport 'cropperjs/dist/cropper.css';\r\nimport './NewChatPhoto.css';\r\n\r\nclass NewChatPhoto extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.attachPhotoRef = React.createRef();\r\n        this.cropperRef = React.createRef();\r\n\r\n        const { defaultURL } = this.props;\r\n\r\n        this.state = {\r\n            blobURL: defaultURL,\r\n            open: false\r\n        }\r\n    }\r\n\r\n    handleCancel = () => {\r\n        this.setState({\r\n            open: false\r\n        });\r\n    }\r\n\r\n    handleDone = () => {\r\n        const cropper = this.cropperRef.current;\r\n        if (!cropper) return;\r\n\r\n        cropper.getCroppedCanvas().toBlob(blob => {\r\n            const blobURL = URL.createObjectURL(blob);\r\n\r\n            this.setState({\r\n                blob,\r\n                blobURL\r\n            });\r\n\r\n            const { onChoose } = this.props;\r\n            if (!onChoose) return;\r\n\r\n            onChoose(blob, blobURL);\r\n        }, 'image/jpeg');\r\n\r\n        this.handleCancel();\r\n    };\r\n\r\n    handleAttach = () => {\r\n        this.attachPhotoRef.current.click();\r\n    };\r\n\r\n    handleAttachComplete = async () => {\r\n        const { files } = this.attachPhotoRef.current;\r\n        if (files.length === 0) return;\r\n\r\n        if (files.length === 1) {\r\n            const [ file, ...rest ] = Array.from(files);\r\n            if (!file) return;\r\n\r\n            const [width, height] = await readImageSize(file);\r\n\r\n            this.setState({\r\n                open: true,\r\n                file,\r\n                fileURL: URL.createObjectURL(file),\r\n                width,\r\n                height\r\n            });\r\n        }\r\n\r\n        this.attachPhotoRef.current.value = '';\r\n    };\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        const { open, width, height, fileURL, blobURL } = this.state;\r\n\r\n        const { width: fitWidth, height: fitHeight } = getFitSize({ width, height }, 400, true);\r\n\r\n        return (\r\n            <>\r\n                <div className='new-chat-photo'>\r\n                    { blobURL ? (\r\n                        <img className='new-chat-photo-image-button' alt='' src={blobURL} onClick={this.handleAttach}/>\r\n                        ) : (\r\n                        <div className='new-chat-photo-image-button new-chat-photo-button' onClick={this.handleAttach}>\r\n                            <AddImageIcon className='new-chat-photo-icon'/>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                <input\r\n                    ref={this.attachPhotoRef}\r\n                    className='inputbox-attach-button'\r\n                    type='file'\r\n                    multiple={false}\r\n                    accept='image/*'\r\n                    onChange={this.handleAttachComplete}\r\n                />\r\n                { open && (\r\n                    <Dialog\r\n                        transitionDuration={0}\r\n                        open={true}\r\n                        onClose={this.handleCancel}\r\n                        aria-labelledby='dialog-title'>\r\n                        <div className='header-master'>\r\n                            <IconButton className='header-left-button' onClick={this.handleCancel}>\r\n                                <CloseIcon/>\r\n                            </IconButton>\r\n                            <div className='header-status grow cursor-pointer'>\r\n                                <span className='header-status-content'>{t('DragToReposition')}</span>\r\n                            </div>\r\n                        </div>\r\n                        <DialogContent>\r\n                            <Cropper\r\n                                ref={this.cropperRef}\r\n                                src={fileURL}\r\n                                style={{ height: fitHeight, width: fitWidth, margin: '0 46px 62px' }}\r\n                                // Cropper.js options\r\n                                aspectRatio={1}\r\n                                viewMode={3}\r\n                                guides={false} />\r\n                        </DialogContent>\r\n                        <div className='new-chat-photo-done-button ' onClick={this.handleDone}>\r\n                            <CheckIcon/>\r\n                        </div>\r\n                    </Dialog>\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nNewChatPhoto.propTypes = {\r\n    defaultURL: PropTypes.string,\r\n    onChoose: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(NewChatPhoto);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { IconButton } from '@material-ui/core';\r\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\r\nimport NewChatPhoto from '../NewChatPhoto';\r\nimport { getSrc, loadChatContent } from '../../../Utils/File';\r\nimport ChatStore from '../../../Stores/ChatStore';\r\nimport FileStore from '../../../Stores/FileStore';\r\nimport UserStore from '../../../Stores/UserStore';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './EditProfile.css';\r\nimport { getBoldItalicEntities, getFormattedText } from '../../../Utils/Message';\r\n\r\nclass EditProfile extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.firstNameRef = React.createRef();\r\n        this.lastNameRef = React.createRef();\r\n        this.bioRef = React.createRef();\r\n        this.usernameRef = React.createRef();\r\n\r\n        const user = UserStore.get(UserStore.getMyId());\r\n        const userFullInfo = UserStore.getFullInfo(UserStore.getMyId());\r\n\r\n        this.state = {\r\n            firstName: user ? user.first_name : '',\r\n            lastName: user ? user.last_name : '',\r\n            bio: userFullInfo ? userFullInfo.bio : '',\r\n            username: user ? user.username : '',\r\n            usernameCheck: null\r\n        };\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.setName();\r\n        this.setBio();\r\n        this.setUsername();\r\n    }\r\n\r\n    setUsername() {\r\n        const { username, usernameCheck } = this.state;\r\n        let newUsername = this.usernameRef.current.value;\r\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\r\n            newUsername = newUsername.substr(1);\r\n        }\r\n\r\n        if (username === newUsername) return;\r\n        if (!usernameCheck) return;\r\n        if (usernameCheck['@type'] !== 'checkChatUsernameResultOk') return;\r\n\r\n        TdLibController.send({\r\n            '@type': 'setUsername',\r\n            username: newUsername\r\n        });\r\n    }\r\n\r\n    setName() {\r\n        const { firstName, lastName } = this.state;\r\n        const newFirstName = this.firstNameRef.current.value;\r\n        const newLastName = this.lastNameRef.current.value;\r\n\r\n        if (newFirstName === firstName && newLastName === lastName) {\r\n            return;\r\n        }\r\n\r\n        TdLibController.send({\r\n            '@type': 'setName',\r\n            first_name: newFirstName,\r\n            last_name: newLastName\r\n        });\r\n    }\r\n\r\n    setBio() {\r\n        const { bio } = this.state;\r\n        const newBio = this.bioRef.current.value;\r\n        if (newBio === bio) {\r\n            return;\r\n        }\r\n\r\n        TdLibController.send({\r\n            '@type': 'setBio',\r\n            bio: newBio\r\n        });\r\n    }\r\n\r\n    handleUsernameChange = async () => {\r\n        const { chatId } = this.props;\r\n        const { username } = this.state;\r\n        let newUsername = this.usernameRef.current.value;\r\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\r\n            newUsername = newUsername.substr(1);\r\n        }\r\n        if (username === newUsername || newUsername === '') {\r\n            this.setState({\r\n                usernameCheck: null\r\n            });\r\n\r\n            // console.log('[un] checkChatUsername', 'null');\r\n        } else {\r\n            // console.log('[un] checkChatUsername start', chatId, newUsername);\r\n            const result = await TdLibController.send({\r\n                '@type': 'checkChatUsername',\r\n                chat_id: chatId,\r\n                username: newUsername\r\n            });\r\n\r\n            // console.log('[un] checkChatUsername end', chatId, newUsername, result);\r\n\r\n            let newUsername2 = this.usernameRef.current.value;\r\n            if (newUsername2.startsWith('@') && newUsername2.length > 1) {\r\n                newUsername2 = newUsername2.substr(1);\r\n            }\r\n            if (newUsername2 === newUsername) {\r\n                this.setState({\r\n                    usernameCheck: result\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    handleChoosePhoto = async data => {\r\n        const { chatId } = this.props;\r\n\r\n        await TdLibController.send({\r\n            '@type': 'setProfilePhoto',\r\n            photo: { '@type': 'inputFileBlob', name: 'profile_photo.jpg', data }\r\n        });\r\n\r\n        const store = FileStore.getStore();\r\n        loadChatContent(store, chatId, true);\r\n    };\r\n\r\n    render() {\r\n        let { chatId, t, onClose } = this.props;\r\n        const { firstName, lastName, bio, username, usernameCheck } = this.state;\r\n\r\n        let hasError = false;\r\n        let usernameLabel = t('Username');\r\n        if (usernameCheck) {\r\n            switch (usernameCheck['@type']) {\r\n                case 'checkChatUsernameResultOk': {\r\n                    hasError = false;\r\n                    usernameLabel = 'Username is available';\r\n                    break;\r\n                }\r\n                case 'checkChatUsernameResultPublicChatsTooMuch':\r\n                case 'checkChatUsernameResultPublicGroupsUnavailable':\r\n                case 'checkChatUsernameResultUsernameInvalid': {\r\n                    hasError = true;\r\n                    usernameLabel = 'Invalid username';\r\n                    break;\r\n                }\r\n                case 'checkChatUsernameResultUsernameOccupied': {\r\n                    hasError = true;\r\n                    usernameLabel = 'Username is already taken';\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return null;\r\n\r\n        const { photo } = chat;\r\n\r\n        const src = getSrc(photo ? photo.small : null);\r\n        const entities = [];\r\n        const text = getBoldItalicEntities(t('UsernameHelp'), entities);\r\n        const formattedText = getFormattedText({ '@type': 'formattedText', text, entities });\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={onClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{t('EditProfile')}</span>\r\n                    </div>\r\n                </div>\r\n                <div className='sidebar-page-content'>\r\n                    <NewChatPhoto defaultURL={src} onChoose={this.handleChoosePhoto}/>\r\n                    <div className='edit-profile-name'>\r\n                        <TextField\r\n                            inputRef={this.firstNameRef}\r\n                            className='edit-profile-input'\r\n                            variant='outlined'\r\n                            fullWidth\r\n                            label={t('FirstName')}\r\n                            defaultValue={firstName}\r\n                        />\r\n                        <TextField\r\n                            inputRef={this.lastNameRef}\r\n                            className='edit-profile-input'\r\n                            variant='outlined'\r\n                            fullWidth\r\n                            label={t('LastName')}\r\n                            defaultValue={lastName}\r\n                        />\r\n                        <TextField\r\n                            inputRef={this.bioRef}\r\n                            className='edit-profile-input'\r\n                            variant='outlined'\r\n                            fullWidth\r\n                            label={t('Bio')}\r\n                            defaultValue={bio}\r\n                        />\r\n                        <div className='edit-profile-hint'>{t('BioAbout')}</div>\r\n                    </div>\r\n                    <div className='sidebar-page-section-divider' />\r\n                    <div className='edit-profile-username'>\r\n                        <TextField\r\n                            inputRef={this.usernameRef}\r\n                            error={hasError}\r\n                            className='edit-profile-input'\r\n                            variant='outlined'\r\n                            fullWidth\r\n                            label={usernameLabel}\r\n                            defaultValue={username}\r\n                            onChange={this.handleUsernameChange}\r\n                        />\r\n                        <div className='edit-profile-hint'>\r\n                            {formattedText}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nEditProfile.propTypes = {\r\n    chatId: PropTypes.number\r\n};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTranslation(),\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(EditProfile);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path fill='currentColor' fillRule='nonzero' d='M11.8833789,4.00672773 L12,4 C12.5128358,4 12.9355072,4.38604019 12.9932723,4.88337887 L13,5 L13,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L13,13 L13,19 C13,19.5128358 12.6139598,19.9355072 12.1166211,19.9932723 L12,20 C11.4871642,20 11.0644928,19.6139598 11.0067277,19.1166211 L11,19 L11,13 L5,13 C4.48716416,13 4.06449284,12.6139598 4.00672773,12.1166211 L4,12 C4,11.4871642 4.38604019,11.0644928 4.88337887,11.0067277 L5,11 L11,11 L11,5 C11,4.48716416 11.3860402,4.06449284 11.8833789,4.00672773 L12,4 L11.8833789,4.00672773 Z'/>,\r\n    'Add'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path fillRule='nonzero' d='M18,18 C23.8608627,18 28.072977,19.5546034 30.5027576,22.7682432 C31.1498637,23.6240893 31.5,24.6677318 31.5,25.7406839 L31.5,27.4285714 C31.5,29.6771593 29.6771593,31.5 27.4285714,31.5 L8.57142857,31.5 C6.32284066,31.5 4.5,29.6771593 4.5,27.4285714 L4.5,25.740741 C4.5,24.6677985 4.85010028,23.6241745 5.49717185,22.7683365 C7.92695186,19.5546298 12.1390883,18 18,18 Z M18,21 C12.9925527,21 9.66714119,22.2273543 7.89018414,24.5776159 C7.63699525,24.9124919 7.5,25.3208649 7.5,25.740741 L7.5,27.4285714 C7.5,28.0203051 7.97969491,28.5 8.57142857,28.5 L27.4285714,28.5 C28.0203051,28.5 28.5,28.0203051 28.5,27.4285714 L28.5,25.7406839 C28.5,25.3208358 28.3629925,24.9124609 28.1097736,24.5775601 C26.3328071,22.2273354 23.0074077,21 18,21 Z M18,3 C21.3137085,3 24,5.6862915 24,9 C24,12.3137085 21.3137085,15 18,15 C14.6862915,15 12,12.3137085 12,9 C12,5.6862915 14.6862915,3 18,3 Z M18,6 C16.3431458,6 15,7.34314575 15,9 C15,10.6568542 16.3431458,12 18,12 C19.6568542,12 21,10.6568542 21,9 C21,7.34314575 19.6568542,6 18,6 Z'/>,\r\n    'NewPrivate'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path fillRule='nonzero' d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.6742675,16.1038947 16.9426297,16.7664653 16.9917833,17.4602417 L17,17.6925226 L17,18.5 C17,19.8254834 15.9684641,20.9100387 14.6643757,20.9946823 L14.5,21 L3.5,21 C2.1745166,21 1.08996133,19.9684641 1.00531768,18.6643757 L1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.14055953,17.0554062 3.03840077,17.2920167 3.00889582,17.5415166 L3,17.6925212 L3,18.5 C3,18.7454599 3.17687516,18.9496084 3.41012437,18.9919443 L3.5,19 L14.5,19 C14.7454599,19 14.9496084,18.8231248 14.9919443,18.5898756 L15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M19,14 C19.5522847,14 20,14.4477153 20,15 C20,15.5522847 19.5522847,16 19,16 C18.4477153,16 18,15.5522847 18,15 C18,14.4477153 18.4477153,14 19,14 Z M19,3 C21.209139,3 23,4.790861 23,7 C23,8.80747736 21.8011592,10.3349504 20.1552529,10.8306439 L20,10.873 L20,11.5 C20,12.0128358 19.6139598,12.4355072 19.1166211,12.4932723 L19,12.5 C18.4871642,12.5 18.0644928,12.1139598 18.0067277,11.6166211 L18,11.5 L18,10 C18,9.48716416 18.3860402,9.06449284 18.8833789,9.00672773 L19,9 C20.1045695,9 21,8.1045695 21,7 C21,5.8954305 20.1045695,5 19,5 C17.8954305,5 17,5.8954305 17,7 C17,7.55228475 16.5522847,8 16,8 C15.4477153,8 15,7.55228475 15,7 C15,4.790861 16.790861,3 19,3 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z'/>,\r\n    'NonContacts'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path fillRule='nonzero' d='M12,19.5 C16.9843673,19.5 20.6295366,20.7505675 22.8335731,23.3549038 C23.5867154,24.2448351 24,25.3729365 24,26.538784 L24,27.75 C24,29.8210678 22.3210678,31.5 20.25,31.5 L3.75,31.5 C1.67893219,31.5 0,29.8210678 0,27.75 L0,26.5387806 C0,25.3729314 0.413286907,24.2448288 1.16643175,23.354898 C3.37046736,20.7505662 7.01563535,19.5 12,19.5 Z M26.9272668,21.0503629 L27.1024807,21.0520931 C30.3320395,21.2704178 32.8220855,22.1814787 34.5196345,23.8437596 C35.3875212,24.6935741 35.9082005,25.8309338 35.9889534,27.0352541 L36,27.3651995 L36,28.125 C36,29.911296 34.6122576,31.3734674 32.8560732,31.4922138 L32.625,31.5 L28.5,31.5 C27.6715729,31.5 27,30.8284271 27,30 C27,29.2307462 27.5790603,28.5967393 28.3250683,28.5100916 L28.5,28.5 L32.625,28.5 C32.8025201,28.5 32.9512302,28.3766499 32.990096,28.2109841 L33,28.125 L33,27.3651995 C33,26.8466882 32.7912139,26.3500306 32.4207231,25.9872546 C31.2961739,24.8860689 29.4736312,24.2192349 26.9001365,24.0452615 C26.0735959,23.9893857 25.4488487,23.2740458 25.5047245,22.4475052 C25.5566091,21.6800032 26.1771133,21.0864965 26.9272668,21.0503629 L26.9272668,21.0503629 Z M12,22.5 C7.81695054,22.5 5.00307249,23.4653713 3.4564301,25.2929144 C3.16172113,25.6411484 3,26.0825803 3,26.5387817 L3,27.75 C3,28.1642136 3.33578644,28.5 3.75,28.5 L20.25,28.5 C20.6642136,28.5 21,28.1642136 21,27.75 L21,26.538784 C21,26.0825825 20.8382796,25.6411507 20.5435722,25.2929172 C18.9969303,23.4653723 16.1830516,22.5 12,22.5 Z M25.5,7.5 C28.3994949,7.5 30.75,9.85050506 30.75,12.75 C30.75,15.6494949 28.3994949,18 25.5,18 C22.6005051,18 20.25,15.6494949 20.25,12.75 C20.25,9.85050506 22.6005051,7.5 25.5,7.5 Z M12,4.5 C15.3137085,4.5 18,7.1862915 18,10.5 C18,13.8137085 15.3137085,16.5 12,16.5 C8.6862915,16.5 6,13.8137085 6,10.5 C6,7.1862915 8.6862915,4.5 12,4.5 Z M25.5,10.5 C24.2573593,10.5 23.25,11.5073593 23.25,12.75 C23.25,13.9926407 24.2573593,15 25.5,15 C26.7426407,15 27.75,13.9926407 27.75,12.75 C27.75,11.5073593 26.7426407,10.5 25.5,10.5 Z M12,7.5 C10.3431458,7.5 9,8.84314575 9,10.5 C9,12.1568542 10.3431458,13.5 12,13.5 C13.6568542,13.5 15,12.1568542 15,10.5 C15,8.84314575 13.6568542,7.5 12,7.5 Z'/>,\r\n    'NewGroup'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path fillRule='nonzero' d='M27.75,2.51771235 C29.8210678,2.51771235 31.5,4.19664454 31.5,6.26771235 L31.5,29.7322876 C31.5,30.6020604 31.1976592,31.444786 30.6447384,32.1161898 C29.3281456,33.7149097 26.9648177,33.9436189 25.3660978,32.627026 L18,26.5597124 L18,29.25 C18,31.6465213 16.1266201,33.6054913 13.7644092,33.742361 L13.5,33.75 C11.1034787,33.75 9.14450868,31.8766201 9.00763904,29.5144092 L9,29.25 L8.99971804,25.3499156 C5.57649804,24.6549011 3,21.6283372 3,18 C3,13.8578644 6.35786438,10.5 10.5,10.5 L16.7118519,10.5 L25.3660978,3.37297397 C26.0375017,2.82005314 26.8802273,2.51771235 27.75,2.51771235 Z M12,25.4992124 L12,29.25 C12,30.0784271 12.6715729,30.75 13.5,30.75 C14.2692538,30.75 14.9032607,30.1709397 14.9899084,29.4249317 L15,29.25 L15,25.4992124 L12,25.4992124 L12,29.25 L12,25.4992124 Z M27.75,5.51771235 C27.5760455,5.51771235 27.4075003,5.57818051 27.2732196,5.68876467 L18.6189737,12.8157907 C18.0818506,13.2581274 17.4076701,13.5 16.7118519,13.5 L10.5,13.5 C8.01471863,13.5 6,15.5147186 6,18 C6,20.4852814 8.01471863,22.5 10.5,22.5 L16.7118519,22.5 C17.4076701,22.5 18.0818506,22.7418726 18.6189737,23.1842093 L27.2732196,30.3112353 C27.5929635,30.5745539 28.0656291,30.5288121 28.3289477,30.2090681 C28.4395318,30.0747873 28.5,29.9062422 28.5,29.7322876 L28.5,6.26771235 C28.5,5.85349879 28.1642136,5.51771235 27.75,5.51771235 Z'/>,\r\n    'NewChannel'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path fillRule='nonzero' d='M17,3 C19.1421954,3 20.8910789,4.68396847 20.9951047,6.80035966 L21,7 L21,10.5 C21,11.0522847 20.5522847,11.5 20,11.5 C19.4871642,11.5 19.0644928,11.1139598 19.0067277,10.6166211 L19,10.5 L19,7 C19,5.9456382 18.1841222,5.08183488 17.1492623,5.00548574 L17,5 L7,5 C5.9456382,5 5.08183488,5.81587779 5.00548574,6.85073766 L5,7 L5,19.585 L7.20502525,17.3807612 C7.41399436,17.1717921 7.68678103,17.0413128 7.97757724,17.0082977 L8.12426407,17 L12.5,17 C13.0522847,17 13.5,17.4477153 13.5,18 C13.5,18.5128358 13.1139598,18.9355072 12.6166211,18.9932723 L12.5,19 L8.413,19 L4.87781746,22.5363961 C4.47892479,22.9352888 3.84989486,22.9637811 3.41812544,22.6218731 L3.32218254,22.5363961 C3.14536253,22.3595761 3.034957,22.1287566 3.00702113,21.8826983 L3,21.7585786 L3,7 C3,4.85780461 4.68396847,3.10892112 6.80035966,3.00489531 L7,3 L17,3 Z M22.7071068,12.2928932 C23.0675907,12.6533772 23.0953203,13.2206082 22.7902954,13.6128994 L22.7071068,13.7071068 L17.7071068,18.7071068 C17.3466228,19.0675907 16.7793918,19.0953203 16.3871006,18.7902954 L16.2928932,18.7071068 L13.7928932,16.2071068 C13.4023689,15.8165825 13.4023689,15.1834175 13.7928932,14.7928932 C14.1533772,14.4324093 14.7206082,14.4046797 15.1128994,14.7097046 L15.2071068,14.7928932 L17,16.585 L21.2928932,12.2928932 C21.6834175,11.9023689 22.3165825,11.9023689 22.7071068,12.2928932 Z'/>,\r\n    'ReadChats'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path fillRule='nonzero' d='M12,1 C12.5128358,1 12.9355072,1.38604019 12.9932723,1.88337887 L13,2 L13,3 L13.5,3 C16.7383969,3 19.3775718,5.56557489 19.4958615,8.77506174 L19.5,9 L19.5,11 L20,11 L20.1762728,11.0050927 C21.6927538,11.0929596 22.9070404,12.3072462 22.9949073,13.8237272 L23,14 L23,17 L22.9932723,17.1166211 C22.9355072,17.6139598 22.5128358,18 22,18 C21.4871642,18 21.0644928,17.6139598 21.0067277,17.1166211 L21,17 L21,14 L20.9932723,13.8833789 C20.9399506,13.424297 20.575703,13.0600494 20.1166211,13.0067277 L20,13 L19.5,13 L19.5,18 C19.5,20.1421954 17.8160315,21.8910789 15.6996403,21.9951047 L15.5,22 L8.5,22 C6.35780461,22 4.60892112,20.3160315 4.50489531,18.1996403 L4.5,18 L4.5,13 L4,13 C3.48716416,13 3.06449284,13.3860402 3.00672773,13.8833789 L3,14 L3,17 C3,17.5522847 2.55228475,18 2,18 C1.48716416,18 1.06449284,17.6139598 1.00672773,17.1166211 L1,17 L1,14 C1,12.4023191 2.24891996,11.0963391 3.82372721,11.0050927 L4,11 L4.5,11 L4.5,9 C4.5,5.76160306 7.06557489,3.12242824 10.2750617,3.00413847 L10.5,3 L11,3 L11,2 C11,1.44771525 11.4477153,1 12,1 Z M16.6762728,12.9949073 L16.5,13 L7.5,13 C7.14939781,13 6.81284272,12.9398572 6.5,12.8293257 L6.5,18 C6.5,19.0543618 7.31587779,19.9181651 8.35073766,19.9945143 L8.5,20 L15.5,20 C16.5543618,20 17.4181651,19.1841222 17.4945143,18.1492623 L17.5,18 L17.5009007,12.8289758 C17.2406443,12.9210572 16.9638938,12.9782422 16.6762728,12.9949073 Z M13.5,5 L10.5,5 C8.35780461,5 6.60892112,6.68396847 6.50489531,8.80035966 L6.5,9 L6.5,10 C6.5,10.5128358 6.88604019,10.9355072 7.38337887,10.9932723 L7.5,11 L16.5,11 C17.0128358,11 17.4355072,10.6139598 17.4932723,10.1166211 L17.5,10 L17.5,9 C17.5,6.85780461 15.8160315,5.10892112 13.6996403,5.00489531 L13.5,5 Z M9.5,7.5 C10.0522847,7.5 10.5,7.94771525 10.5,8.5 C10.5,9.05228475 10.0522847,9.5 9.5,9.5 C8.94771525,9.5 8.5,9.05228475 8.5,8.5 C8.5,7.94771525 8.94771525,7.5 9.5,7.5 Z M14.5,7.5 C15.0522847,7.5 15.5,7.94771525 15.5,8.5 C15.5,9.05228475 15.0522847,9.5 14.5,9.5 C13.9477153,9.5 13.5,9.05228475 13.5,8.5 C13.5,7.94771525 13.9477153,7.5 14.5,7.5 Z'/>,\r\n    'Bots'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M4.70710678,12.2928932 C4.31658249,11.9023689 3.68341751,11.9023689 3.29289322,12.2928932 C2.90236893,12.6834175 2.90236893,13.3165825 3.29289322,13.7071068 L8.29289322,18.7071068 C8.68341751,19.0976311 9.31658249,19.0976311 9.70710678,18.7071068 L20.7071068,7.70710678 C21.0976311,7.31658249 21.0976311,6.68341751 20.7071068,6.29289322 C20.3165825,5.90236893 19.6834175,5.90236893 19.2928932,6.29289322 L9,16.5857864 L4.70710678,12.2928932 Z' />,\r\n    'Done'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport ChatTile from './ChatTile';\r\nimport DeleteIcon from '../../Assets/Icons/Delete';\r\nimport { getChatTitle, getChatType } from '../../Utils/Chat';\r\nimport './FilterChat.css';\r\n\r\nclass FilterChat extends React.Component {\r\n\r\n    state = {\r\n        contextMenu: false,\r\n        left: 0,\r\n        top: 0,\r\n        checked: false\r\n    };\r\n\r\n    handleOpenContextMenu = event => {\r\n        const { onDelete } = this.props;\r\n        if (!onDelete) return;\r\n\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({\r\n            contextMenu: true,\r\n            left: event.clientX,\r\n            top: event.clientY\r\n        });\r\n    };\r\n\r\n    handleCloseContextMenu = () => {\r\n        this.setState({\r\n            contextMenu: false,\r\n            left: 0,\r\n            top: 0\r\n        });\r\n    };\r\n\r\n    handleDelete = () => {\r\n        this.handleCloseContextMenu();\r\n\r\n        const { chatId, onDelete } = this.props;\r\n\r\n        onDelete && onDelete(chatId);\r\n    };\r\n\r\n    render() {\r\n        const { chatId, t, type, checked, onClick } = this.props;\r\n        const { contextMenu, left, top } = this.state;\r\n\r\n        const title = getChatTitle(chatId, true, t);\r\n\r\n        return (\r\n            <>\r\n                <ListItem className='settings-list-item2' role={undefined} button onClick={onClick} onContextMenu={this.handleOpenContextMenu}>\r\n                    <div className='filter-chat-tile'>\r\n                        <ChatTile chatId={chatId} small={true} showSavedMessages={true}/>\r\n                    </div>\r\n                    <div className='filter-chat-content'>\r\n                        <div className='filter-chat-title'>\r\n                            {title}\r\n                        </div>\r\n                        { type && (\r\n                            <div className='filter-chat-subtitle'>\r\n                                {getChatType(chatId, t)}\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                    { checked !== undefined && (\r\n                        <Radio className='filter-chat-checkbox' color='primary' checked={checked} />\r\n                    )}\r\n                </ListItem>\r\n                <Popover\r\n                    open={contextMenu}\r\n                    onClose={this.handleCloseContextMenu}\r\n                    anchorReference='anchorPosition'\r\n                    anchorPosition={{ top, left }}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'left'\r\n                    }}\r\n                    onMouseDown={e => e.stopPropagation()}>\r\n                    <MenuList onClick={e => e.stopPropagation()}>\r\n                        <MenuItem onClick={this.handleDelete}>\r\n                            <ListItemIcon>\r\n                                <DeleteIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('Delete')} />\r\n                        </MenuItem>\r\n                    </MenuList>\r\n                </Popover>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nFilterChat.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    type: PropTypes.bool,\r\n    onDelete: PropTypes.func,\r\n    checked: PropTypes.bool,\r\n    onChange: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(FilterChat);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport classNames from 'classnames';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport DeleteIcon from '../../Assets/Icons/Delete';\r\nimport './FilterText.css';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nclass FilterText extends React.Component {\r\n\r\n    state = {\r\n        contextMenu: false,\r\n        left: 0,\r\n        top: 0\r\n    };\r\n\r\n    handleOpenContextMenu = event => {\r\n        const { onDelete } = this.props;\r\n        if (!onDelete) return;\r\n\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({\r\n            contextMenu: true,\r\n            left: event.clientX,\r\n            top: event.clientY\r\n        });\r\n    };\r\n\r\n    handleCloseContextMenu = () => {\r\n        this.setState({\r\n            contextMenu: false,\r\n            left: 0,\r\n            top: 0\r\n        });\r\n    };\r\n\r\n    handleDelete = () => {\r\n        this.handleCloseContextMenu();\r\n\r\n        const { onDelete } = this.props;\r\n\r\n        onDelete && onDelete();\r\n    };\r\n\r\n    render() {\r\n        const { t, className, icon, text, checked, onClick } = this.props;\r\n        const { contextMenu, left, top } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <ListItem className={classNames(className, 'settings-list-item2', 'filter-chat-text')} role={undefined} button onMouseDown={onClick} onContextMenu={this.handleOpenContextMenu}>\r\n                    <div className='filter-chat-tile'>\r\n                        {icon}\r\n                    </div>\r\n                    <div className='filter-chat-content'>\r\n                        {text}\r\n                    </div>\r\n                    { checked !== undefined && (\r\n                        <Radio className='filter-chat-checkbox' color='primary' checked={checked} />\r\n                    )}\r\n                </ListItem>\r\n                <Popover\r\n                    open={contextMenu}\r\n                    onClose={this.handleCloseContextMenu}\r\n                    anchorReference='anchorPosition'\r\n                    anchorPosition={{ top, left }}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'left'\r\n                    }}\r\n                    onMouseDown={e => e.stopPropagation()}>\r\n                    <MenuList onClick={e => e.stopPropagation()}>\r\n                        <MenuItem onClick={this.handleDelete}>\r\n                            <ListItemIcon>\r\n                                <DeleteIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('Delete')} />\r\n                        </MenuItem>\r\n                    </MenuList>\r\n                </Popover>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nFilterText.propTypes = {\r\n    icon: PropTypes.object,\r\n    text: PropTypes.string,\r\n    checked: PropTypes.bool,\r\n    onClick: PropTypes.func,\r\n    onChange: PropTypes.func,\r\n    onDelete: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(FilterText);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport './Chip.css';\r\n\r\nclass Chip extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.divRef = React.createRef();\r\n    }\r\n\r\n    getOffset() {\r\n        const {\r\n            offsetLeft: left,\r\n            offsetTop: top,\r\n            offsetWidth: width,\r\n            offsetHeight: height\r\n        } = this.divRef.current;\r\n\r\n        return { left, top, width, height }\r\n    }\r\n\r\n    setStyleCSSText(text) {\r\n        const div = this.divRef.current;\r\n        if (!div) return;\r\n\r\n        div.style.cssText = text;\r\n    }\r\n\r\n    render() {\r\n        const { icon, text, selected, onClick } = this.props;\r\n\r\n        return (\r\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\r\n                <div className='chip-icon'>\r\n                    {icon}\r\n                </div>\r\n                <div className='chip-delete'>\r\n                    <CloseIcon className='chip-delete-icon'/>\r\n                </div>\r\n                <div className='chip-text'>{text}</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nChip.propTypes = {\r\n    icon: PropTypes.object,\r\n    text: PropTypes.string,\r\n    selected: PropTypes.bool,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default Chip;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport ChatTile from './ChatTile';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport { getChatShortTitle } from '../../Utils/Chat';\r\nimport './ChatChip.css';\r\n\r\nclass ChatChip extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.divRef = React.createRef();\r\n    }\r\n\r\n    getOffset() {\r\n        const {\r\n            offsetLeft: left,\r\n            offsetTop: top,\r\n            offsetWidth: width,\r\n            offsetHeight: height\r\n        } = this.divRef.current;\r\n\r\n        return { left, top, width, height }\r\n    }\r\n\r\n    setStyleCSSText(text) {\r\n        const div = this.divRef.current;\r\n        if (!div) return;\r\n\r\n        div.style.cssText = text;\r\n    }\r\n\r\n    render() {\r\n        const { chatId, selected, onClick } = this.props;\r\n\r\n        return (\r\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\r\n                <ChatTile chatId={chatId} small={true}/>\r\n                <div className='chip-delete'>\r\n                    <CloseIcon className='chip-delete-icon'/>\r\n                </div>\r\n                <div className='chip-text'>{getChatShortTitle(chatId)}</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nChatChip.propTypes = {\r\n    chatId: PropTypes.number,\r\n    selected: PropTypes.bool,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default ChatChip;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\r\nimport ContactsIcon from '../../../Assets/Icons/NewPrivate';\r\nimport FilterChat from '../../Tile/FilterChat';\r\nimport FilterText from '../../Tile/FilterText';\r\nimport NonContactsIcon from '../../../Assets/Icons/NonContacts';\r\nimport GroupsIcon from '../../../Assets/Icons/NewGroup';\r\nimport ChannelsIcon from '../../../Assets/Icons/NewChannel';\r\nimport BotsIcon from '../../../Assets/Icons/Bots';\r\nimport SectionHeader from '../SectionHeader';\r\nimport SearchInput from '../Search/SearchInput';\r\nimport MutedIcon from '../../../Assets/Icons/Mute';\r\nimport ReadIcon from '../../../Assets/Icons/ReadChats';\r\nimport ArchivedIcon from '../../../Assets/Icons/Archive';\r\nimport Chip from '../../Tile/Chip';\r\nimport ChatChip from '../../Tile/ChatChip';\r\nimport { loadChatsContent } from '../../../Utils/File';\r\nimport FileStore from '../../../Stores/FileStore';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './EditFilterChats.css';\r\n\r\nclass EditFilterChats extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.searchInputRef = React.createRef();\r\n        this.wrapPanelRef = React.createRef();\r\n        this.itemsRef = new Map();\r\n\r\n        this.state = {\r\n            focusedItem: null,\r\n            searchItems: null,\r\n            error: false\r\n        }\r\n    }\r\n\r\n    handleChatChange = (chatId, search) => {\r\n        const { mode } = this.props;\r\n\r\n        if (search) {\r\n            const input = this.searchInputRef.current;\r\n            input.focus();\r\n            input.innerText = '';\r\n            this.handleSearch('');\r\n        }\r\n\r\n        this.handleChange(mode === 'include' ? 'included_chat_ids' : 'excluded_chat_ids', chatId);\r\n    };\r\n\r\n    getSnapshotBeforeUpdate(prevProps, prevState) {\r\n        const { filter, mode } = this.props;\r\n        const { filter : prevFilter } = prevProps;\r\n\r\n        if (prevProps.filter === filter) {\r\n            return null;\r\n        }\r\n\r\n        const include = mode === 'include';\r\n        const prevItems = include ? prevProps.filter.included_chat_ids : prevProps.filter.excluded_chat_ids;\r\n        const items = include ? filter.included_chat_ids : filter.excluded_chat_ids;\r\n\r\n        const isDeleting =\r\n            prevItems.length > items.length\r\n            || prevFilter.include_contacts && !filter.include_contacts\r\n            || prevFilter.include_non_contacts && !filter.include_non_contacts\r\n            || prevFilter.include_groups && !filter.include_groups\r\n            || prevFilter.include_channels && !filter.include_channels\r\n            || prevFilter.include_bots && !filter.include_bots\r\n            || prevFilter.exclude_read && !filter.exclude_read\r\n            || prevFilter.exclude_muted && !filter.exclude_muted\r\n            || prevFilter.exclude_archived && !filter.exclude_archived;\r\n\r\n        const wrapPanel = this.wrapPanelRef.current;\r\n        const prevHeight = wrapPanel.scrollHeight;\r\n        const prevOffsetHeight = wrapPanel.offsetHeight;\r\n\r\n        const prevCSSText = wrapPanel.style.cssText;\r\n        const prevScrollTop = wrapPanel.scrollTop;\r\n        if (isDeleting) {\r\n            wrapPanel.style.cssText = null;\r\n        }\r\n\r\n        const prevMap = new Map();\r\n        for (let key of this.itemsRef.keys()) {\r\n            const el = this.itemsRef.get(key);\r\n            if (el) {\r\n                const offset = el.getOffset();\r\n                prevMap.set(key, offset);\r\n            }\r\n        }\r\n\r\n        return { items: prevMap, panel: { isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText } };\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.filter === this.props.filter) {\r\n            return;\r\n        }\r\n\r\n        this.animatePanel(snapshot.panel);\r\n        // this.animateItems(snapshot.items);\r\n    }\r\n\r\n    animatePanel(snapshot) {\r\n        if (!snapshot) return;\r\n\r\n        const { isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText } = snapshot;\r\n\r\n        const wrapPanel = this.wrapPanelRef.current;\r\n\r\n        const currentHeight = wrapPanel.scrollHeight;\r\n        const currentOffsetHeight = wrapPanel.offsetHeight;\r\n\r\n        const expanded = currentHeight > prevHeight;\r\n        const collapsed = currentHeight < prevHeight;\r\n\r\n        const maxHeight = 123;\r\n        if (expanded) {\r\n            if (prevHeight < maxHeight) {\r\n                wrapPanel.style.cssText = `max-height: ${Math.min(prevHeight, maxHeight)}px;`;\r\n                requestAnimationFrame(() => {\r\n                    wrapPanel.style.cssText = `max-height: ${Math.min(currentHeight, maxHeight)}px;`;\r\n                    setTimeout(() => {\r\n                        this.searchInputRef.current.scrollIntoView({ behavior: 'auto' });\r\n                    }, 250);\r\n                });\r\n            } else {\r\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\r\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\r\n            }\r\n        } else if (collapsed) {\r\n            if (currentHeight < maxHeight) {\r\n                wrapPanel.style.cssText = `min-height: ${Math.min(prevOffsetHeight, maxHeight)}px;`;\r\n                requestAnimationFrame(() => {\r\n                    wrapPanel.style.cssText = `min-height: ${Math.min(currentHeight, maxHeight)}px;`;\r\n                });\r\n            } else {\r\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\r\n                wrapPanel.scrollTop = prevScrollTop;\r\n            }\r\n        } else {\r\n            if (isDeleting) {\r\n                wrapPanel.style.cssText = prevCSSText;\r\n                wrapPanel.scrollTop = prevScrollTop;\r\n            } else {\r\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\r\n            }\r\n        }\r\n    }\r\n\r\n    animateItems(prevOffsets) {\r\n        if (!prevOffsets) return;\r\n\r\n        const doubleTransform = new Map();\r\n        for (let key of this.itemsRef.keys()) {\r\n            const el = this.itemsRef.get(key);\r\n            if (el) {\r\n                const currentOffset = el.getOffset();\r\n                const prevOffset = prevOffsets.has(key) ? prevOffsets.get(key) : null;\r\n                if (prevOffset) {\r\n                    if (prevOffset.left < currentOffset.left) {\r\n                        doubleTransform.set(el, { prevOffset, currentOffset });\r\n                    }\r\n\r\n                    const transform = `transform: translate(${prevOffset.left - currentOffset.left}px, ${prevOffset.top - currentOffset.top}px)`;\r\n                    el.setStyleCSSText(transform);\r\n                }\r\n            }\r\n        }\r\n\r\n        requestAnimationFrame(() => {\r\n            for (let key of this.itemsRef.keys()) {\r\n                const el = this.itemsRef.get(key);\r\n                if (el) {\r\n                    let transition = `transition: transform 0.25s ease`;\r\n                    if (doubleTransform.has(el)) {\r\n                        const { prevOffset, currentOffset } = doubleTransform.get(el);\r\n                        transition = `transform: translate(${prevOffset.left - currentOffset.left - prevOffset.width}px, ${prevOffset.top - currentOffset.top}px);`\r\n                            + 'transition: transform 0.1s ease;'\r\n                    }\r\n\r\n                    el.setStyleCSSText(transition);\r\n                }\r\n            }\r\n\r\n            if (!doubleTransform.size) return;\r\n\r\n            setTimeout(() => {\r\n                for (let el of doubleTransform.keys()) {\r\n                    const { currentOffset } = doubleTransform.get(el);\r\n                    const transition = `transform: translate(${currentOffset.width}px, 0);`\r\n                        + 'transition: transform 0s ease;';\r\n\r\n                    el.setStyleCSSText(transition);\r\n                }\r\n\r\n                requestAnimationFrame(() => {\r\n                    for (let el of doubleTransform.keys()) {\r\n                        const transition = 'transition: transform 0.15s ease';\r\n\r\n                        el.setStyleCSSText(transition);\r\n                    }\r\n                });\r\n\r\n            }, 100);\r\n        });\r\n    }\r\n\r\n    handleBackspace = () => {\r\n        const { filter, mode } = this.props;\r\n        const { focusedItem } = this.state;\r\n        if (!filter) return;\r\n\r\n        if (focusedItem) {\r\n            switch (focusedItem) {\r\n                case 'include_contacts':\r\n                case 'include_non_contacts':\r\n                case 'include_bots':\r\n                case 'include_groups':\r\n                case 'include_channels':\r\n                case 'exclude_muted':\r\n                case 'exclude_read':\r\n                case 'exclude_archived': {\r\n                    this.handleChange(focusedItem);\r\n\r\n                    this.setState({\r\n                        focusedItem: null\r\n                    });\r\n                    break;\r\n                }\r\n                default: {\r\n                    this.handleChatChange(focusedItem);\r\n\r\n                    this.setState({\r\n                        focusedItem: null\r\n                    });\r\n                    break;\r\n                }\r\n            }\r\n            return;\r\n        }\r\n\r\n        const include = mode === 'include';\r\n        if (include) {\r\n            const {\r\n                include_contacts,\r\n                include_non_contacts,\r\n                include_bots,\r\n                include_groups,\r\n                include_channels,\r\n                included_chat_ids\r\n            } = filter;\r\n\r\n            if (included_chat_ids.length > 0) {\r\n                const lastItem = included_chat_ids[included_chat_ids.length - 1];\r\n                if (!lastItem) return;\r\n\r\n                this.setState({\r\n                    focusedItem: lastItem\r\n                });\r\n            } else if (include_bots) {\r\n                this.setState({\r\n                    focusedItem: 'include_bots'\r\n                });\r\n            } else if (include_channels) {\r\n                this.setState({\r\n                    focusedItem: 'include_channels'\r\n                });\r\n            } else if (include_groups) {\r\n                this.setState({\r\n                    focusedItem: 'include_groups'\r\n                });\r\n            } else if (include_non_contacts) {\r\n                this.setState({\r\n                    focusedItem: 'include_non_contacts'\r\n                });\r\n            } else if (include_contacts) {\r\n                this.setState({\r\n                    focusedItem: 'include_contacts'\r\n                });\r\n            }\r\n        } else {\r\n            const {\r\n                exclude_muted,\r\n                exclude_read,\r\n                exclude_archived,\r\n                excluded_chat_ids\r\n            } = filter;\r\n\r\n            if (excluded_chat_ids.length > 0) {\r\n                const lastItem = excluded_chat_ids[excluded_chat_ids.length - 1];\r\n                if (!lastItem) return;\r\n\r\n                this.setState({\r\n                    focusedItem: lastItem\r\n                });\r\n            } else if (exclude_archived) {\r\n                this.setState({\r\n                    focusedItem: 'exclude_archived'\r\n                });\r\n            } else if (exclude_read) {\r\n                this.setState({\r\n                    focusedItem: 'exclude_read'\r\n                });\r\n            } else if (exclude_muted) {\r\n                this.setState({\r\n                    focusedItem: 'exclude_muted'\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    handleChange = (type, value) => {\r\n        const { onChange } = this.props;\r\n\r\n        onChange(type, value);\r\n\r\n        this.setState({\r\n            focusedItem: null\r\n        });\r\n    };\r\n\r\n    handleSearch = async text => {\r\n        const query = text.trim();\r\n        if (!query) {\r\n            this.setState({\r\n                searchItems: null,\r\n                focusedItem: null\r\n            });\r\n            return;\r\n        }\r\n\r\n        const promises = [];\r\n        promises.push(\r\n            TdLibController.send({\r\n                '@type': 'searchChats',\r\n                query,\r\n                limit: 100\r\n            })\r\n        );\r\n        const [searchItems] = await Promise.all(promises);\r\n\r\n        const store = FileStore.getStore();\r\n        loadChatsContent(store, searchItems.chat_ids);\r\n\r\n        this.setState({ searchItems, focusedItem: null });\r\n    };\r\n\r\n    render() {\r\n        const { t, filter, chats, limit, mode, onClose, onChange, onScroll } = this.props;\r\n        const { focusedItem, searchItems } = this.state;\r\n\r\n        const {\r\n            include_contacts,\r\n            include_non_contacts,\r\n            include_bots,\r\n            include_groups,\r\n            include_channels,\r\n            included_chat_ids\r\n        } = filter;\r\n\r\n        const {\r\n            exclude_muted,\r\n            exclude_read,\r\n            exclude_archived,\r\n            excluded_chat_ids\r\n        } = filter;\r\n\r\n        const include = mode === 'include';\r\n        const items = include ? included_chat_ids : excluded_chat_ids;\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={onClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{mode === 'include' ? t('FilterInclude') : t('FilterExclude')}</span>\r\n                    </div>\r\n                </div>\r\n                <div ref={this.wrapPanelRef} className='animated-wrap-panel'>\r\n                    { include && (\r\n                        <>\r\n                            {include_contacts && <Chip onClick={() => this.handleChange('include_contacts')} ref={el => { this.itemsRef.set('include_contacts', el); }} selected={focusedItem === 'include_contacts'} icon={<ContactsIcon viewBox='0 0 36 36'/>} text={t('FilterContacts')}/>}\r\n                            {include_non_contacts && <Chip onClick={() => this.handleChange('include_non_contacts')} ref={el => { this.itemsRef.set('include_non_contacts', el); }} selected={focusedItem === 'include_non_contacts'} icon={<NonContactsIcon />} text={t('FilterNonContacts')}/>}\r\n                            {include_groups && <Chip onClick={() => this.handleChange('include_groups')} ref={el => { this.itemsRef.set('include_groups', el); }} selected={focusedItem === 'include_groups'} icon={<GroupsIcon viewBox='0 0 36 36'/>} text={t('FilterGroups')}/>}\r\n                            {include_channels && <Chip onClick={() => this.handleChange('include_channels')} ref={el => { this.itemsRef.set('include_channels', el); }} selected={focusedItem === 'include_channels'} icon={<ChannelsIcon viewBox='0 0 36 36'/>} text={t('FilterChannels')}/>}\r\n                            {include_bots && <Chip onClick={() => this.handleChange('include_bots')} ref={el => { this.itemsRef.set('include_bots', el); }} selected={focusedItem === 'include_bots'} icon={<BotsIcon />} text={t('FilterBots')}/>}\r\n                        </>\r\n                    )}\r\n                    { !include && (\r\n                        <>\r\n                            {exclude_muted && <Chip onClick={() => this.handleChange('exclude_muted')} ref={el => { this.itemsRef.set('exclude_muted', el); }} selected={focusedItem === 'exclude_muted'} icon={<GroupsIcon viewBox='0 0 36 36'/>} text={t('FilterMuted')}/>}\r\n                            {exclude_read && <Chip onClick={() => this.handleChange('exclude_read')} ref={el => { this.itemsRef.set('exclude_read', el); }} selected={focusedItem === 'exclude_read'} icon={<ChannelsIcon viewBox='0 0 36 36'/>} text={t('FilterRead')}/>}\r\n                            {exclude_archived && <Chip onClick={() => this.handleChange('exclude_archived')} ref={el => { this.itemsRef.set('exclude_archived', el); }} selected={focusedItem === 'exclude_archived'} icon={<BotsIcon />} text={t('FilterArchived')}/>}\r\n                        </>\r\n                    )}\r\n                    {items.map(x => <ChatChip selected={focusedItem === x} ref={el => { this.itemsRef.set(x, el); }} key={x} chatId={x} onClick={() => this.handleChatChange(x)}/>)}\r\n                    <SearchInput inputRef={this.searchInputRef} hint={t('Search')} onClose={this.handleSearchClose} onChange={this.handleSearch} onBackspace={this.handleBackspace} />\r\n                </div>\r\n                <div className='sidebar-page-top-divider' style={{ zIndex: 1 }}/>\r\n                <div ref={this.scrollRef} className='sidebar-page-content' style={{ marginTop: -3, position: 'relative', height: '100%' }} onScroll={onScroll}>\r\n                    <SectionHeader>{t('FilterChatTypes')}</SectionHeader>\r\n                    {include && (\r\n                        <>\r\n                            <FilterText onClick={() => this.handleChange('include_contacts')} checked={include_contacts} icon={<ContactsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterContacts')} />\r\n                            <FilterText onClick={() => this.handleChange('include_non_contacts')} checked={include_non_contacts} icon={<NonContactsIcon className='filter-text-subtle-icon'/>} text={t('FilterNonContacts')} />\r\n                            <FilterText onClick={() => this.handleChange('include_groups')} checked={include_groups} icon={<GroupsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterGroups')} />\r\n                            <FilterText onClick={() => this.handleChange('include_channels')} checked={include_channels} icon={<ChannelsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterChannels')} />\r\n                            <FilterText onClick={() => this.handleChange('include_bots')} checked={include_bots} icon={<BotsIcon className='filter-text-subtle-icon'/>} text={t('FilterBots')} />\r\n                        </>\r\n                    )}\r\n                    {!include && (\r\n                        <>\r\n                            <FilterText onClick={() => this.handleChange('exclude_muted')} checked={exclude_muted} icon={<MutedIcon className='filter-text-subtle-icon'/>} text={t('FilterMuted')} />\r\n                            <FilterText onClick={() => this.handleChange('exclude_read')} checked={exclude_read} icon={<ReadIcon className='filter-text-subtle-icon'/>} text={t('FilterRead')} />\r\n                            <FilterText onClick={() => this.handleChange('exclude_archived')} checked={exclude_archived} icon={<ArchivedIcon className='filter-text-subtle-icon'/>} text={t('FilterArchived')} />\r\n                        </>\r\n                    )}\r\n                    { chats && chats.length > 0 && (\r\n                        <>\r\n                            <div className='sidebar-page-section-divider' style={{ margin: '8px -8px' }}/>\r\n                            <SectionHeader>{t('FilterChats')}</SectionHeader>\r\n                            { (chats || []).slice(0, limit).map(x => <FilterChat type={true} onClick={() => this.handleChatChange(x)} key={x} chatId={x} checked={mode === 'include' ? included_chat_ids.includes(x) : excluded_chat_ids.includes(x)}/>) }\r\n                        </>\r\n                    )}\r\n                    { searchItems && (\r\n                        <div className='edit-filter-chats-search'>\r\n                            { searchItems.chat_ids.map(x => <FilterChat type={true} onClick={() => this.handleChatChange(x, true)} key={x} chatId={x} checked={mode === 'include' ? included_chat_ids.includes(x) : excluded_chat_ids.includes(x)}/>) }\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nEditFilterChats.propTypes = {\r\n    filter: PropTypes.object,\r\n    chats: PropTypes.array,\r\n    mode: PropTypes.string,\r\n    onChange: PropTypes.func,\r\n    onScroll: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(EditFilterChats);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from '../../../Utils/HOC';\r\nimport { withSnackbar } from 'notistack';\r\nimport { withTranslation } from 'react-i18next';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport AddIcon from '../../../Assets/Icons/Add';\r\nimport CloseIcon from '../../../Assets/Icons/Close';\r\nimport ContactsIcon from '../../../Assets/Icons/NewPrivate';\r\nimport NonContactsIcon from '../../../Assets/Icons/NonContacts';\r\nimport GroupsIcon from '../../../Assets/Icons/NewGroup';\r\nimport ChannelsIcon from '../../../Assets/Icons/NewChannel';\r\nimport MutedIcon from '../../../Assets/Icons/Mute';\r\nimport ReadIcon from '../../../Assets/Icons/ReadChats';\r\nimport ArchivedIcon from '../../../Assets/Icons/Archive';\r\nimport BotsIcon from '../../../Assets/Icons/Bots';\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\r\nimport DoneIcon from '../../../Assets/Icons/Done';\r\nimport EditFilterChats from './EditFilterChats';\r\nimport FilterChat from '../../Tile/FilterChat';\r\nimport FilterText from '../../Tile/FilterText';\r\nimport SectionHeader from '../SectionHeader';\r\nimport SidebarPage from '../SidebarPage';\r\nimport { isFilterValid } from '../../../Utils/Filter';\r\nimport { CHAT_SLICE_LIMIT, FILTER_TITLE_MAX_LENGTH, NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../../Constants';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './CreateFilter.css';\r\n\r\nconst Lottie = React.lazy(() => import('../../Viewer/Lottie'));\r\n\r\nclass CreateFilter extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.titleRef = React.createRef();\r\n        this.lottieRef = React.createRef();\r\n\r\n        this.state = {\r\n            prevFilterId: -1,\r\n            data: null,\r\n            openFilterChats: false,\r\n            mode: null,\r\n            title: '',\r\n            error: false,\r\n            shook: false,\r\n            chats: [],\r\n            limit: 0\r\n        }\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { filter, filterId } = props;\r\n        const { prevFilterId } = state;\r\n\r\n        if (filter && prevFilterId !== filterId){\r\n            return {\r\n                prevFilterId: filterId,\r\n                editFilter: {...filter},\r\n                title: filter.title\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadAnimationData();\r\n    }\r\n\r\n    loadAnimationData = async () => {\r\n        const { closeData } = this.state;\r\n        if (closeData) return;\r\n\r\n        try {\r\n            const requests = [\r\n                fetch('data/Folders_2.json')\r\n            ];\r\n\r\n            const results = await Promise.all(requests);\r\n\r\n            const [data] = await Promise.all(results.map(x => x.json()));\r\n\r\n            this.setState(\r\n                {\r\n                    data\r\n                }\r\n            );\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    handleDone = () => {\r\n        const { onDone } = this.props;\r\n        const { editFilter } = this.state;\r\n\r\n        const title = this.titleRef.current.value.trim();\r\n        if (!title) {\r\n            this.titleRef.current.focus();\r\n            this.setState({\r\n                error: true\r\n            })\r\n            return;\r\n        } else {\r\n            this.setState({\r\n                error: false\r\n            })\r\n        }\r\n\r\n        editFilter.title = title;\r\n\r\n        if (!isFilterValid(editFilter)) {\r\n            this.handleScheduledAction('Please choose at least one chat for this folder.');\r\n            return;\r\n        }\r\n\r\n        onDone && onDone(editFilter);\r\n    };\r\n\r\n    handleAnimationClick = () => {\r\n        const lottie = this.lottieRef.current;\r\n        if (!lottie) return;\r\n        if (!lottie.anim) return;\r\n        if (!lottie.anim.isPaused) return;\r\n\r\n        lottie.anim.goToAndPlay(0);\r\n    };\r\n\r\n    handleDeleteIncludeContacts = () => {\r\n        const { t } = this.props;\r\n        const { editFilter } = this.state;\r\n        if (!editFilter) return;\r\n\r\n        const newEditFilter = { ...editFilter, include_contacts: false };\r\n\r\n        this.setState({\r\n            editFilter: newEditFilter\r\n        })\r\n\r\n        const title = this.titleRef.current.value;\r\n        if (title === t('FilterContacts')){\r\n            this.setState({\r\n                title: ''\r\n            });\r\n        }\r\n    };\r\n\r\n    handleDeleteIncludeNonContacts = () => {\r\n        const { t } = this.props;\r\n        const { editFilter } = this.state;\r\n        if (!editFilter) return;\r\n\r\n        const newEditFilter = { ...editFilter, include_non_contacts: false };\r\n\r\n        this.setState({\r\n            editFilter: newEditFilter\r\n        });\r\n\r\n        const title = this.titleRef.current.value;\r\n        if (title === t('FilterNonContacts')){\r\n            this.setState({\r\n                title: ''\r\n            });\r\n        }\r\n    };\r\n\r\n    handleDeleteIncludeGroups = () => {\r\n        const { t } = this.props;\r\n        const { editFilter } = this.state;\r\n        if (!editFilter) return;\r\n\r\n        const newEditFilter = { ...editFilter, include_groups: false };\r\n\r\n        this.setState({\r\n            editFilter: newEditFilter\r\n        });\r\n\r\n        const title = this.titleRef.current.value;\r\n        if (title === t('FilterGroups')){\r\n            this.setState({\r\n                title: ''\r\n            });\r\n        }\r\n    };\r\n\r\n    handleDeleteIncludeChannels = () => {\r\n        const { t } = this.props;\r\n        const { editFilter } = this.state;\r\n        if (!editFilter) return;\r\n\r\n        const newEditFilter = { ...editFilter, include_channels: false };\r\n\r\n        this.setState({\r\n            editFilter: newEditFilter\r\n        });\r\n\r\n        const title = this.titleRef.current.value;\r\n        if (title === t('FilterChannels')){\r\n            this.setState({\r\n                title: ''\r\n            });\r\n        }\r\n    };\r\n\r\n    handleDeleteIncludeBots = () => {\r\n        const { t } = this.props;\r\n        const { editFilter } = this.state;\r\n        if (!editFilter) return;\r\n\r\n        const newEditFilter = { ...editFilter, include_bots: false };\r\n\r\n        this.setState({\r\n            editFilter: newEditFilter\r\n        });\r\n\r\n        const title = this.titleRef.current.value;\r\n        if (title === t('FilterBots')){\r\n            this.setState({\r\n                title: ''\r\n            });\r\n        }\r\n    };\r\n\r\n    handleDeleteIncludedChat = chatId => {\r\n        const { editFilter } = this.state;\r\n        if (!editFilter) return;\r\n\r\n        const newEditFilter = { ...editFilter, included_chat_ids: editFilter.included_chat_ids.filter(x => x !== chatId) };\r\n\r\n        this.setState({\r\n            editFilter: newEditFilter\r\n        })\r\n    };\r\n\r\n    handleDeleteExcludeMuted = () => {\r\n        const { editFilter } = this.state;\r\n        if (!editFilter) return;\r\n\r\n        const newEditFilter = { ...editFilter, exclude_muted: false };\r\n\r\n        this.setState({\r\n            editFilter: newEditFilter\r\n        })\r\n    };\r\n\r\n    handleDeleteExcludeRead = () => {\r\n        const { editFilter } = this.state;\r\n        if (!editFilter) return;\r\n\r\n        const newEditFilter = { ...editFilter, exclude_read: false };\r\n\r\n        this.setState({\r\n            editFilter: newEditFilter\r\n        })\r\n    };\r\n\r\n    handleDeleteExcludeArchived = () => {\r\n        const { editFilter } = this.state;\r\n        if (!editFilter) return;\r\n\r\n        const newEditFilter = { ...editFilter, exclude_archived: false };\r\n\r\n        this.setState({\r\n            editFilter: newEditFilter\r\n        })\r\n    };\r\n\r\n    handleDeleteExcludedChat = chatId => {\r\n        const { editFilter } = this.state;\r\n        if (!editFilter) return;\r\n\r\n        const newEditFilter = { ...editFilter, excluded_chat_ids: editFilter.excluded_chat_ids.filter(x => x !== chatId) };\r\n\r\n        this.setState({\r\n            editFilter: newEditFilter\r\n        })\r\n    };\r\n\r\n    handleOpenFilterChats = async mode => {\r\n        const result = await TdLibController.send({\r\n            '@type': 'getChats',\r\n            chat_list: { '@type': 'chatListMain' },\r\n            offset_order: '9223372036854775807',\r\n            offset_chat_id: 0,\r\n            limit: 1000\r\n        });\r\n\r\n        this.setState({\r\n            openFilterChats: true,\r\n            mode,\r\n            chats: result.chat_ids,\r\n            limit: CHAT_SLICE_LIMIT\r\n        })\r\n    };\r\n\r\n    setDefaultFilterTitle() {\r\n        const { t } = this.props;\r\n        const { editFilter } = this.state;\r\n\r\n        const title = this.titleRef.current.value;\r\n        if (!title) {\r\n            const {\r\n                include_contacts,\r\n                include_non_contacts,\r\n                include_bots,\r\n                include_groups,\r\n                include_channels,\r\n                included_chat_ids\r\n            } = editFilter;\r\n\r\n            const {\r\n                exclude_muted,\r\n                exclude_read,\r\n                exclude_archived,\r\n                excluded_chat_ids\r\n            } = editFilter;\r\n\r\n            if (!included_chat_ids.length) {\r\n                if (include_contacts && !include_non_contacts && !include_bots && !include_groups && !include_channels) {\r\n                    this.setState({\r\n                        title: t('FilterContacts')\r\n                    });\r\n                } else if (!include_contacts && include_non_contacts && !include_bots && !include_groups && !include_channels) {\r\n                    this.setState({\r\n                        title: t('FilterNonContacts')\r\n                    });\r\n                } else if (include_contacts && include_non_contacts && !include_bots && !include_groups && !include_channels) {\r\n                    this.setState({\r\n                        title: t('ChatHints')\r\n                    });\r\n                } else if (!include_contacts && !include_non_contacts && include_bots && !include_groups && !include_channels) {\r\n                    this.setState({\r\n                        title: t('FilterBots')\r\n                    });\r\n                } else if (!include_contacts && !include_non_contacts && !include_bots && include_groups && !include_channels) {\r\n                    this.setState({\r\n                        title: t('FilterGroups')\r\n                    });\r\n                } else if (!include_contacts && !include_non_contacts && !include_bots && !include_groups && include_channels) {\r\n                    this.setState({\r\n                        title: t('FilterChannels')\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    handleCloseFilterChats = () => {\r\n\r\n        this.setDefaultFilterTitle();\r\n\r\n        this.setState({\r\n            openFilterChats: false,\r\n            mode: null\r\n        })\r\n    };\r\n\r\n    handleChange = (type, value) => {\r\n        const { editFilter } = this.state;\r\n        if (!editFilter) return;\r\n\r\n        let newEditFilter = null;\r\n        switch (type) {\r\n            case 'include_contacts': {\r\n                newEditFilter = { ...editFilter, include_contacts: !editFilter.include_contacts };\r\n                break;\r\n            }\r\n            case 'include_non_contacts': {\r\n                newEditFilter = { ...editFilter, include_non_contacts: !editFilter.include_non_contacts };\r\n                break;\r\n            }\r\n            case 'include_bots': {\r\n                newEditFilter = { ...editFilter, include_bots: !editFilter.include_bots };\r\n                break;\r\n            }\r\n            case 'include_groups': {\r\n                newEditFilter = { ...editFilter, include_groups: !editFilter.include_groups };\r\n                break;\r\n            }\r\n            case 'include_channels': {\r\n                newEditFilter = { ...editFilter, include_channels: !editFilter.include_channels };\r\n                break;\r\n            }\r\n            case 'included_chat_ids': {\r\n                let included, excluded;\r\n                if (editFilter.included_chat_ids.includes(value)) {\r\n                    included = editFilter.included_chat_ids.filter(x => x !== value);\r\n                    excluded = editFilter.excluded_chat_ids;\r\n                } else {\r\n                    included = [ ...editFilter.included_chat_ids, value ];\r\n                    excluded = editFilter.excluded_chat_ids.filter(x => x !== value);\r\n                }\r\n\r\n                newEditFilter = {\r\n                    ...editFilter,\r\n                    included_chat_ids: included,\r\n                    excluded_chat_ids: excluded\r\n                };\r\n                break;\r\n            }\r\n            case 'exclude_muted': {\r\n                newEditFilter = { ...editFilter, exclude_muted: !editFilter.exclude_muted };\r\n                break;\r\n            }\r\n            case 'exclude_read': {\r\n                newEditFilter = { ...editFilter, exclude_read: !editFilter.exclude_read };\r\n                break;\r\n            }\r\n            case 'exclude_archived': {\r\n                newEditFilter = { ...editFilter, exclude_archived: !editFilter.exclude_archived };\r\n                break;\r\n            }\r\n            case 'excluded_chat_ids': {\r\n                let included, excluded;\r\n                if (editFilter.excluded_chat_ids.includes(value)) {\r\n                    excluded = editFilter.excluded_chat_ids.filter(x => x !== value);\r\n                    included = editFilter.included_chat_ids;\r\n                } else {\r\n                    excluded = [ ...editFilter.excluded_chat_ids, value ];\r\n                    included = editFilter.included_chat_ids.filter(x => x !== value);\r\n                }\r\n\r\n                newEditFilter = {\r\n                    ...editFilter,\r\n                    included_chat_ids: included,\r\n                    excluded_chat_ids: excluded\r\n                };\r\n\r\n                break;\r\n            }\r\n        }\r\n\r\n        // console.log('[f] onChange', type, value, newEditFilter);\r\n        if (!newEditFilter) return;\r\n\r\n        this.setState({\r\n            editFilter: newEditFilter\r\n        })\r\n    };\r\n\r\n    handleTitleChange = () => {\r\n        const title = this.titleRef.current.value.substr(0, FILTER_TITLE_MAX_LENGTH);\r\n\r\n        this.setState({\r\n            title\r\n        });\r\n    }\r\n\r\n    handleScroll = event => {\r\n        const scroll = event.target;\r\n        if (scroll.scrollTop + scroll.offsetHeight >= scroll.scrollHeight) {\r\n            this.setState({\r\n                limit: this.state.limit + CHAT_SLICE_LIMIT\r\n            })\r\n        }\r\n    };\r\n\r\n    handleScheduledAction = message => {\r\n        const { enqueueSnackbar, closeSnackbar } = this.props;\r\n\r\n        const snackKey = enqueueSnackbar(message, {\r\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\r\n            preventDuplicate: true,\r\n            action: [\r\n                <IconButton\r\n                    key='close'\r\n                    aria-label='Close'\r\n                    color='inherit'\r\n                    className='notification-close-button'\r\n                    onClick={() => closeSnackbar(snackKey)}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ]\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { t, filter, id, onClose } = this.props;\r\n        if (!filter) return null;\r\n\r\n        const { editFilter, data, openFilterChats, mode, chats, limit, title, error, shook } = this.state;\r\n\r\n        const {\r\n            include_contacts,\r\n            include_non_contacts,\r\n            include_bots,\r\n            include_groups,\r\n            include_channels,\r\n            included_chat_ids\r\n        } = editFilter;\r\n\r\n        const {\r\n            exclude_muted,\r\n            exclude_read,\r\n            exclude_archived,\r\n            excluded_chat_ids\r\n        } = editFilter;\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={onClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{id >= 0 ? t('FilterEdit') : t('CreateNewFilter')}</span>\r\n                    </div>\r\n                    <IconButton className='header-right-button' color='primary' onClick={this.handleDone}>\r\n                        <DoneIcon />\r\n                    </IconButton>\r\n                </div>\r\n                <div className='sidebar-page-content'>\r\n                    <div className='filters-create-animation'>\r\n                        <React.Suspense fallback={null}>\r\n                            <Lottie\r\n                                ref={this.lottieRef}\r\n                                options={{\r\n                                    autoplay: true,\r\n                                    loop: false,\r\n                                    animationData: data,\r\n                                    renderer: 'svg',\r\n                                    rendererSettings: {\r\n                                        preserveAspectRatio: 'xMinYMin slice', // Supports the same options as the svg element's preserveAspectRatio property\r\n                                        clearCanvas: false,\r\n                                        progressiveLoad: true, // Boolean, only svg renderer, loads dom elements when needed. Might speed up initialization for large number of elements.\r\n                                        hideOnTransparent: true, //Boolean, only svg renderer, hides elements when opacity reaches 0 (defaults to true)\r\n                                    }\r\n                                }}\r\n                                onClick={this.handleAnimationClick}\r\n                            />\r\n                        </React.Suspense>\r\n                    </div>\r\n\r\n\r\n                    <div className='create-filter-title'>\r\n                        <TextField\r\n                            inputRef={this.titleRef}\r\n                            className='edit-profile-input'\r\n                            variant='outlined'\r\n                            fullWidth\r\n                            label={t('FilterNameHint')}\r\n                            value={title}\r\n                            error={error}\r\n                            onChange={this.handleTitleChange}\r\n                        />\r\n                    </div>\r\n                    <div className='sidebar-page-section'>\r\n                        <SectionHeader>{t('FilterInclude')}</SectionHeader>\r\n                        <FilterText className='create-filter-add-chats' icon={<AddIcon/>} text={t('FilterAddChats')} onClick={() => this.handleOpenFilterChats('include')}/>\r\n                        {include_contacts && <FilterText onDelete={this.handleDeleteIncludeContacts} icon={<ContactsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterContacts')} />}\r\n                        {include_non_contacts && <FilterText onDelete={this.handleDeleteIncludeNonContacts} icon={<NonContactsIcon className='filter-text-subtle-icon'/>} text={t('FilterNonContacts')} />}\r\n                        {include_groups && <FilterText onDelete={this.handleDeleteIncludeGroups} icon={<GroupsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterGroups')} />}\r\n                        {include_channels && <FilterText onDelete={this.handleDeleteIncludeChannels} icon={<ChannelsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterChannels')} />}\r\n                        {include_bots && <FilterText onDelete={this.handleDeleteIncludeBots} icon={<BotsIcon className='filter-text-subtle-icon'/>} text={t('FilterBots')} />}\r\n                        { included_chat_ids.map(x => (\r\n                            <FilterChat key={x} chatId={x} onDelete={this.handleDeleteIncludedChat}/>\r\n                        ))}\r\n                    </div>\r\n                    <div className='sidebar-page-section'>\r\n                        <SectionHeader>{t('FilterExclude')}</SectionHeader>\r\n                        <FilterText className='create-filter-remove-chats' icon={<RemoveIcon/>} text={t('FilterRemoveChats')} onClick={() => this.handleOpenFilterChats('exclude')}/>\r\n                        {exclude_muted && <FilterText onDelete={this.handleDeleteExcludeMuted} icon={<MutedIcon className='filter-text-subtle-icon'/>} text={t('FilterMuted')} />}\r\n                        {exclude_read && <FilterText onDelete={this.handleDeleteExcludeRead} icon={<ReadIcon className='filter-text-subtle-icon'/>} text={t('FilterRead')} />}\r\n                        {exclude_archived && <FilterText onDelete={this.handleDeleteExcludeArchived} icon={<ArchivedIcon className='filter-text-subtle-icon'/>} text={t('FilterArchived')} />}\r\n                        { excluded_chat_ids.map(x => (\r\n                            <FilterChat key={x} chatId={x} onDelete={this.handleDeleteExcludedChat}/>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n                <SidebarPage open={openFilterChats} onClose={this.handleCloseFilterChats}>\r\n                    <EditFilterChats filter={editFilter} mode={mode} chats={chats} limit={limit} onChange={this.handleChange} onScroll={this.handleScroll}/>\r\n                </SidebarPage>\r\n            </>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nCreateFilter.propTypes = {\r\n    filter: PropTypes.object,\r\n    id: PropTypes.number,\r\n    onDone: PropTypes.func,\r\n    onClose: PropTypes.func\r\n};\r\n\r\nconst enhance = compose(\r\n    withTranslation(),\r\n    withSnackbar,\r\n);\r\n\r\nexport default enhance(CreateFilter);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport { getChatOrder } from './Chat';\r\n\r\nexport function isFilterValid(filter) {\r\n    if (!filter) return false;\r\n\r\n    const {\r\n        include_contacts,\r\n        include_non_contacts,\r\n        include_bots,\r\n        include_groups,\r\n        include_channels,\r\n        included_chat_ids,\r\n        title\r\n    } = filter;\r\n\r\n    if (!title) return false;\r\n\r\n    return include_contacts || include_non_contacts || include_bots || include_groups || include_channels || included_chat_ids.length > 0;\r\n}\r\n\r\nexport function getFilterSubtitle(t, filterId, chats) {\r\n    if (!chats) return ' ';\r\n\r\n    let count = 0;\r\n    for (let i = 0; i < chats.chat_ids.length; i++) {\r\n        if (getChatOrder(chats.chat_ids[i], { '@type': 'chatListFilter', chat_filter_id: filterId }) !== '0') {\r\n            count++;\r\n        }\r\n    }\r\n\r\n    if (!count) {\r\n        return t('FilterNoChats');\r\n    }\r\n\r\n    return count === 1 ? '1 chat' : `${count} chats`;\r\n}","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport DeleteIcon from '../../Assets/Icons/Delete';\r\nimport { getFilterSubtitle } from '../../Utils/Filter';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './Filter.css';\r\n\r\nclass Filter extends React.Component {\r\n\r\n    state = {\r\n        dialog: false,\r\n        contextMenu: false,\r\n        left: 0,\r\n        top: 0\r\n    };\r\n\r\n    handleDelete = () => {\r\n        this.handleCloseContextMenu();\r\n        this.handleOpenDialog();\r\n    };\r\n\r\n    handleOpenDialog = () => {\r\n        this.setState({\r\n            dialog: true\r\n        })\r\n    };\r\n\r\n    handleCloseDialog = () => {\r\n        this.setState({\r\n            dialog: false\r\n        })\r\n    };\r\n\r\n    handleDeleteCancel = () => {\r\n        this.handleCloseDialog();\r\n    };\r\n\r\n    handleDeleteConfirm = () => {\r\n        const { info } = this.props;\r\n        if (!info) return;\r\n\r\n        this.handleCloseDialog();\r\n\r\n        TdLibController.send({\r\n            '@type': 'deleteChatFilter',\r\n            chat_filter_id: info.id\r\n        });\r\n    };\r\n\r\n    handleOpenContextMenu = event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({\r\n            contextMenu: true,\r\n            left: event.clientX,\r\n            top: event.clientY\r\n        });\r\n    };\r\n\r\n    handleCloseContextMenu = () => {\r\n        this.setState({\r\n            contextMenu: false,\r\n            left: 0,\r\n            top: 0\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { t, info, onEdit, chats } = this.props;\r\n        if (!info) return null;\r\n\r\n        const { dialog, contextMenu, top, left } = this.state;\r\n\r\n        const { title } = info;\r\n        const subtitle = getFilterSubtitle(t, info.id, chats);\r\n\r\n        return (\r\n            <>\r\n                <ListItem className='settings-list-item2' role={undefined} button onClick={onEdit} onContextMenu={this.handleOpenContextMenu}>\r\n                    <ListItemText\r\n                        className='settings-list-item-text2'\r\n                        primary={title}\r\n                        secondary={subtitle}\r\n                    />\r\n                </ListItem>\r\n                <Popover\r\n                    open={contextMenu}\r\n                    onClose={this.handleCloseContextMenu}\r\n                    anchorReference='anchorPosition'\r\n                    anchorPosition={{ top, left }}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'left'\r\n                    }}\r\n                    onMouseDown={e => e.stopPropagation()}>\r\n                    <MenuList onClick={e => e.stopPropagation()}>\r\n                        <MenuItem onClick={this.handleDelete}>\r\n                            <ListItemIcon>\r\n                                <DeleteIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('Delete')} />\r\n                        </MenuItem>\r\n                    </MenuList>\r\n                </Popover>\r\n                <Dialog\r\n                    manager={modalManager}\r\n                    transitionDuration={0}\r\n                    open={dialog}\r\n                    onClose={this.handleCancel}\r\n                    aria-labelledby='delete-dialog-title'>\r\n                    <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText>\r\n                            {t('FilterDeleteAlert')}\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleDeleteCancel} color='primary'>\r\n                            {t('Cancel')}\r\n                        </Button>\r\n                        <Button onClick={this.handleDeleteConfirm} color='primary'>\r\n                            {t('Ok')}\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nFilter.propTypes = {\r\n    info: PropTypes.object.isRequired,\r\n    chats: PropTypes.object,\r\n    onEdit: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withTranslation()(Filter);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './RecommendedFilter.css';\r\n\r\nclass RecommendedFilter extends React.Component {\r\n\r\n    handleAdd = () => {\r\n        const { filter: recommendedFilter } = this.props;\r\n        if (!recommendedFilter) return;\r\n\r\n        const { filter } = recommendedFilter;\r\n\r\n        TdLibController.send({\r\n            '@type': 'createChatFilter',\r\n            filter\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { t, filter: recommendedFilter } = this.props;\r\n        if (!recommendedFilter) return null;\r\n\r\n        const { filter, description } = recommendedFilter;\r\n\r\n        return (\r\n            <ListItem\r\n                className='settings-list-item2'\r\n                role={undefined}\r\n                button>\r\n                <ListItemText\r\n                    className='settings-list-item-text'\r\n                    primary={filter.title}\r\n                    secondary={description}\r\n                />\r\n                <Button className='recommended-filter-add' variant='contained' disableElevation color='primary' onClick={this.handleAdd}>\r\n                    {t('Add')}\r\n                </Button>\r\n            </ListItem>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nRecommendedFilter.propTypes = {\r\n    filter: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withTranslation()(RecommendedFilter);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from '../../../Utils/HOC';\r\nimport { withSnackbar } from 'notistack';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AddIcon from '../../../Assets/Icons/Add';\r\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\r\nimport CloseIcon from '../../../Assets/Icons/Close';\r\nimport CreateFilter from './CreateFilter';\r\nimport Filter from '../../Tile/Filter';\r\nimport RecommendedFilter from '../../Tile/RecommendedFilter';\r\nimport SectionHeader from '../SectionHeader';\r\nimport SidebarPage from '../SidebarPage';\r\nimport { FILTER_COUNT_MAX, NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../../Constants';\r\nimport FilterStore from '../../../Stores/FilterStore';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './Filters.css';\r\n\r\nconst Lottie = React.lazy(() => import('../../Viewer/Lottie'));\r\n\r\nclass Filters extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.lottieRef = React.createRef();\r\n\r\n        this.state = {\r\n            openFilter: false,\r\n            filterId: -1,\r\n            filter: null,\r\n            editFilter: null,\r\n            recommendedFilters: null,\r\n            chats: null,\r\n            filtersMap: new Map()\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadAnimationData();\r\n        this.loadData();\r\n\r\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\r\n        // ChatStore.on('updateChatChatList', this.onUpdateChatFilters);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\r\n        // ChatStore.off('updateChatChatList', this.onUpdateChatFilters);\r\n    }\r\n\r\n    onUpdateChatFilters = update => {\r\n        setTimeout(() => {\r\n            this.loadData();\r\n        }, 100);\r\n    };\r\n\r\n    async loadData() {\r\n        const chats = await TdLibController.send({\r\n            '@type': 'getChats',\r\n            chat_list: { '@type': 'chatListMain' },\r\n            offset_chat_id: 0,\r\n            offset_order: '9223372036854775807',\r\n            limit: 1000\r\n        });\r\n\r\n        const { filters: filterInfo } = FilterStore;\r\n        const promises = [];\r\n        for (let i = 0; i < filterInfo.length; i++) {\r\n            promises.push(TdLibController.send({\r\n                '@type': 'getChatFilter',\r\n                chat_filter_id: filterInfo[i].id\r\n            }).catch(e => null));\r\n        }\r\n        const filters = await Promise.all(promises);\r\n\r\n        // console.log('[f] filters', filters);\r\n\r\n        const filtersMap = new Map();\r\n        for (let i = 0; i < filterInfo.length; i++) {\r\n            filtersMap.set(filterInfo[i].id, filters[i]);\r\n        }\r\n\r\n        const recommendedFilters = await TdLibController.send({\r\n            '@type': 'getRecommendedChatFilters'\r\n        });\r\n\r\n        // console.log('[f] recommended', recommendedFilters);\r\n\r\n        this.setState({\r\n            chats,\r\n            filtersMap,\r\n            recommendedFilters\r\n        });\r\n    }\r\n\r\n    loadAnimationData = async () => {\r\n        const { closeData } = this.state;\r\n        if (closeData) return;\r\n\r\n        try {\r\n            const requests = [\r\n                fetch('data/Folders_1.json'),\r\n                fetch('data/Folders_2.json'),\r\n            ];\r\n\r\n            const results = await Promise.all(requests);\r\n\r\n            const [data] = await Promise.all(results.map(x => x.json()));\r\n\r\n            this.setState(\r\n                {\r\n                    data\r\n                }\r\n            );\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    handleCreateFilter = () => {\r\n        const { t } = this.props;\r\n        const { filters } = FilterStore;\r\n        if (filters.length >= FILTER_COUNT_MAX) {\r\n            this.handleScheduledAction(t('FilterCreateError'));\r\n            return;\r\n        }\r\n\r\n        const filter = {\r\n            '@type': 'chatFiler',\r\n            title: '',\r\n            icon_name: '',\r\n            pinned_chat_ids: [],\r\n            included_chat_ids: [],\r\n            excluded_chat_ids: [],\r\n            exclude_muted: false,\r\n            exclude_read: false,\r\n            exclude_archived: false,\r\n            include_contacts: false,\r\n            include_non_contacts: false,\r\n            include_bots: false,\r\n            include_groups: false,\r\n            include_channels: false\r\n        };\r\n\r\n        this.setState({\r\n            openFilter: true,\r\n            filterId: -1,\r\n            filter\r\n        });\r\n    };\r\n\r\n    handleCloseFilter = () => {\r\n        this.setState({\r\n            openFilter: false,\r\n            filterId: -1,\r\n            filter: null\r\n        })\r\n    };\r\n\r\n    handleEditFilter = async info => {\r\n        const filter = await TdLibController.send({\r\n            '@type': 'getChatFilter',\r\n            chat_filter_id: info.id\r\n        });\r\n\r\n        if (!filter) return;\r\n\r\n        this.setState({\r\n            openFilter: true,\r\n            filterId: info.id,\r\n            filter\r\n        })\r\n    };\r\n\r\n    handleDone = filter => {\r\n        const { filterId } = this.state;\r\n\r\n        this.handleCloseFilter();\r\n        if (!filter) return;\r\n\r\n        if (filterId !== -1) {\r\n            TdLibController.send({\r\n                '@type': 'editChatFilter',\r\n                chat_filter_id: filterId,\r\n                filter\r\n            });\r\n        } else {\r\n            TdLibController.send({\r\n                '@type': 'createChatFilter',\r\n                filter\r\n            });\r\n        }\r\n    };\r\n\r\n    handleAnimationClick = () => {\r\n        const lottie = this.lottieRef.current;\r\n        if (!lottie) return;\r\n        if (!lottie.anim) return;\r\n        if (!lottie.anim.isPaused) return;\r\n\r\n        lottie.anim.goToAndPlay(0);\r\n    };\r\n\r\n    handleScheduledAction = message => {\r\n        const { enqueueSnackbar, closeSnackbar } = this.props;\r\n\r\n        const snackKey = enqueueSnackbar(message, {\r\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\r\n            preventDuplicate: true,\r\n            action: [\r\n                <IconButton\r\n                    key='close'\r\n                    aria-label='Close'\r\n                    color='inherit'\r\n                    className='notification-close-button'\r\n                    onClick={() => closeSnackbar(snackKey)}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ]\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { t, onClose } = this.props;\r\n        const { recommendedFilters, openFilter, filter, filterId, data, chats, filtersMap } = this.state;\r\n        const { filters } = FilterStore;\r\n\r\n        const hasFilters = filters && filters.length > 0;\r\n        const hasRecommendedFilters = recommendedFilters\r\n            && recommendedFilters.chat_filters.length > 0\r\n            && (!filters || filters.length < FILTER_COUNT_MAX);\r\n\r\n        // console.log('[f] filters.render');\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={onClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{t('FilterAvailableTitle')}</span>\r\n                    </div>\r\n                </div>\r\n                <div className='sidebar-page-content'>\r\n                    <div className='sidebar-page-section filters-create'>\r\n                        <div className='filters-create-animation'>\r\n                            <React.Suspense fallback={null}>\r\n                                <Lottie\r\n                                    ref={this.lottieRef}\r\n                                    options={{\r\n                                        autoplay: true,\r\n                                        loop: false,\r\n                                        animationData: data,\r\n                                        renderer: 'svg',\r\n                                        rendererSettings: {\r\n                                            preserveAspectRatio: 'xMinYMin slice', // Supports the same options as the svg element's preserveAspectRatio property\r\n                                            clearCanvas: false,\r\n                                            progressiveLoad: true, // Boolean, only svg renderer, loads dom elements when needed. Might speed up initialization for large number of elements.\r\n                                            hideOnTransparent: true, //Boolean, only svg renderer, hides elements when opacity reaches 0 (defaults to true)\r\n                                        }\r\n                                    }}\r\n                                    onClick={this.handleAnimationClick}\r\n                                />\r\n                            </React.Suspense>\r\n                        </div>\r\n\r\n                        <div className='filters-create-hint'>{t('CreateNewFilterInfo')}</div>\r\n                        <Button className='filters-create-button' color='primary' variant='contained' disableElevation startIcon={<AddIcon/>} onClick={this.handleCreateFilter}>\r\n                            {t('CreateNewFilter')}\r\n                        </Button>\r\n                    </div>\r\n                    { hasFilters && (\r\n                        <>\r\n                            <div className='sidebar-page-section-divider' />\r\n                            <div className='sidebar-page-section'>\r\n                                <SectionHeader>{t('Filters')}</SectionHeader>\r\n                                {(filters || []).map(x => (<Filter key={x.id} info={x} filter={filtersMap.get(x.id)} chats={chats} onEdit={() => this.handleEditFilter(x)}/>))}\r\n                            </div>\r\n                        </>\r\n                    )}\r\n                    { hasRecommendedFilters && (\r\n                        <>\r\n                            <div className='sidebar-page-section-divider' />\r\n                            <div className='sidebar-page-section'>\r\n                                <SectionHeader>{t('FilterRecommended')}</SectionHeader>\r\n                                {recommendedFilters.chat_filters.map(x => (<RecommendedFilter key={x.filter.title} filter={x}/>))}\r\n                            </div>\r\n                        </>\r\n                    )}\r\n                </div>\r\n                <SidebarPage open={openFilter} onClose={this.handleCloseFilter}>\r\n                    <CreateFilter filter={filter} id={filterId} onDone={this.handleDone}/>\r\n                </SidebarPage>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nFilters.propTypes = {\r\n    onClose: PropTypes.func\r\n};\r\n\r\nconst enhance = compose(\r\n    withTranslation(),\r\n    withSnackbar,\r\n);\r\n\r\nexport default enhance(Filters);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L17.414,10.9992136 L18.2071068,11.7928932 C18.5976311,12.1834175 18.5976311,12.8165825 18.2071068,13.2071068 C17.8466228,13.5675907 17.2793918,13.5953203 16.8871006,13.2902954 L16.7928932,13.2071068 L16,12.4142136 L7.70710678,20.7071068 C7.55082647,20.8633871 7.34814508,20.9625983 7.13144398,20.9913276 L7,21 L4,21 C3.48716416,21 3.06449284,20.6139598 3.00672773,20.1166211 L3,20 L3,17 C3,16.7789863 3.07316447,16.565516 3.20608063,16.3919705 L3.29289322,16.2928932 L11.585,7.99921356 L10.7928932,7.20710678 C10.4023689,6.81658249 10.4023689,6.18341751 10.7928932,5.79289322 C11.1533772,5.43240926 11.7206082,5.40467972 12.1128994,5.70970461 L12.2071068,5.79289322 L13,6.58521356 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 Z M13,9.415 L5,17.414 L5,18.999 L6.585,18.999 L14.585,11 L13,9.415 Z M18,4.41421356 L14.414,7.99921356 L16,9.58521356 L19.5857864,6 L18,4.41421356 Z' />,\r\n    'Colorize'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { getSrc } from '../../Utils/File';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport './Wallpaper.css';\r\nimport FileProgress from '../Viewer/FileProgress';\r\n\r\nclass Wallpaper extends React.Component {\r\n    state = {\r\n        loaded: false\r\n    };\r\n\r\n    componentDidMount() {\r\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\r\n    }\r\n\r\n    onClientUpdateDocumentThumbnailBlob = update => {\r\n        const { wallpaper } = this.props;\r\n        if (!wallpaper) return;\r\n\r\n        const { document } = wallpaper;\r\n        if (!document) return;\r\n\r\n        const { thumbnail } = document;\r\n        if (!thumbnail) return;\r\n\r\n        const { file } = thumbnail;\r\n        if (!file) return;\r\n\r\n        const { fileId } = update;\r\n\r\n        if (file.id !== fileId) {\r\n            return;\r\n        }\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    handleLoad = () => {\r\n        this.setState({ loaded: true });\r\n    };\r\n\r\n    handleClick = () => {\r\n        const { wallpaper, onClick } = this.props;\r\n\r\n        if (onClick) {\r\n            onClick(wallpaper);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { wallpaper, isSelected } = this.props;\r\n        const { loaded  } = this.state;\r\n\r\n        const { document } = wallpaper;\r\n        const { minithumbnail, thumbnail } = document;\r\n\r\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\r\n        const thumbSrc = getSrc(thumbnail ? thumbnail.file : null);\r\n        const tileLoaded = thumbSrc && loaded;\r\n        const src = thumbSrc || miniSrc;\r\n\r\n        return (\r\n            <div className='shared-photo' onClick={this.handleClick}>\r\n                <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover', backgroundPosition: '50%' }}>\r\n                    {src !== thumbSrc && (\r\n                        <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\r\n                    )}\r\n                </div>\r\n                { isSelected && <><div className='wallpaper-selected'/><div className='wallpaper-selected-inner'/></> }\r\n                { document && document.document && <FileProgress file={document.document} cancelButton={false}/> }\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nWallpaper.propTypes = {\r\n    wallpaper: PropTypes.object.isRequired,\r\n    isSelected: PropTypes.bool\r\n};\r\n\r\nexport default Wallpaper;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\r\nimport Wallpaper from '../../Tile/Wallpaper';\r\nimport { getSrc, loadBackgroundContent, loadBackgroundsContent } from '../../../Utils/File';\r\nimport ChatStore from '../../../Stores/ChatStore';\r\nimport FileStore from '../../../Stores/FileStore';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './ChatBackground.css';\r\n\r\nclass ChatBackground extends React.Component {\r\n    state = {\r\n        selectedId: ChatStore.wallpaper ? ChatStore.wallpaper.id : -1\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.loadContent();\r\n    }\r\n\r\n    loadContent() {\r\n        const { backgrounds } = this.props;\r\n        if (!backgrounds) return;\r\n\r\n        const store = FileStore.getStore();\r\n        loadBackgroundsContent(store, backgrounds.backgrounds);\r\n    }\r\n\r\n    handleClick = wallpaper => {\r\n        this.setState({\r\n            selectedId: wallpaper.id\r\n        });\r\n\r\n        const { document } = wallpaper;\r\n        if (!document) return;\r\n\r\n        const { thumbnail, document: file } = document;\r\n        if (!file) return;\r\n\r\n        const src = getSrc(file);\r\n        if (!src) {\r\n            const store = FileStore.getStore();\r\n            loadBackgroundContent(store, wallpaper, true);\r\n        }\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateChatBackground',\r\n            wallpaper\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { t, backgrounds, onClose } = this.props;\r\n        const { selectedId } = this.state;\r\n\r\n        const wallpapers = backgrounds.backgrounds.filter(x => x.type['@type'] === 'backgroundTypeWallpaper');\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={onClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{t('ChatBackground')}</span>\r\n                    </div>\r\n                </div>\r\n                <div className='sidebar-page-content shared-media-list shared-photos-list'>\r\n                    { wallpapers.map(x => (<Wallpaper key={x.id} wallpaper={x} isSelected={x.id === selectedId} onClick={this.handleClick}/>)) }\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nChatBackground.propTypes = {\r\n    backgrounds: PropTypes.object\r\n};\r\n\r\nexport default withTranslation()(ChatBackground);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from '../../Utils/HOC';\r\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\r\nimport withTheme from '@material-ui/core/styles/withTheme';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport red from '@material-ui/core/colors/red';\r\nimport orange from '@material-ui/core/colors/orange';\r\nimport amber from '@material-ui/core/colors/amber';\r\nimport green from '@material-ui/core/colors/green';\r\nimport blue from '@material-ui/core/colors/blue';\r\nimport indigo from '@material-ui/core/colors/indigo';\r\nimport deepPurple from '@material-ui/core/colors/deepPurple';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport ApplicationStore from '../../Stores/ApplicationStore';\r\nimport './ThemePicker.css';\r\n\r\nclass ThemePicker extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            open: false,\r\n            type: this.props.theme.palette.type,\r\n            color: this.getColorString(this.props.theme.palette.primary.main)\r\n        };\r\n    }\r\n\r\n    handleChange = event => {\r\n        this.setState({ type: event.target.value });\r\n\r\n        ApplicationStore.emit('clientUpdateThemeChanging', {\r\n            type: event.target.value,\r\n            primary: this.getColor(this.state.color)\r\n        });\r\n    };\r\n\r\n    handleAccentChange = event => {\r\n        this.setState({ color: event.target.value });\r\n\r\n        ApplicationStore.emit('clientUpdateThemeChanging', {\r\n            type: this.state.type,\r\n            primary: this.getColor(event.target.value)\r\n        });\r\n    };\r\n\r\n    getColorString = value => {\r\n        switch (value) {\r\n            case red['500']:\r\n                return 'red';\r\n            case orange['500']:\r\n                return 'orange';\r\n            case amber['500']:\r\n                return 'amber';\r\n            case green['500']:\r\n                return 'green';\r\n            case '#50A2E9':\r\n                return 'blue';\r\n            case indigo['500']:\r\n                return 'indigo';\r\n            case deepPurple['500']:\r\n                return 'deepPurple';\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    getColor = value => {\r\n        switch (value) {\r\n            case 'red':\r\n                return red;\r\n            case 'orange':\r\n                return orange;\r\n            case 'amber':\r\n                return amber;\r\n            case 'green':\r\n                return green;\r\n            case 'blue':\r\n                return { main: '#50A2E9' };\r\n            case 'indigo':\r\n                return indigo;\r\n            case 'deepPurple':\r\n                return deepPurple;\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ open: false });\r\n    };\r\n\r\n    open = () => {\r\n        this.setState({ open: true });\r\n    };\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        const { type, color, open } = this.state;\r\n\r\n        return (\r\n            <Dialog\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                open={open}\r\n                onClose={this.handleClose}\r\n                aria-labelledby='alert-dialog-title'\r\n                aria-describedby='alert-dialog-description'>\r\n                <DialogTitle id='alert-dialog-title'>{t('Appearance')}</DialogTitle>\r\n                <DialogContent>\r\n                    <FormControl component='fieldset' className='theme-picker-form'>\r\n                        <FormLabel focused component='legend'>\r\n                            {t('Theme')}\r\n                        </FormLabel>\r\n                        <RadioGroup\r\n                            aria-label='theme'\r\n                            name='theme1'\r\n                            className='theme-picker-group'\r\n                            value={type}\r\n                            onChange={this.handleChange}>\r\n                            <FormControlLabel value='light' control={<Radio color='primary' />} label='Light' />\r\n                            <FormControlLabel value='dark' control={<Radio color='primary' />} label='Dark' />\r\n                        </RadioGroup>\r\n                    </FormControl>\r\n                    <FormControl component='fieldset' className='theme-picker-form'>\r\n                        <FormLabel focused component='legend'>\r\n                            {t('Accent')}\r\n                        </FormLabel>\r\n                        <RadioGroup\r\n                            aria-label='accent'\r\n                            name='accent1'\r\n                            className='theme-picker-group'\r\n                            value={color}\r\n                            onChange={this.handleAccentChange}>\r\n                            <FormControlLabel\r\n                                value='red'\r\n                                control={\r\n                                    <Radio\r\n                                        color='primary'\r\n                                        classes={{\r\n                                            root: 'theme-picker-red'\r\n                                        }}\r\n                                    />\r\n                                }\r\n                                label='Red'\r\n                            />\r\n                            <FormControlLabel\r\n                                value='orange'\r\n                                control={\r\n                                    <Radio\r\n                                        color='primary'\r\n                                        classes={{\r\n                                            root: 'theme-picker-orange'\r\n                                        }}\r\n                                    />\r\n                                }\r\n                                label='Orange'\r\n                            />\r\n                            <FormControlLabel\r\n                                value='amber'\r\n                                control={\r\n                                    <Radio\r\n                                        color='primary'\r\n                                        classes={{\r\n                                            root: 'theme-picker-amber'\r\n                                        }}\r\n                                    />\r\n                                }\r\n                                label='Amber'\r\n                            />\r\n                            <FormControlLabel\r\n                                value='green'\r\n                                control={\r\n                                    <Radio\r\n                                        color='primary'\r\n                                        classes={{\r\n                                            root: 'theme-picker-green'\r\n                                        }}\r\n                                    />\r\n                                }\r\n                                label='Green'\r\n                            />\r\n                            <FormControlLabel\r\n                                value='blue'\r\n                                control={\r\n                                    <Radio\r\n                                        color='primary'\r\n                                        classes={{\r\n                                            root: 'theme-picker-blue'\r\n                                        }}\r\n                                    />\r\n                                }\r\n                                label='Blue'\r\n                            />\r\n                            <FormControlLabel\r\n                                value='indigo'\r\n                                control={\r\n                                    <Radio\r\n                                        color='primary'\r\n                                        classes={{\r\n                                            root: 'theme-picker-indigo'\r\n                                        }}\r\n                                    />\r\n                                }\r\n                                label='Indigo'\r\n                            />\r\n                            <FormControlLabel\r\n                                value='deepPurple'\r\n                                control={\r\n                                    <Radio\r\n                                        color='primary'\r\n                                        classes={{\r\n                                            root: 'theme-picker-deep-purple'\r\n                                        }}\r\n                                    />\r\n                                }\r\n                                label='Deep Purple'\r\n                            />\r\n                        </RadioGroup>\r\n                    </FormControl>\r\n                </DialogContent>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nThemePicker.propTypes = {};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTheme,\r\n    withTranslation(),\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(ThemePicker);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\r\nimport ColorizeIcon from '../../../Assets/Icons/Colorize';\r\nimport ChatBackground from './ChatBackground';\r\nimport SidebarPage from '../SidebarPage';\r\nimport SharedMediaIcon from '../../../Assets/Icons/SharedMedia';\r\nimport ThemePicker from '../ThemePicker';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './General.css';\r\n\r\nclass General extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            backgrounds: null,\r\n            openChatBackground: false\r\n        };\r\n\r\n        this.themePickerRef = React.createRef();\r\n    }\r\n\r\n    handleAppearance = () => {\r\n        this.themePickerRef.current.open();\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.loadContent();\r\n    }\r\n\r\n    loadContent = () => {\r\n        TdLibController.send({\r\n            '@type': 'getBackgrounds',\r\n            for_dark_theme: false\r\n        }).then(backgrounds => this.setState({ backgrounds }));\r\n    };\r\n\r\n    openChatBackground = () => {\r\n        if (!this.state.backgrounds) return;\r\n\r\n        this.setState({\r\n            openChatBackground: true\r\n        });\r\n    };\r\n\r\n    closeChatBackground = () => {\r\n        this.setState({\r\n            openChatBackground: false\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { t, onClose } = this.props;\r\n        const { backgrounds, openChatBackground } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={onClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{t('GeneralSettings')}</span>\r\n                    </div>\r\n                </div>\r\n                <div className='sidebar-page-content'>\r\n                    <div className='sidebar-page-section'>\r\n                        <ListItem autoFocus={false} className='settings-list-item' button onClick={this.openChatBackground}>\r\n                            <ListItemIcon>\r\n                                <SharedMediaIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('ChatBackground')} />\r\n                        </ListItem>\r\n                        <ListItem autoFocus={false} className='settings-list-item' button onClick={this.handleAppearance}>\r\n                            <ListItemIcon>\r\n                                <ColorizeIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('Appearance')} />\r\n                        </ListItem>\r\n                    </div>\r\n                </div>\r\n                <SidebarPage open={openChatBackground} onClose={this.closeChatBackground}>\r\n                    <ChatBackground backgrounds={backgrounds} />\r\n                </SidebarPage>\r\n                <ThemePicker ref={this.themePickerRef} />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nGeneral.propTypes = {\r\n    onClose: PropTypes.func\r\n};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTranslation(),\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(General);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport ArrowBackIcon from '../../Assets/Icons/Back';\r\nimport LocalizationStore from '../../Stores/LocalizationStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './Language.css';\r\n\r\nclass Language extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { i18n } = props;\r\n        const language = i18n ? i18n.language : null;\r\n\r\n        this.state = {\r\n            language: language || 'en'\r\n        };\r\n    }\r\n\r\n    handleChange = language => {\r\n        this.setState({ language });\r\n\r\n        TdLibController.clientUpdate({ '@type': 'clientUpdateLanguageChange', language });\r\n    };\r\n\r\n    render() {\r\n        const { t, onClose } = this.props;\r\n        const { language } = this.state;\r\n        const info = LocalizationStore.info || { language_packs: [] };\r\n\r\n        const languages = info.language_packs.map(x => (\r\n            <div key={x.id} className='settings-item' onClick={() => this.handleChange(x.id)}>\r\n                <Radio\r\n                    color='primary'\r\n                    className='settings-item-control'\r\n                    checked={language === x.id}\r\n                    tabIndex={-1}\r\n                    inputProps={{ 'aria-labelledby': 'label-2' }}\r\n                />\r\n                <ListItemText id='label-2' primary={x.name} secondary={x.native_name} />\r\n            </div>\r\n        ));\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={onClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{t('Language')}</span>\r\n                    </div>\r\n                </div>\r\n                <div className='sidebar-page-content'>{languages}</div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nLanguage.propTypes = {\r\n    onClose: PropTypes.func\r\n};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTranslation(),\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(Language);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\r\nimport SectionHeader from '../SectionHeader';\r\nimport NotificationStore from '../../../Stores/NotificationStore';\r\nimport OptionStore from '../../../Stores/OptionStore';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './Notifications.css';\r\n\r\nclass Notifications extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\r\n\r\n        this.state = {\r\n            privateChatsSettings: NotificationStore.settings.get('notificationSettingsScopePrivateChats'),\r\n            groupChatsSettings: NotificationStore.settings.get('notificationSettingsScopeGroupChats'),\r\n            channelChatsSettings: NotificationStore.settings.get('notificationSettingsScopeChannelChats'),\r\n            contactJoined: !contactJoinedOption || !contactJoinedOption.value\r\n        };\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\r\n        this.setScopeNotificationSettings('notificationSettingsScopePrivateChats', privateChatsSettings);\r\n        this.setScopeNotificationSettings('notificationSettingsScopeGroupChats', groupChatsSettings);\r\n        this.setScopeNotificationSettings('notificationSettingsScopeChannelChats', channelChatsSettings);\r\n        this.setContactJoinedOption(contactJoined);\r\n    }\r\n\r\n    setContactJoinedOption() {\r\n        const { contactJoined } = this.state;\r\n\r\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\r\n        const oldContactJoined = !contactJoinedOption || !contactJoinedOption.value;\r\n        if (oldContactJoined === contactJoined) return;\r\n\r\n        TdLibController.send({\r\n            '@type': 'setOption',\r\n            name: 'disable_contact_registered_notifications',\r\n            value: {\r\n                '@type': 'optionValueBoolean',\r\n                value: !contactJoined\r\n            }\r\n        });\r\n    }\r\n\r\n    setScopeNotificationSettings(scope, settings) {\r\n        if (!scope) return;\r\n        if (!settings) return;\r\n        const oldSettings = NotificationStore.settings.get(scope);\r\n        if (!oldSettings) return;\r\n\r\n        const { mute_for, show_preview } = settings;\r\n        const { mute_for: oldMuteFor, show_preview: oldShowPreview } = oldSettings;\r\n        if (mute_for === oldMuteFor && show_preview === oldShowPreview) return;\r\n\r\n        TdLibController.send({\r\n            '@type': 'setScopeNotificationSettings',\r\n            scope: { '@type': scope },\r\n            notification_settings: settings\r\n        });\r\n    }\r\n\r\n    handleMuteFor = property => {\r\n        const settings = this.state[property];\r\n        if (!settings) return;\r\n\r\n        const { mute_for } = settings;\r\n        const newSettings = { ...settings, mute_for: mute_for === 0 ? 365 * 24 * 60 * 60 : 0 };\r\n\r\n        this.setState({ [property]: newSettings });\r\n    };\r\n\r\n    handleShowPreview = property => {\r\n        const settings = this.state[property];\r\n        if (!settings) return;\r\n\r\n        const { show_preview } = settings;\r\n        const newSettings = { ...settings, show_preview: !show_preview };\r\n\r\n        this.setState({ [property]: newSettings });\r\n    };\r\n\r\n    handleContactJoined = () => {\r\n        this.setState({ contactJoined: !this.state.contactJoined });\r\n    };\r\n\r\n    isEnabled(settings) {\r\n        if (!settings) return false;\r\n\r\n        const { mute_for } = settings;\r\n\r\n        return mute_for === 0;\r\n    }\r\n\r\n    showPreview(settings) {\r\n        if (!settings) return false;\r\n\r\n        const { show_preview } = settings;\r\n\r\n        return show_preview;\r\n    }\r\n\r\n    render() {\r\n        const { t, onClose } = this.props;\r\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={onClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{t('Notifications')}</span>\r\n                    </div>\r\n                </div>\r\n                <div className='sidebar-page-content'>\r\n                    <div className='sidebar-page-section'>\r\n                        <SectionHeader>{t('NotificationsPrivateChats')}</SectionHeader>\r\n                        <div className='settings-item' onClick={() => this.handleMuteFor('privateChatsSettings')}>\r\n                            <Checkbox\r\n                                color='primary'\r\n                                className='settings-item-control'\r\n                                checked={this.isEnabled(privateChatsSettings)}\r\n                                tabIndex={-1}\r\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\r\n                            />\r\n                            <ListItemText\r\n                                id='label-1'\r\n                                primary={t('NotificationsForPrivateChats')}\r\n                                secondary={\r\n                                    this.isEnabled(privateChatsSettings)\r\n                                        ? t('NotificationsEnabled')\r\n                                        : t('NotificationsDisabled')\r\n                                }\r\n                            />\r\n                        </div>\r\n                        <div className='settings-item' onClick={() => this.handleShowPreview('privateChatsSettings')}>\r\n                            <Checkbox\r\n                                color='primary'\r\n                                className='settings-item-control'\r\n                                checked={this.showPreview(privateChatsSettings)}\r\n                                tabIndex={-1}\r\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\r\n                            />\r\n                            <ListItemText\r\n                                id='label-2'\r\n                                primary={t('MessagePreview')}\r\n                                secondary={\r\n                                    this.showPreview(privateChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\r\n                                }\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className='sidebar-page-section-divider' />\r\n                    <div className='sidebar-page-section'>\r\n                        <SectionHeader>{t('NotificationsGroups')}</SectionHeader>\r\n                        <div className='settings-item' onClick={() => this.handleMuteFor('groupChatsSettings')}>\r\n                            <Checkbox\r\n                                color='primary'\r\n                                className='settings-item-control'\r\n                                checked={this.isEnabled(groupChatsSettings)}\r\n                                tabIndex={-1}\r\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\r\n                            />\r\n                            <ListItemText\r\n                                id='label-1'\r\n                                primary={t('NotificationsForGroups')}\r\n                                secondary={\r\n                                    this.isEnabled(groupChatsSettings)\r\n                                        ? t('NotificationsEnabled')\r\n                                        : t('NotificationsDisabled')\r\n                                }\r\n                            />\r\n                        </div>\r\n                        <div className='settings-item' onClick={() => this.handleShowPreview('groupChatsSettings')}>\r\n                            <Checkbox\r\n                                color='primary'\r\n                                className='settings-item-control'\r\n                                checked={this.showPreview(groupChatsSettings)}\r\n                                tabIndex={-1}\r\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\r\n                            />\r\n                            <ListItemText\r\n                                id='label-2'\r\n                                primary={t('MessagePreview')}\r\n                                secondary={\r\n                                    this.showPreview(groupChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\r\n                                }\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className='sidebar-page-section-divider' />\r\n                    <div className='sidebar-page-section'>\r\n                        <SectionHeader>{t('NotificationsChannels')}</SectionHeader>\r\n                        <div className='settings-item' onClick={() => this.handleMuteFor('channelChatsSettings')}>\r\n                            <Checkbox\r\n                                color='primary'\r\n                                className='settings-item-control'\r\n                                checked={this.isEnabled(channelChatsSettings)}\r\n                                tabIndex={-1}\r\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\r\n                            />\r\n                            <ListItemText\r\n                                id='label-1'\r\n                                primary={t('NotificationsForChannels')}\r\n                                secondary={\r\n                                    this.isEnabled(channelChatsSettings)\r\n                                        ? t('NotificationsEnabled')\r\n                                        : t('NotificationsDisabled')\r\n                                }\r\n                            />\r\n                        </div>\r\n                        <div className='settings-item' onClick={() => this.handleShowPreview('channelChatsSettings')}>\r\n                            <Checkbox\r\n                                color='primary'\r\n                                className='settings-item-control'\r\n                                checked={this.showPreview(channelChatsSettings)}\r\n                                tabIndex={-1}\r\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\r\n                            />\r\n                            <ListItemText\r\n                                id='label-2'\r\n                                primary={t('MessagePreview')}\r\n                                secondary={\r\n                                    this.showPreview(channelChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\r\n                                }\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className='sidebar-page-section-divider' />\r\n                    <div className='sidebar-page-section'>\r\n                        <SectionHeader>{t('NotificationsOther')}</SectionHeader>\r\n                        <div className='settings-item' onClick={this.handleContactJoined}>\r\n                            <Checkbox\r\n                                color='primary'\r\n                                className='settings-item-control'\r\n                                checked={contactJoined}\r\n                                tabIndex={-1}\r\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\r\n                            />\r\n                            <ListItemText\r\n                                id='label-1'\r\n                                primary={t('ContactJoined')}\r\n                                secondary={contactJoined ? t('ContactJoinedEnabled') : t('ContactJoinedDisabled')}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nNotifications.propTypes = {\r\n    onClose: PropTypes.func\r\n};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTranslation(),\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(Notifications);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <g transform='translate(-1.000000, -1.000000)' fillRule='nonzero'>\r\n        <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M8,11 L16,11 C16.5522847,11 17,11.4477153 17,12 C17,12.5128358 16.6139598,12.9355072 16.1166211,12.9932723 L16,13 L8,13 C7.44771525,13 7,12.5522847 7,12 C7,11.4871642 7.38604019,11.0644928 7.88337887,11.0067277 L8,11 L16,11 L8,11 Z' />\r\n    </g>,\r\n    'Stop'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport StopIcon from '../../Assets/Icons/Stop';\r\nimport { getMessageDate } from '../../Utils/Chat';\r\nimport './Session.css';\r\n\r\nclass Session extends React.Component {\r\n    state = {\r\n        contextMenu: false,\r\n        left: 0,\r\n        top: 0\r\n    };\r\n\r\n    handleContextMenu = event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { session } = this.props;\r\n        if (!session) return;\r\n        if (session.is_current) return;\r\n\r\n        const { contextMenu } = this.state;\r\n\r\n        if (contextMenu) {\r\n            this.setState({ contextMenu: false });\r\n        } else {\r\n            const left = event.clientX;\r\n            const top = event.clientY;\r\n\r\n            this.setState({\r\n                contextMenu: true,\r\n                left,\r\n                top\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseContextMenu = event => {\r\n        this.setState({\r\n            contextMenu: false,\r\n            left: 0,\r\n            top: 0\r\n        });\r\n    };\r\n\r\n    handleTerminate = event => {\r\n        this.handleCloseContextMenu(event);\r\n\r\n        const { onTerminate, session } = this.props;\r\n\r\n        onTerminate(session);\r\n    };\r\n\r\n    render() {\r\n        const { session, t } = this.props;\r\n        if (!session) return null;\r\n\r\n        const { left, top, contextMenu } = this.state;\r\n        const {\r\n            is_current,\r\n            application_name,\r\n            application_version,\r\n            device_model,\r\n            platform,\r\n            system_version,\r\n            ip,\r\n            region,\r\n            country,\r\n            last_active_date\r\n        } = session;\r\n        const showDate = !is_current;\r\n\r\n        return (\r\n            <>\r\n                <ListItem className='settings-list-item' button onContextMenu={this.handleContextMenu}>\r\n                    <div className='session'>\r\n                        <div className='session-title'>\r\n                            <div className='session-app'>{`${application_name} ${application_version}`}</div>\r\n                            {showDate && (\r\n                                <div className='session-date'>{getMessageDate({ date: last_active_date })}</div>\r\n                            )}\r\n                        </div>\r\n                        <div className='session-subtitle1'>{`${device_model}, ${platform} ${system_version}`}</div>\r\n                        <div className='session-subtitle2'>\r\n                            {`${ip} - `}\r\n                            {region && `${region}, `}\r\n                            {country && `${country}`}\r\n                        </div>\r\n                    </div>\r\n                </ListItem>\r\n                <Popover\r\n                    open={contextMenu}\r\n                    onClose={this.handleCloseContextMenu}\r\n                    anchorReference='anchorPosition'\r\n                    anchorPosition={{ top, left }}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'left'\r\n                    }}\r\n                    onMouseDown={e => e.stopPropagation()}>\r\n                    <MenuList onClick={e => e.stopPropagation()}>\r\n                        <MenuItem onClick={this.handleTerminate}>\r\n                            <ListItemIcon>\r\n                                <StopIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('Terminate')} />\r\n                        </MenuItem>\r\n                    </MenuList>\r\n                </Popover>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nSession.propTypes = {\r\n    session: PropTypes.object.isRequired,\r\n    onTerminate: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withTranslation()(Session);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\r\nimport Session from '../../Tile/Session';\r\nimport StopIcon from '../../../Assets/Icons/Stop';\r\nimport SectionHeader from '../SectionHeader';\r\nimport { modalManager } from '../../../Utils/Modal';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './ActiveSessions.css';\r\n\r\nclass ActiveSessions extends React.Component {\r\n    state = {\r\n        open: false,\r\n        openAll: false,\r\n        session: null\r\n    };\r\n\r\n    handleTerminate = session => {\r\n        this.setState({\r\n            open: true,\r\n            session\r\n        });\r\n    };\r\n\r\n    handleTerminateAllOther = () => {\r\n        this.setState({\r\n            openAll: true\r\n        });\r\n    };\r\n\r\n    handleCloseConfirmation = () => {\r\n        this.setState({\r\n            open: false,\r\n            session: null\r\n        });\r\n    };\r\n\r\n    handleDoneConfirmation = async () => {\r\n        const { sessions } = this.props;\r\n        const { session } = this.state;\r\n        if (!session) return;\r\n\r\n        this.setState({\r\n            open: false,\r\n            session: null\r\n        });\r\n\r\n        await TdLibController.send({\r\n            '@type': 'terminateSession',\r\n            session_id: session.id\r\n        });\r\n\r\n        sessions.sessions = sessions.sessions.filter(x => x.id !== session.id);\r\n        this.forceUpdate();\r\n    };\r\n\r\n    handleCloseAllConfirmation = () => {\r\n        this.setState({\r\n            openAll: false\r\n        });\r\n    };\r\n\r\n    handleDoneAllConfirmation = async () => {\r\n        const { sessions } = this.props;\r\n\r\n        this.setState({\r\n            openAll: false\r\n        });\r\n\r\n        await TdLibController.send({\r\n            '@type': 'terminateAllOtherSessions'\r\n        });\r\n\r\n        sessions.sessions = sessions.sessions.filter(x => !x.is_current);\r\n        this.forceUpdate();\r\n    };\r\n\r\n    render() {\r\n        const { t, sessions, onClose } = this.props;\r\n        const { open, openAll } = this.state;\r\n\r\n        const current = sessions.sessions.find(x => x.is_current);\r\n        const other = sessions.sessions.filter(x => !x.is_current);\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={onClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{t('SessionsTitle')}</span>\r\n                    </div>\r\n                </div>\r\n                <div className='sidebar-page-content'>\r\n                    {Boolean(current) && (\r\n                        <div className='sidebar-page-section'>\r\n                            <SectionHeader>{t('CurrentSession')}</SectionHeader>\r\n                            <Session session={current} onTerminate={this.handleTerminate} />\r\n                            {other.length > 0 && (\r\n                                <ListItem\r\n                                    className='settings-list-item'\r\n                                    button\r\n                                    disableRipple\r\n                                    onClick={this.handleTerminateAllOther}>\r\n                                    <ListItemIcon>\r\n                                        <StopIcon color='secondary' />\r\n                                    </ListItemIcon>\r\n                                    <ListItemText\r\n                                        primaryTypographyProps={{ color: 'secondary' }}\r\n                                        primary={t('TerminateAllSessions')}\r\n                                    />\r\n                                </ListItem>\r\n                            )}\r\n                        </div>\r\n                    )}\r\n                    {other.length > 0 && (\r\n                        <>\r\n                            <div className='sidebar-page-section-divider' />\r\n                            <div className='sidebar-page-section'>\r\n                                <SectionHeader>{t('OtherSessions')}</SectionHeader>\r\n                                {other.map(x => (\r\n                                    <Session key={x.id} session={x} onTerminate={this.handleTerminate} />\r\n                                ))}\r\n                            </div>\r\n                        </>\r\n                    )}\r\n                </div>\r\n                <Dialog\r\n                    manager={modalManager}\r\n                    transitionDuration={0}\r\n                    open={open}\r\n                    onClose={this.handleCloseConfirmation}\r\n                    aria-labelledby='form-dialog-title'>\r\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\r\n                            {t('TerminateSessionText')}\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleCloseConfirmation} color='primary'>\r\n                            {t('Cancel')}\r\n                        </Button>\r\n                        <Button onClick={this.handleDoneConfirmation} color='primary'>\r\n                            {t('Ok')}\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n                <Dialog\r\n                    manager={modalManager}\r\n                    transitionDuration={0}\r\n                    open={openAll}\r\n                    onClose={this.handleCloseAllConfirmation}\r\n                    aria-labelledby='form-dialog-title'>\r\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\r\n                            {t('AreYouSureSessions')}\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleCloseAllConfirmation} color='primary'>\r\n                            {t('Cancel')}\r\n                        </Button>\r\n                        <Button onClick={this.handleDoneAllConfirmation} color='primary'>\r\n                            {t('Ok')}\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nActiveSessions.propTypes = {\r\n    sessions: PropTypes.object.isRequired,\r\n    onClose: PropTypes.func\r\n};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTranslation(),\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(ActiveSessions);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M18,1 C20.6887547,1 22.8818181,3.12230671 22.9953805,5.78311038 L23,6 L23,9 C23,9.55228475 22.5522847,10 22,10 C21.4871642,10 21.0644928,9.61395981 21.0067277,9.11662113 L21,9 L21,6 C21,4.34314575 19.6568542,3 18,3 C16.4023191,3 15.0963391,4.24891996 15.0050927,5.82372721 L15,6 L15,8 C16.6568542,8 18,9.34314575 18,11 L18,19 C18,20.6568542 16.6568542,22 15,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,11 C2,9.34314575 3.34314575,8 5,8 L13,8 L13,6 C13,3.3112453 15.1223067,1.11818189 17.7831104,1.00461951 L18,1 Z M15,10 L5,10 C4.44771525,10 4,10.4477153 4,11 L4,19 C4,19.5522847 4.44771525,20 5,20 L15,20 C15.5522847,20 16,19.5522847 16,19 L16,11 C16,10.4477153 15.5522847,10 15,10 Z M10,13.5 C10.8284271,13.5 11.5,14.1715729 11.5,15 C11.5,15.8284271 10.8284271,16.5 10,16.5 C9.17157288,16.5 8.5,15.8284271 8.5,15 C8.5,14.1715729 9.17157288,13.5 10,13.5 Z' />,\r\n    'Unblock'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useTranslation, withTranslation } from 'react-i18next';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\r\nimport SectionHeader from '../SectionHeader';\r\nimport User from '../../Tile/User';\r\nimport UnblockIcon from '../../../Assets/Icons/Unblock';\r\nimport { loadUsersContent } from '../../../Utils/File';\r\nimport { openUser } from '../../../Actions/Client';\r\nimport FileStore from '../../../Stores/FileStore';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './BlockedUsers.css';\r\n\r\nconst BlockedUser = React.memo(({ userId, onClick, onUnblock }) => {\r\n    const [contextMenu, setContextMenu] = React.useState(false);\r\n    const [top, setTop] = React.useState(0);\r\n    const [left, setLeft] = React.useState(0);\r\n    const { t } = useTranslation();\r\n\r\n    const handleContextMenu = event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        if (contextMenu) {\r\n            setContextMenu(false);\r\n        } else {\r\n            const { clientX, clientY } = event;\r\n\r\n            setContextMenu(true);\r\n            setLeft(clientX);\r\n            setTop(clientY);\r\n        }\r\n    };\r\n\r\n    const handleCloseContextMenu = () => {\r\n        setContextMenu(false);\r\n        setLeft(0);\r\n        setTop(0);\r\n    };\r\n\r\n    const handleClick = () => {\r\n        onClick(userId);\r\n    };\r\n\r\n    const handleUnblock = () => {\r\n        handleCloseContextMenu();\r\n        onUnblock(userId);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <ListItem className='settings-list-item' button onClick={handleClick} onContextMenu={handleContextMenu}>\r\n                <User userId={userId} />\r\n            </ListItem>\r\n            <Popover\r\n                open={contextMenu}\r\n                onClose={handleCloseContextMenu}\r\n                anchorReference='anchorPosition'\r\n                anchorPosition={{ top, left }}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'right'\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'left'\r\n                }}\r\n                onMouseDown={e => e.stopPropagation()}>\r\n                <MenuList onClick={e => e.stopPropagation()}>\r\n                    <MenuItem onClick={handleUnblock}>\r\n                        <ListItemIcon>\r\n                            <UnblockIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('Unblock')} />\r\n                    </MenuItem>\r\n                </MenuList>\r\n            </Popover>\r\n        </>\r\n    );\r\n});\r\n\r\nBlockedUser.propTypes = {\r\n    userId: PropTypes.number.isRequired,\r\n    onClick: PropTypes.func.isRequired,\r\n    onUnblock: PropTypes.func.isRequired\r\n};\r\n\r\nclass BlockedUsers extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.loadContent();\r\n    }\r\n\r\n    loadContent() {\r\n        const { users } = this.props;\r\n\r\n        const store = FileStore.getStore();\r\n\r\n        loadUsersContent(store, users.user_ids);\r\n    }\r\n\r\n    handleUnblock = async userId => {\r\n        await TdLibController.send({\r\n           '@type': 'unblockUser',\r\n            user_id: userId\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { onClose, users, t } = this.props;\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={onClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{t('BlockedUsers')}</span>\r\n                    </div>\r\n                </div>\r\n                <div className='sidebar-page-content'>\r\n                    <div className='sidebar-page-section'>\r\n                        { users.user_ids.length > 0 ? (\r\n                            <>\r\n                                <SectionHeader multiline>{t('BlockedUsersInfo')}</SectionHeader>\r\n                                {\r\n                                    users.user_ids.map(x => <BlockedUser key={x} userId={x} onClick={openUser} onUnblock={this.handleUnblock}/>)\r\n                                }\r\n                            </>\r\n                        ) : (\r\n                            <SectionHeader>{t('NoBlocked')}</SectionHeader>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nBlockedUsers.propTypes = {\r\n    users: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withTranslation()(BlockedUsers);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <g transform='translate(0.000000, -2.000000)' fillRule='nonzero'>\r\n        <path d='M18,2 C20.209139,2 22,3.790861 22,6 L22,6 L22,8 C22,8.55228475 21.5522847,9 21,9 C20.4477153,9 20,8.55228475 20,8 L20,8 L20,6 C20,4.8954305 19.1045695,4 18,4 L18,4 L4,4 C2.8954305,4 2,4.8954305 2,6 L2,6 L2,14 C2,15.1045695 2.8954305,16 4,16 L4,16 L14,16 C14.5522847,16 15,16.4477153 15,17 C15,17.5522847 14.5522847,18 14,18 L14,18 L12,18 L12,20 L14,20 C14.5128358,20 14.9355072,20.3860402 14.9932723,20.8833789 L15,21 C15,21.5522847 14.5522847,22 14,22 L14,22 L8,22 C7.44771525,22 7,21.5522847 7,21 C7,20.4477153 7.44771525,20 8,20 L8,20 L10,20 L10,18 L4,18 C1.85780461,18 0.108921124,16.3160315 0.00489530723,14.1996403 L0,14 L0,6 C0,3.790861 1.790861,2 4,2 L4,2 Z M22,11 C23.1045695,11 24,11.8954305 24,13 L24,20 C24,21.1045695 23.1045695,22 22,22 L19,22 C17.8954305,22 17,21.1045695 17,20 L17,13 C17,11.8954305 17.8954305,11 19,11 L22,11 Z M22,13 L19,13 L19,20 L22,20 L22,13 Z' />\r\n    </g>,\r\n    'Device'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <g transform='translate(-1.000000, -3.000000)' fillRule='nonzero'>\r\n        <path d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.724477,16.1632234 17,16.915291 17,17.6925226 L17,18.5 C17,19.8807119 15.8807119,21 14.5,21 L3.5,21 C2.11928813,21 1,19.8807119 1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.10781409,17.0940989 3,17.3883868 3,17.6925212 L3,18.5 C3,18.7761424 3.22385763,19 3.5,19 L14.5,19 C14.7761424,19 15,18.7761424 15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M16,10 L22,10 C22.5522847,10 23,10.4477153 23,11 C23,11.5128358 22.6139598,11.9355072 22.1166211,11.9932723 L22,12 L16,12 C15.4477153,12 15,11.5522847 15,11 C15,10.4871642 15.3860402,10.0644928 15.8833789,10.0067277 L16,10 L22,10 L16,10 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z' />\r\n    </g>,\r\n    'RemoveMember'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ActiveSessions from './ActiveSessions';\r\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\r\nimport BlockedUsers from './BlockedUsers';\r\nimport DeviceIcon from '../../../Assets/Icons/Device';\r\nimport RemoveMemberIcon from '../../../Assets/Icons/RemoveMember';\r\nimport SidebarPage from '../SidebarPage';\r\nimport SectionHeader from '../SectionHeader';\r\nimport UserStore from '../../../Stores/UserStore';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './PrivacySecurity.css';\r\n\r\nclass PrivacySecurity extends React.Component {\r\n    state = {\r\n        sessions: null,\r\n        users: null,\r\n        openBlockedUsers: false,\r\n        openActiveSessions: false\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.loadContent();\r\n\r\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\r\n    }\r\n\r\n    onUpdateUserFullInfo = update => {\r\n        const { user_id, user_full_info } = update;\r\n        const { users } = this.state;\r\n        if (!users) return;\r\n\r\n        const { total_count, user_ids } = users;\r\n        const { is_blocked } = user_full_info;\r\n        const prevIsBlocked = user_ids.indexOf(user_id) !== -1;\r\n        if (is_blocked === prevIsBlocked) return;\r\n\r\n        if (is_blocked) {\r\n            this.setState({\r\n                users: {\r\n                    ...users,\r\n                    total_count: total_count + 1,\r\n                    user_ids: [user_id, ...user_ids]\r\n                }\r\n            });\r\n        } else {\r\n            this.setState({\r\n                users: {\r\n                    ...users,\r\n                    total_count: total_count - 1,\r\n                    user_ids: user_ids.filter(x => x !== user_id)\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    async loadContent() {\r\n        TdLibController.send({\r\n            '@type': 'getActiveSessions'\r\n        }).then(sessions => this.setState({ sessions }));\r\n\r\n        TdLibController.send({\r\n            '@type': 'getBlockedUsers',\r\n            offset: 0,\r\n            limit: 100\r\n        }).then(users => this.setState({ users }));\r\n    }\r\n\r\n    openActiveSessions = () => {\r\n        if (!this.state.sessions) return;\r\n\r\n        this.setState({\r\n            openActiveSessions: true\r\n        });\r\n    };\r\n\r\n    closeActiveSessions = () => {\r\n        this.setState({\r\n            openActiveSessions: false\r\n        });\r\n    };\r\n\r\n    openBlockedUsers = () => {\r\n        if (!this.state.users) return;\r\n\r\n        this.setState({\r\n            openBlockedUsers: true\r\n        });\r\n    };\r\n\r\n    closeBlockedUsers = () => {\r\n        this.setState({\r\n            openBlockedUsers: false\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { t, onClose } = this.props;\r\n        const { openBlockedUsers, users, openActiveSessions, sessions } = this.state;\r\n\r\n        const sessionsCount =\r\n            sessions && sessions.sessions.length > 0\r\n                ? sessions.sessions.length === 1\r\n                    ? '1 session'\r\n                    : `${sessions.sessions.length} sessions`\r\n                : '1 session';\r\n\r\n        const usersCount =\r\n            users && users.total_count > 0\r\n                ? users.total_count === 1\r\n                    ? '1 user'\r\n                    : `${users.total_count} users`\r\n                : 'no users';\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={onClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{t('PrivacySettings')}</span>\r\n                    </div>\r\n                </div>\r\n                <div className='sidebar-page-content'>\r\n                    <div className='sidebar-page-section'>\r\n                        <ListItem\r\n                            className='settings-list-item2'\r\n                            role={undefined}\r\n                            button\r\n                            onClick={this.openBlockedUsers}>\r\n                            <ListItemIcon className='settings-list-item-icon'>\r\n                                <RemoveMemberIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText\r\n                                id='label-2'\r\n                                className='settings-list-item-text'\r\n                                primary={t('BlockedUsers')}\r\n                                secondary={usersCount}\r\n                            />\r\n                        </ListItem>\r\n                        <ListItem\r\n                            className='settings-list-item2'\r\n                            role={undefined}\r\n                            button\r\n                            onClick={this.openActiveSessions}>\r\n                            <ListItemIcon className='settings-list-item-icon'>\r\n                                <DeviceIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText\r\n                                id='label-2'\r\n                                className='settings-list-item-text'\r\n                                primary={t('SessionsTitle')}\r\n                                secondary={sessionsCount}\r\n                            />\r\n                        </ListItem>\r\n                    </div>\r\n                    <div className='sidebar-page-section-divider' />\r\n                    <div className='sidebar-page-section'>\r\n                        <SectionHeader>{t('PrivacyTitle')}</SectionHeader>\r\n                        <ListItem className='settings-list-item2' role={undefined} button>\r\n                            <ListItemText\r\n                                className='settings-list-item-text2'\r\n                                primary={t('PrivacyPhoneTitle')}\r\n                                secondary={t('LastSeenContacts')}\r\n                            />\r\n                        </ListItem>\r\n                        <ListItem className='settings-list-item2' role={undefined} button>\r\n                            <ListItemText\r\n                                className='settings-list-item-text2'\r\n                                primary={t('LastSeenTitle')}\r\n                                secondary={t('LastSeenEverybody')}\r\n                            />\r\n                        </ListItem>\r\n                        <ListItem className='settings-list-item2' role={undefined} button>\r\n                            <ListItemText\r\n                                className='settings-list-item-text2'\r\n                                primary={t('PrivacyProfilePhotoTitle')}\r\n                                secondary={t('LastSeenEverybody')}\r\n                            />\r\n                        </ListItem>\r\n                        <ListItem className='settings-list-item2' role={undefined} button>\r\n                            <ListItemText\r\n                                className='settings-list-item-text2'\r\n                                primary={t('PrivacyForwardsTitle')}\r\n                                secondary={t('LastSeenEverybody')}\r\n                            />\r\n                        </ListItem>\r\n                        <ListItem className='settings-list-item2' role={undefined} button>\r\n                            <ListItemText\r\n                                className='settings-list-item-text2'\r\n                                primary={t('WhoCanAddMe')}\r\n                                secondary={t('LastSeenEverybody')}\r\n                            />\r\n                        </ListItem>\r\n                    </div>\r\n                </div>\r\n                <SidebarPage open={openBlockedUsers} onClose={this.closeBlockedUsers}>\r\n                    <BlockedUsers users={users} />\r\n                </SidebarPage>\r\n                <SidebarPage open={openActiveSessions} onClose={this.closeActiveSessions}>\r\n                    <ActiveSessions sessions={sessions} />\r\n                </SidebarPage>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nPrivacySecurity.propTypes = {\r\n    onClose: PropTypes.func\r\n};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTranslation(),\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(PrivacySecurity);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\r\nimport Main from './Main';\r\nimport EditProfile from './EditProfile';\r\nimport Filters from './Filters';\r\nimport General from './General';\r\nimport Language from '../Language';\r\nimport Notifications from './Notifications';\r\nimport PrivacySecurity from './PrivacySecurity';\r\nimport SidebarPage from '../SidebarPage';\r\nimport { loadChatContent } from '../../../Utils/File';\r\nimport ChatStore from '../../../Stores/ChatStore';\r\nimport FileStore from '../../../Stores/FileStore';\r\nimport UserStore from '../../../Stores/UserStore';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './Settings.css';\r\n\r\nclass Settings extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            openEditProfile: false,\r\n            openGeneral: false,\r\n            openNotifications: false,\r\n            openPrivacySecurity: false,\r\n            openLanguage: false,\r\n            openFilters: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadContent();\r\n\r\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ChatStore.off('updateChatPhoto', this.onUpdateChatPhoto);\r\n    }\r\n\r\n    onUpdateChatPhoto = update => {\r\n        const { chatId } = this.props;\r\n        const { chat_id, photo } = update;\r\n\r\n        if (chat_id !== chatId) return;\r\n        if (!photo) return;\r\n\r\n        const store = FileStore.get();\r\n        loadChatContent(store, chatId, true);\r\n    };\r\n\r\n    async loadContent() {\r\n        const { chatId } = this.props;\r\n\r\n        const store = FileStore.getStore();\r\n\r\n        loadChatContent(store, chatId, true);\r\n\r\n        const result = await TdLibController.send({\r\n            '@type': 'getUserFullInfo',\r\n            user_id: UserStore.getMyId()\r\n        });\r\n\r\n        UserStore.setFullInfo(UserStore.getMyId(), result);\r\n    }\r\n\r\n    openEditProfile = () => {\r\n        this.setState({\r\n            openEditProfile: true\r\n        });\r\n    };\r\n\r\n    closeEditProfile = () => {\r\n        this.setState({\r\n            openEditProfile: false\r\n        });\r\n    };\r\n\r\n    openGeneral = () => {\r\n        this.setState({\r\n            openGeneral: true\r\n        });\r\n    };\r\n\r\n    closeGeneral = () => {\r\n        this.setState({\r\n            openGeneral: false\r\n        });\r\n    };\r\n\r\n    openNotifications = () => {\r\n        this.setState({\r\n            openNotifications: true\r\n        });\r\n    };\r\n\r\n    closeNotifications = () => {\r\n        this.setState({\r\n            openNotifications: false\r\n        });\r\n    };\r\n\r\n    openPrivacySecurity = () => {\r\n        this.setState({\r\n            openPrivacySecurity: true\r\n        });\r\n    };\r\n\r\n    closePrivacySecurity = () => {\r\n        this.setState({\r\n            openPrivacySecurity: false\r\n        });\r\n    };\r\n\r\n    openLanguage = () => {\r\n        this.setState({\r\n            openLanguage: true\r\n        });\r\n    };\r\n\r\n    closeLanguage = () => {\r\n        this.setState({\r\n            openLanguage: false\r\n        });\r\n    };\r\n\r\n    openFilters = () => {\r\n        this.setState({\r\n            openFilters: true\r\n        });\r\n    };\r\n\r\n    closeFilters = () => {\r\n        this.setState({\r\n            openFilters: false\r\n        });\r\n    };\r\n\r\n    handleCloseSettings = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateSettings',\r\n            open: false\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, popup } = this.props;\r\n        const { openEditProfile, openGeneral, openNotifications, openPrivacySecurity, openLanguage, openFilters } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <Main\r\n                    chatId={chatId}\r\n                    popup={popup}\r\n                    onClose={this.handleCloseSettings}\r\n                    onEditProfile={this.openEditProfile}\r\n                    onGeneral={this.openGeneral}\r\n                    onNotifications={this.openNotifications}\r\n                    onPrivacySecurity={this.openPrivacySecurity}\r\n                    onLanguage={this.openLanguage}\r\n                    onFilters={this.openFilters}\r\n                />\r\n                <SidebarPage open={openEditProfile} onClose={this.closeEditProfile}>\r\n                    <EditProfile chatId={chatId} />\r\n                </SidebarPage>\r\n                <SidebarPage open={openGeneral} onClose={this.closeGeneral}>\r\n                    <General chatId={chatId} />\r\n                </SidebarPage>\r\n                <SidebarPage open={openNotifications} onClose={this.closeNotifications}>\r\n                    <Notifications chatId={chatId} />\r\n                </SidebarPage>\r\n                <SidebarPage open={openPrivacySecurity} onClose={this.closePrivacySecurity}>\r\n                    <PrivacySecurity />\r\n                </SidebarPage>\r\n                <SidebarPage open={openFilters} onClose={this.closeFilters}>\r\n                    <Filters />\r\n                </SidebarPage>\r\n                <SidebarPage open={openLanguage} onClose={this.closeLanguage}>\r\n                    <Language />\r\n                </SidebarPage>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nSettings.propTypes = {\r\n    chatId: PropTypes.number,\r\n    popup: PropTypes.bool\r\n};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTranslation(),\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(Settings);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ArrowBackIcon from '../../Assets/Icons/Back';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport User from '../Tile/User';\r\nimport SearchInput from './Search/SearchInput';\r\nimport VirtualizedList from '../Additional/VirtualizedList';\r\nimport { loadUsersContent } from '../../Utils/File';\r\nimport { debounce, throttle } from '../../Utils/Common';\r\nimport { openUser } from '../../Actions/Client';\r\nimport { getUserFullName } from '../../Utils/User';\r\nimport CacheStore from '../../Stores/CacheStore';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './Contacts.css';\r\n\r\nclass UserListItem extends React.Component {\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { userId, style } = this.props;\r\n        if (nextProps.userId !== userId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.style.top !== style.top) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        const { userId, onClick, style } = this.props;\r\n\r\n        return (\r\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\r\n                <User userId={userId} />\r\n            </ListItem>\r\n        );\r\n    }\r\n}\r\n\r\nclass Contacts extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.searchInputRef = React.createRef();\r\n        this.listRef = React.createRef();\r\n        this.searchListRef = React.createRef();\r\n\r\n        this.state = {\r\n            items: null,\r\n            searchItems: null\r\n        };\r\n\r\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100, false);\r\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { current } = this.searchInputRef;\r\n        if (current) {\r\n            setTimeout(() => current.focus(), 50);\r\n        }\r\n\r\n        this.loadContent();\r\n    }\r\n\r\n    handleScroll = event => {\r\n        this.handleDebounceScroll();\r\n        this.handleThrottleScroll();\r\n    };\r\n\r\n    handleDebounceScroll() {\r\n        this.loadRenderIdsContent();\r\n    }\r\n\r\n    handleThrottleScroll() {\r\n        this.loadRenderIdsContent();\r\n    }\r\n\r\n    loadRenderIdsContent = () => {\r\n        const { items, searchItems } = this.state;\r\n\r\n        const currentItems = searchItems || items;\r\n\r\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\r\n        if (!current) return;\r\n\r\n        const renderIds = current.getListRenderIds();\r\n        if (renderIds.size > 0) {\r\n            const userIds = [];\r\n            [...renderIds.keys()].forEach(key => {\r\n                userIds.push(currentItems.user_ids[key]);\r\n            });\r\n\r\n            const store = FileStore.getStore();\r\n            loadUsersContent(store, userIds);\r\n        }\r\n    };\r\n\r\n    async loadContent() {\r\n        let contacts = CacheStore.contacts;\r\n        if (!contacts) {\r\n            contacts = await TdLibController.send({\r\n                '@type': 'getContacts'\r\n            });\r\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\r\n            CacheStore.contacts = contacts;\r\n        }\r\n\r\n        const store = FileStore.getStore();\r\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\r\n\r\n        this.setState({\r\n            items: contacts\r\n        });\r\n    }\r\n\r\n    handleOpenUser = userId => {\r\n        openUser(userId, false);\r\n        this.handleClose();\r\n    };\r\n\r\n    renderItem = ({ index, style }, items) => {\r\n        const userId = items.user_ids[index];\r\n\r\n        return <UserListItem key={userId} userId={userId} onClick={() => this.handleOpenUser(userId)} style={style} />;\r\n    };\r\n\r\n    handleSearch = async text => {\r\n        const query = text.trim();\r\n        if (!query) {\r\n            this.setState({\r\n                searchItems: null\r\n            });\r\n            return;\r\n        }\r\n\r\n        const searchItems = await TdLibController.send({\r\n            '@type': 'searchContacts',\r\n            query,\r\n            limit: 1000\r\n        });\r\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\r\n            getUserFullName(x).localeCompare(getUserFullName(y))\r\n        );\r\n\r\n        const store = FileStore.getStore();\r\n        loadUsersContent(store, searchItems.user_ids.slice(0, 20));\r\n\r\n        this.setState({ searchItems });\r\n    };\r\n\r\n    handleClose = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateContacts',\r\n            open: false\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { popup } = this.props;\r\n        const { items, searchItems } = this.state;\r\n\r\n        const style = popup ? { minHeight: 800 } : null;\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\r\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\r\n                    </IconButton>\r\n                    <SearchInput inputRef={this.searchInputRef} onChange={this.handleSearch} />\r\n                </div>\r\n                <div className='contacts-content' style={style}>\r\n                    {items && (\r\n                        <VirtualizedList\r\n                            ref={this.listRef}\r\n                            className='contacts-list'\r\n                            source={items.user_ids}\r\n                            rowHeight={72}\r\n                            overScanCount={20}\r\n                            renderItem={x => this.renderItem(x, items)}\r\n                            onScroll={this.handleScroll}\r\n                        />\r\n                    )}\r\n                    {searchItems && (\r\n                        <VirtualizedList\r\n                            ref={this.searchListRef}\r\n                            className='contacts-list contacts-search-list'\r\n                            source={searchItems.user_ids}\r\n                            rowHeight={72}\r\n                            overScanCount={20}\r\n                            renderItem={x => this.renderItem(x, searchItems)}\r\n                            onScroll={this.handleScroll}\r\n                        />\r\n                    )}\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nContacts.propTypes = {\r\n    popup: PropTypes.bool\r\n};\r\n\r\nexport default Contacts;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport DownloadIcon from '../../Assets/Icons/Download';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport './UpdatePanel.css';\r\n\r\nclass UpdatePanel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { isSmallWidth } = AppStore;\r\n\r\n        this.state = {\r\n            newContentAvailable: false,\r\n            isSmallWidth\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        AppStore.on('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\r\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\r\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\r\n    }\r\n\r\n    onClientUpdatePageWidth = update => {\r\n        const { isSmallWidth } = update;\r\n\r\n        this.setState({ isSmallWidth });\r\n    };\r\n\r\n    onClientUpdateNewContentAvailable = () => {\r\n        this.setState({ newContentAvailable: true });\r\n    };\r\n\r\n    handleUpdate = () => {\r\n        if (this.handled) return;\r\n\r\n        this.handled = true;\r\n        setTimeout(() => {\r\n            window.location.reload();\r\n        }, 250);\r\n    };\r\n\r\n    render() {\r\n        const { newContentAvailable, isSmallWidth } = this.state;\r\n        const { t } = this.props;\r\n\r\n        if (!newContentAvailable) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <Button className='update-button' variant='contained' color='primary' onClick={this.handleUpdate}>\r\n                {isSmallWidth ? <DownloadIcon/> : t('Update')}\r\n            </Button>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTranslation()(UpdatePanel);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport ArrowBackIcon from '../../Assets/Icons/Back';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport NextIcon from '../../Assets/Icons/Back';\r\nimport NewChatPhoto from './NewChatPhoto';\r\nimport { openChat } from '../../Actions/Client';\r\nimport { THUMBNAIL_PRIORITY } from '../../Constants';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './NewGroup.css';\r\n\r\nclass NewChannel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.titleRef = React.createRef();\r\n        this.descriptionRef = React.createRef();\r\n\r\n        this.state = {\r\n            error: false,\r\n            defaultPhoto: null,\r\n            defaultPhotoURL: null,\r\n            defaultPhotoFile: null\r\n        };\r\n    }\r\n\r\n    handleClose = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateNewChannel',\r\n            open: false\r\n        });\r\n    };\r\n\r\n    handleDone = async () => {\r\n        const { error } = this.state;\r\n        const { defaultPhoto, defaultPhotoFile } = this.state;\r\n\r\n        const title = this.titleRef.current.value.trim();\r\n        if (!title) {\r\n            this.setState({\r\n                error: true\r\n            });\r\n            return;\r\n        }\r\n\r\n        if (error) {\r\n            this.setState({\r\n                error: false\r\n            });\r\n        }\r\n\r\n        this.handleClose();\r\n\r\n        const description = this.descriptionRef.current.value;\r\n\r\n        const chat = await TdLibController.send({\r\n            '@type': 'createNewSupergroupChat',\r\n            title,\r\n            description,\r\n            is_channel: true,\r\n            location: null\r\n        });\r\n\r\n        if (defaultPhotoFile) {\r\n            TdLibController.send({\r\n                '@type': 'setChatPhoto',\r\n                chat_id: chat.id,\r\n                photo: { '@type': 'inputFileId', id: defaultPhotoFile.id }\r\n            });\r\n        } else if (defaultPhoto) {\r\n            TdLibController.send({\r\n                '@type': 'setChatPhoto',\r\n                chat_id: chat.id,\r\n                photo: { '@type': 'inputFileBlob', name: 'photo.jpg', data: defaultPhoto }\r\n            });\r\n        }\r\n\r\n        openChat(chat.id);\r\n    };\r\n\r\n    handleChoosePhoto = async (blob, blobURL) => {\r\n        this.setState({\r\n            defaultPhoto: blob,\r\n            defaultPhotoURL: blobURL\r\n        });\r\n\r\n        const result = await TdLibController.send({\r\n            '@type': 'uploadFile',\r\n            file: {\r\n                '@type': 'inputFileBlob',\r\n                name: 'photo.jpg',\r\n                data: blob\r\n            },\r\n            file_type: { '@type': 'fileTypePhoto' },\r\n            priority: THUMBNAIL_PRIORITY\r\n        });\r\n\r\n        this.setState({\r\n            defaultPhotoFile: result\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { popup, t } = this.props;\r\n        const { error } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\r\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{t('NewChannel')}</span>\r\n                    </div>\r\n                </div>\r\n                <div className='sidebar-page-content'>\r\n                    <div className='new-chat-content'>\r\n                        <NewChatPhoto onChoose={this.handleChoosePhoto}/>\r\n                        <div className='new-chat-title'>\r\n                            <TextField\r\n                                inputRef={this.titleRef}\r\n                                error={error}\r\n                                className='new-chat-input'\r\n                                variant='outlined'\r\n                                fullWidth\r\n                                label={t('EnterChannelName')}\r\n                                defaultValue={''}\r\n                            />\r\n                            <TextField\r\n                                inputRef={this.descriptionRef}\r\n                                className='new-chat-input'\r\n                                variant='outlined'\r\n                                fullWidth\r\n                                label={t('DescriptionOptionalPlaceholder')}\r\n                                defaultValue={''}\r\n                            />\r\n                            <div className='edit-profile-hint'>{t('DescriptionInfo')}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='new-chat-bottom-button' onClick={this.handleDone}>\r\n                    <NextIcon/>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nNewChannel.propTypes = {\r\n    popup: PropTypes.bool,\r\n    userIds: PropTypes.array\r\n};\r\n\r\nexport default withTranslation()(NewChannel);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport UserTile from './UserTile';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport { getUserShortName } from '../../Utils/User';\r\nimport './UserChip.css';\r\n\r\nclass UserChip extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.divRef = React.createRef();\r\n    }\r\n\r\n    getOffset() {\r\n        const {\r\n            offsetLeft: left,\r\n            offsetTop: top,\r\n            offsetWidth: width,\r\n            offsetHeight: height\r\n        } = this.divRef.current;\r\n\r\n        return { left, top, width, height }\r\n    }\r\n\r\n    setStyleCSSText(text) {\r\n        const div = this.divRef.current;\r\n        if (!div) return;\r\n\r\n        div.style.cssText = text;\r\n    }\r\n\r\n    render() {\r\n        const { userId, selected, onClick } = this.props;\r\n\r\n        return (\r\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\r\n                <UserTile userId={userId} small={true}/>\r\n                <div className='chip-delete'>\r\n                    <CloseIcon className='chip-delete-icon'/>\r\n                </div>\r\n                <div className='chip-text'>{getUserShortName(userId)}</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nUserChip.propTypes = {\r\n    userId: PropTypes.number,\r\n    selected: PropTypes.bool,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default UserChip;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ArrowBackIcon from '../../Assets/Icons/Back';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport User from '../Tile/User';\r\nimport UserChip from '../Tile/UserChip';\r\nimport SearchInput from './Search/SearchInput';\r\nimport VirtualizedList from '../Additional/VirtualizedList';\r\nimport { loadUsersContent } from '../../Utils/File';\r\nimport { debounce, throttle } from '../../Utils/Common';\r\nimport { getUserFullName } from '../../Utils/User';\r\nimport CacheStore from '../../Stores/CacheStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './Contacts.css';\r\n\r\nclass UserListItem extends React.Component {\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { userId, selected, style } = this.props;\r\n        if (nextProps.userId !== userId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.selected !== selected) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.style.top !== style.top) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        const { userId, selected, onClick, style } = this.props;\r\n\r\n        return (\r\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\r\n                <Checkbox className='user-list-item-checkbox' checked={selected} color='primary' />\r\n                <User userId={userId} />\r\n            </ListItem>\r\n        );\r\n    }\r\n}\r\n\r\nclass AddParticipants extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.titleRef = React.createRef();\r\n        this.searchInputRef = React.createRef();\r\n        this.listRef = React.createRef();\r\n        this.searchListRef = React.createRef();\r\n        this.wrapPanelRef = React.createRef();\r\n        this.itemsRef = new Map();\r\n\r\n        this.state = {\r\n            items: null,\r\n            searchItems: null,\r\n            selectedItems: {\r\n                array: [],\r\n                map: new Map()\r\n            },\r\n            focusedItem: null\r\n        };\r\n\r\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100, false);\r\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\r\n    }\r\n\r\n    getUserIds() {\r\n        return this.state.selectedItems.array;\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { current } = this.searchInputRef;\r\n        if (current) {\r\n            setTimeout(() => current.focus(), 50);\r\n        }\r\n\r\n        this.loadContent();\r\n    }\r\n\r\n    handleScroll = event => {\r\n        this.handleDebounceScroll();\r\n        this.handleThrottleScroll();\r\n    };\r\n\r\n    handleDebounceScroll() {\r\n        this.loadRenderIdsContent();\r\n    }\r\n\r\n    handleThrottleScroll() {\r\n        this.loadRenderIdsContent();\r\n    }\r\n\r\n    loadRenderIdsContent = () => {\r\n        const { items, searchItems } = this.state;\r\n\r\n        const currentItems = searchItems || items;\r\n\r\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\r\n        if (!current) return;\r\n\r\n        const renderIds = current.getListRenderIds();\r\n        if (renderIds.size > 0) {\r\n            const userIds = [];\r\n            [...renderIds.keys()].forEach(key => {\r\n                userIds.push(currentItems.user_ids[key]);\r\n            });\r\n\r\n            const store = FileStore.getStore();\r\n            loadUsersContent(store, userIds);\r\n        }\r\n    };\r\n\r\n    async loadContent() {\r\n        let contacts = CacheStore.contacts;\r\n        if (!contacts) {\r\n            contacts = await TdLibController.send({\r\n                '@type': 'getContacts'\r\n            });\r\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\r\n            CacheStore.contacts = contacts;\r\n        }\r\n\r\n        const store = FileStore.getStore();\r\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\r\n\r\n        this.setState({\r\n            items: contacts\r\n        });\r\n    }\r\n\r\n    handleOpenUser = userId => {\r\n        const { selectedItems, focusedItem } = this.state;\r\n        const { map, array } = selectedItems;\r\n\r\n        const newMap = new Map(map);\r\n        let newArray;\r\n        let newFocusedItem = null;\r\n        let isDeleting = false;\r\n        if (map.has(userId)) {\r\n            newMap.delete(userId);\r\n            newArray = array.filter(x => x !== userId);\r\n            newFocusedItem = focusedItem === userId ? null : focusedItem;\r\n            isDeleting = true;\r\n        } else {\r\n            newMap.set(userId, userId);\r\n            newArray = array.concat([userId]);\r\n            newFocusedItem = null;\r\n        }\r\n\r\n        const input = this.searchInputRef.current;\r\n        input.focus();\r\n        if (!isDeleting) {\r\n            input.innerText = '';\r\n            this.handleSearch('');\r\n        }\r\n\r\n        const wrapPanel = this.wrapPanelRef.current;\r\n        const prevHeight = wrapPanel.scrollHeight;\r\n        const prevOffsetHeight = wrapPanel.offsetHeight;\r\n\r\n        const prevMap = new Map();\r\n        for (let key of this.itemsRef.keys()) {\r\n            const el = this.itemsRef.get(key);\r\n            if (el) {\r\n                const offset = el.getOffset();\r\n                prevMap.set(key, offset);\r\n            }\r\n        }\r\n\r\n        const prevCSSText = wrapPanel.style.cssText;\r\n        const prevScrollTop = wrapPanel.scrollTop;\r\n        if (isDeleting) {\r\n            wrapPanel.style.cssText = null;\r\n        }\r\n\r\n        this.setState({\r\n            focusedItem: newFocusedItem,\r\n            selectedItems: {\r\n                array: newArray,\r\n                map: newMap\r\n            }\r\n        }, () => {\r\n            this.animatePanel(isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText);\r\n            this.animateItems(prevMap);\r\n        });\r\n    };\r\n\r\n    animatePanel(isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText) {\r\n        const wrapPanel = this.wrapPanelRef.current;\r\n\r\n        const currentHeight = wrapPanel.scrollHeight;\r\n        const currentOffsetHeight = wrapPanel.offsetHeight;\r\n\r\n        const expanded = currentHeight > prevHeight;\r\n        const collapsed = currentHeight < prevHeight;\r\n\r\n        const maxHeight = 123;\r\n        if (expanded) {\r\n            if (prevHeight < maxHeight) {\r\n                wrapPanel.style.cssText = `max-height: ${Math.min(prevHeight, maxHeight)}px;`;\r\n                requestAnimationFrame(() => {\r\n                    wrapPanel.style.cssText = `max-height: ${Math.min(currentHeight, maxHeight)}px;`;\r\n                    setTimeout(() => {\r\n                        this.searchInputRef.current.scrollIntoView({ behavior: 'auto' });\r\n                    }, 250);\r\n                });\r\n            } else {\r\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\r\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\r\n            }\r\n        } else if (collapsed) {\r\n            if (currentHeight < maxHeight) {\r\n                wrapPanel.style.cssText = `min-height: ${Math.min(prevOffsetHeight, maxHeight)}px;`;\r\n                requestAnimationFrame(() => {\r\n                    wrapPanel.style.cssText = `min-height: ${Math.min(currentHeight, maxHeight)}px;`;\r\n                });\r\n            } else {\r\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\r\n                wrapPanel.scrollTop = prevScrollTop;\r\n            }\r\n        } else {\r\n            if (isDeleting) {\r\n                wrapPanel.style.cssText = prevCSSText;\r\n                wrapPanel.scrollTop = prevScrollTop;\r\n            } else {\r\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\r\n            }\r\n        }\r\n    }\r\n\r\n    animateItems(prevOffsets) {\r\n        const doubleTransform = new Map();\r\n        for (let key of this.itemsRef.keys()) {\r\n            const el = this.itemsRef.get(key);\r\n            if (el) {\r\n                const currentOffset = el.getOffset();\r\n                const prevOffset = prevOffsets.has(key) ? prevOffsets.get(key) : null;\r\n                if (prevOffset) {\r\n                    if (prevOffset.left < currentOffset.left) {\r\n                        doubleTransform.set(el, { prevOffset, currentOffset });\r\n                    }\r\n\r\n                    const transform = `transform: translate(${prevOffset.left - currentOffset.left}px, ${prevOffset.top - currentOffset.top}px)`;\r\n                    el.setStyleCSSText(transform);\r\n                }\r\n            }\r\n        }\r\n\r\n        requestAnimationFrame(() => {\r\n            for (let key of this.itemsRef.keys()) {\r\n                const el = this.itemsRef.get(key);\r\n                if (el) {\r\n                    let transition = `transition: transform 0.25s ease`;\r\n                    if (doubleTransform.has(el)) {\r\n                        const { prevOffset, currentOffset } = doubleTransform.get(el);\r\n                        transition = `transform: translate(${prevOffset.left - currentOffset.left - prevOffset.width}px, ${prevOffset.top - currentOffset.top}px);`\r\n                                   + 'transition: transform 0.1s ease;'\r\n                    }\r\n\r\n                    el.setStyleCSSText(transition);\r\n                }\r\n            }\r\n\r\n            if (!doubleTransform.size) return;\r\n\r\n            setTimeout(() => {\r\n                for (let el of doubleTransform.keys()) {\r\n                    const { currentOffset } = doubleTransform.get(el);\r\n                    const transition = `transform: translate(${currentOffset.width}px, 0);`\r\n                                     + 'transition: transform 0s ease;';\r\n\r\n                    el.setStyleCSSText(transition);\r\n                }\r\n\r\n                requestAnimationFrame(() => {\r\n                    for (let el of doubleTransform.keys()) {\r\n                        const transition = 'transition: transform 0.15s ease';\r\n\r\n                        el.setStyleCSSText(transition);\r\n                    }\r\n                });\r\n\r\n            }, 101);\r\n        });\r\n    }\r\n\r\n    renderItem = ({ index, style }, items, selectedItemsMap) => {\r\n        const userId = items[index];\r\n        const isSelected = selectedItemsMap.has(userId);\r\n\r\n        return <UserListItem key={userId} userId={userId} selected={isSelected} onClick={() => this.handleOpenUser(userId)} style={style} />;\r\n    };\r\n\r\n    handleSearch = async text => {\r\n        const query = text.trim();\r\n        if (!query) {\r\n            this.setState({\r\n                searchItems: null,\r\n                publicItems: null,\r\n                focusedItem: null\r\n            });\r\n            return;\r\n        }\r\n\r\n        const promises = [];\r\n        promises.push(\r\n            TdLibController.send({\r\n                '@type': 'searchContacts',\r\n                query,\r\n                limit: 20\r\n            })\r\n        );\r\n        promises.push(\r\n            TdLibController.send({\r\n                '@type': 'searchPublicChats',\r\n                query\r\n            })\r\n        );\r\n        const [searchItems, publicChats] = await Promise.all(promises);\r\n\r\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\r\n            getUserFullName(x).localeCompare(getUserFullName(y))\r\n        );\r\n\r\n        const publicItems = { '@type': 'users', user_ids: [] };\r\n        publicChats.chat_ids.reduce((array, chatId) => {\r\n            const chat = ChatStore.get(chatId);\r\n            if (chat && chat.type['@type'] === 'chatTypePrivate') {\r\n                array.push(chat.type.user_id);\r\n            }\r\n            return array;\r\n        }, publicItems.user_ids);\r\n\r\n        const store = FileStore.getStore();\r\n        loadUsersContent(store, searchItems.user_ids);\r\n        loadUsersContent(store, publicItems.user_ids);\r\n\r\n        this.setState({ searchItems, publicItems, focusedItem: null });\r\n    };\r\n\r\n    handleClose = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateNewGroup',\r\n            open: false\r\n        });\r\n    };\r\n\r\n    handleSearchClose = event => {\r\n        const { selectedItems, focusedItem } = this.state;\r\n        if (!selectedItems) return;\r\n\r\n        const { map } = selectedItems;\r\n        if (!map.has(focusedItem)) return;\r\n\r\n        event.stopPropagation();\r\n        event.nativeEvent.stopImmediatePropagation();\r\n\r\n        this.setState({\r\n            focusedItem: null\r\n        })\r\n    };\r\n\r\n    handleBackspace = () => {\r\n        const { selectedItems, focusedItem } = this.state;\r\n        if (!selectedItems) return;\r\n\r\n        const { array, map } = selectedItems;\r\n        if (!array) return;\r\n        if (!array.length) return;\r\n\r\n        if (map.has(focusedItem)) {\r\n            this.handleOpenUser(focusedItem);\r\n            return;\r\n        }\r\n\r\n        const lastItem = array[array.length - 1];\r\n        if (!lastItem) return;\r\n\r\n        this.setState({\r\n            focusedItem: lastItem\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { popup, t } = this.props;\r\n        const { items, searchItems, publicItems, selectedItems, focusedItem } = this.state;\r\n\r\n        const style = popup ? { minHeight: 800 } : null;\r\n\r\n        this.itemsRef.clear();\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\r\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{t('GroupAddMembers')}</span>\r\n                    </div>\r\n                </div>\r\n                <div ref={this.wrapPanelRef} className='animated-wrap-panel'>\r\n                    {selectedItems.array.map(x => <UserChip selected={focusedItem === x} ref={el => { this.itemsRef.set(x, el); }} key={x} userId={x} onClick={() => this.handleOpenUser(x)}/>)}\r\n                    <SearchInput inputRef={this.searchInputRef} hint={t('SendMessageTo')} onClose={this.handleSearchClose} onChange={this.handleSearch} onBackspace={this.handleBackspace} />\r\n                </div>\r\n                <div className='contacts-border'/>\r\n                <div className='contacts-content' style={style}>\r\n                    {items && (\r\n                        <VirtualizedList\r\n                            ref={this.listRef}\r\n                            className='contacts-list'\r\n                            source={items.user_ids}\r\n                            rowHeight={72}\r\n                            overScanCount={20}\r\n                            renderItem={x => this.renderItem(x, items.user_ids, selectedItems.map)}\r\n                            onScroll={this.handleScroll}\r\n                        />\r\n                    )}\r\n                    {searchItems && publicItems && (\r\n                        <VirtualizedList\r\n                            ref={this.searchListRef}\r\n                            className='contacts-list contacts-search-list'\r\n                            source={searchItems.user_ids.concat(publicItems.user_ids)}\r\n                            rowHeight={72}\r\n                            overScanCount={20}\r\n                            renderItem={x => this.renderItem(x, searchItems.user_ids.concat(publicItems.user_ids), selectedItems.map)}\r\n                            onScroll={this.handleScroll}\r\n                        />\r\n                    )}\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nAddParticipants.propTypes = {\r\n    popup: PropTypes.bool,\r\n    onClose: PropTypes.func\r\n};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTranslation(),\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(AddParticipants);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport ArrowBackIcon from '../../Assets/Icons/Back';\r\nimport SectionHeader from './SectionHeader';\r\nimport User from '../Tile/User';\r\nimport NewChatPhoto from './NewChatPhoto';\r\nimport { loadUsersContent } from '../../Utils/File';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport './NewGroupParams.css';\r\n\r\nclass UserListItem extends React.Component {\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { userId } = this.props;\r\n        if (nextProps.userId !== userId) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        const { userId, style } = this.props;\r\n\r\n        return (\r\n            <ListItem className='user-list-item' button style={style}>\r\n                <User userId={userId} />\r\n            </ListItem>\r\n        );\r\n    }\r\n}\r\n\r\nclass NewGroupParams extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.titleRef = React.createRef();\r\n\r\n        this.state = {\r\n            error: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { userIds } = this.props;\r\n\r\n        const store = FileStore.getStore();\r\n        loadUsersContent(store, userIds);\r\n    }\r\n\r\n    getTitle() {\r\n        const { error } = this.state;\r\n\r\n        const title = this.titleRef.current.value.trim();\r\n        if (!title) {\r\n            this.setState({\r\n                error: true\r\n            });\r\n            return title;\r\n        }\r\n\r\n        if (error) {\r\n            this.setState({\r\n                error: false\r\n            })\r\n        }\r\n\r\n        return title;\r\n    }\r\n\r\n    handleClose = () => {\r\n        const { onClose } = this.props;\r\n        if (!onClose) return;\r\n\r\n        onClose();\r\n    };\r\n\r\n    render() {\r\n        const { t, userIds, defaultPhotoURL, onChoosePhoto } = this.props;\r\n        const { error } = this.state;\r\n\r\n        const items = userIds.map(userId => (<UserListItem key={userId} userId={userId} />));\r\n\r\n        const itemsCaption = userIds.length !== 1 ? `${userIds.length} members` : `${userIds.length} member`;\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{t('NewGroup')}</span>\r\n                    </div>\r\n                </div>\r\n                <div className='sidebar-page-content'>\r\n                    <div className='new-chat-content'>\r\n                        <NewChatPhoto defaultURL={defaultPhotoURL} onChoose={onChoosePhoto}/>\r\n                        <div className='new-chat-title'>\r\n                            <TextField\r\n                                inputRef={this.titleRef}\r\n                                error={error}\r\n                                className='new-chat-input'\r\n                                variant='outlined'\r\n                                fullWidth\r\n                                label={t('GroupName')}\r\n                                defaultValue={''}\r\n                            />\r\n                        </div>\r\n                        <SectionHeader>{itemsCaption}</SectionHeader>\r\n                        {items}\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nNewGroupParams.propTypes = {\r\n    userIds: PropTypes.array,\r\n    defaultPhotoURL: PropTypes.string,\r\n    onChoosePhoto: PropTypes.func,\r\n    onClose: PropTypes.func\r\n};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTranslation(),\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(NewGroupParams);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport AddParticipants from './AddParticipants';\r\nimport NewGroupParams from './NewGroupParams';\r\nimport SidebarPage from './SidebarPage';\r\nimport NextIcon from '../../Assets/Icons/Back';\r\nimport { openChat } from '../../Actions/Client';\r\nimport { THUMBNAIL_PRIORITY } from '../../Constants';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './NewGroup.css';\r\n\r\nclass NewGroup extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.addParticipantsRef = React.createRef();\r\n        this.newGroupParamsRef = React.createRef();\r\n\r\n        this.state = {\r\n            openParams: false,\r\n            userIds: [],\r\n            defaultPhoto: null,\r\n            defaultPhotoURL: null,\r\n            defaultPhotoFile: null\r\n        };\r\n    }\r\n\r\n    handleDone = async () => {\r\n        const { openParams } = this.state;\r\n        if (!openParams) {\r\n            const userIds = this.addParticipantsRef.current.getUserIds();\r\n            if (!userIds.length) return;\r\n\r\n            this.setState({\r\n                openParams: true,\r\n                userIds\r\n            })\r\n        } else {\r\n            const { userIds, defaultPhoto, defaultPhotoFile } = this.state;\r\n\r\n            const title = this.newGroupParamsRef.current.getTitle();\r\n            if (!title) {\r\n                return;\r\n            }\r\n\r\n            this.handleClose();\r\n\r\n            const chat = await TdLibController.send({\r\n                '@type': 'createNewSupergroupChat',\r\n                title,\r\n                is_channel: false,\r\n                description: '',\r\n                location: null\r\n            });\r\n\r\n            if (defaultPhotoFile) {\r\n                TdLibController.send({\r\n                    '@type': 'setChatPhoto',\r\n                    chat_id: chat.id,\r\n                    photo: { '@type': 'inputFileId', id: defaultPhotoFile.id }\r\n                });\r\n            } else if (defaultPhoto) {\r\n                TdLibController.send({\r\n                    '@type': 'setChatPhoto',\r\n                    chat_id: chat.id,\r\n                    photo: { '@type': 'inputFileBlob', name: 'photo.jpg', data: defaultPhoto }\r\n                });\r\n            }\r\n\r\n            if (userIds.length > 0) {\r\n                TdLibController.send({\r\n                    '@type': 'addChatMembers',\r\n                    chat_id: chat.id,\r\n                    user_ids: userIds\r\n                });\r\n            }\r\n\r\n            openChat(chat.id);\r\n        }\r\n    };\r\n\r\n    handleClose = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateNewGroup',\r\n            open: false\r\n        });\r\n    };\r\n\r\n    handleCloseParams = () => {\r\n        this.setState({\r\n            openParams: false,\r\n            userIds: []\r\n        })\r\n    };\r\n\r\n    handleChoosePhoto = async (blob, blobURL) => {\r\n        this.setState({\r\n            defaultPhoto: blob,\r\n            defaultPhotoURL: blobURL\r\n        });\r\n\r\n        const result = await TdLibController.send({\r\n            '@type': 'uploadFile',\r\n            file: {\r\n                '@type': 'inputFileBlob',\r\n                name: 'photo.jpg',\r\n                data: blob\r\n            },\r\n            file_type: { '@type': 'fileTypePhoto' },\r\n            priority: THUMBNAIL_PRIORITY\r\n        });\r\n\r\n        this.setState({\r\n            defaultPhotoFile: result\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { popup } = this.props;\r\n        const { openParams, userIds, defaultPhotoURL } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <AddParticipants ref={this.addParticipantsRef} popup={popup} onClose={this.handleClose}/>\r\n\r\n                <SidebarPage open={openParams}>\r\n                    <NewGroupParams\r\n                        ref={this.newGroupParamsRef}\r\n                        defaultPhotoURL={defaultPhotoURL}\r\n                        userIds={userIds}\r\n                        onChoosePhoto={this.handleChoosePhoto}\r\n                        onClose={this.handleCloseParams}\r\n                    />\r\n                </SidebarPage>\r\n\r\n                <div className='new-chat-bottom-button' onClick={this.handleDone}>\r\n                    <NextIcon/>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nNewGroup.propTypes = {\r\n    popup: PropTypes.bool,\r\n    userIds: PropTypes.array\r\n};\r\n\r\nexport default withTranslation()(NewGroup);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport Contacts from '../ColumnLeft/Contacts';\r\nimport DialogsHeader from '../ColumnLeft/DialogsHeader';\r\nimport Search from '../ColumnLeft/Search/Search';\r\nimport Settings from '../ColumnLeft/Settings/Settings';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport './ChatInfoDialog.css';\r\nimport { openChat } from '../../Actions/Client';\r\nimport NewChannel from '../ColumnLeft/NewChannel';\r\nimport NewGroup from '../ColumnLeft/NewGroup';\r\n\r\nclass SidebarDialog extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.headerRef = React.createRef();\r\n\r\n        this.state = {\r\n            openSearch: false,\r\n            openSettings: false,\r\n            openContacts: false,\r\n            openNewGroup: false,\r\n            openNewChannel: false\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { openSearch, searchText, openSettings, openContacts, openNewGroup, openNewChannel } = this.state;\r\n\r\n        if (nextState.openSearch !== openSearch) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.searchText !== searchText) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.openSettings !== openSettings) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.openContacts !== openContacts) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.openNewGroup !== openNewGroup) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.openNewChannel !== openNewChannel) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\r\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\r\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\r\n        ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\r\n        ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\r\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\r\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\r\n        ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\r\n        ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\r\n    }\r\n\r\n    onClientUpdateSearchChat = update => {\r\n        const { isSmallWidth } = AppStore;\r\n        if (!isSmallWidth) return;\r\n\r\n        const { chatId, query } = update;\r\n        const { openSearch, searchChatId, searchText } = this.state;\r\n\r\n        if (openSearch && chatId === searchChatId && query === searchText) {\r\n            return;\r\n        }\r\n\r\n        this.query = query;\r\n        this.setState(\r\n            {\r\n                openSearch: true,\r\n                searchChatId: chatId,\r\n                searchText: null\r\n            }\r\n        );\r\n    };\r\n\r\n    handleDialogEnter = () => {\r\n        if (!this.query) return;\r\n\r\n        const header = this.headerRef.current;\r\n        if (header) {\r\n            header.setInitQuery(this.query);\r\n        }\r\n\r\n        this.query = null;\r\n    };\r\n\r\n    onClientUpdateSettings = update => {\r\n        const { isSmallWidth } = AppStore;\r\n        if (!isSmallWidth) return;\r\n\r\n        const { open, chatId } = update;\r\n\r\n        this.setState({ openSettings: open, meChatId: chatId });\r\n    };\r\n\r\n    onClientUpdateContacts = async update => {\r\n        const { isSmallWidth } = AppStore;\r\n        if (!isSmallWidth) return;\r\n\r\n        const { open } = update;\r\n\r\n        this.setState({ openContacts: open });\r\n    };\r\n\r\n    onClientUpdateNewGroup = async update => {\r\n        const { isSmallWidth } = AppStore;\r\n        if (!isSmallWidth) return;\r\n\r\n        const { open } = update;\r\n\r\n        this.setState({ openNewGroup: open });\r\n    };\r\n\r\n    onClientUpdateNewChannel = async update => {\r\n        const { isSmallWidth } = AppStore;\r\n        if (!isSmallWidth) return;\r\n\r\n        const { open } = update;\r\n\r\n        this.setState({ openNewChannel: open });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({\r\n            openSettings: false,\r\n            openContacts: false,\r\n            openNewGroup: false,\r\n            openNewChannel: false,\r\n            openSearch: false\r\n        });\r\n    };\r\n\r\n    handleSearch = visible => {\r\n        this.setState({\r\n            openSearch: visible,\r\n            searchChatId: 0,\r\n            searchText: null\r\n        });\r\n    };\r\n\r\n    handleSearchTextChange = text => {\r\n        this.setState({\r\n            searchText: text,\r\n            query: null\r\n        });\r\n    };\r\n\r\n    handleSelectMessage = (chatId, messageId, openSearch) => {\r\n        openChat(chatId, messageId);\r\n\r\n        this.handleCloseSearch();\r\n    };\r\n\r\n    handleCloseSearch = () => {\r\n        this.setState({\r\n            openSearch: false,\r\n            searchChatId: 0,\r\n            searchText: null\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { meChatId, searchChatId, searchText, openSearch, openContacts, openSettings, openNewGroup, openNewChannel } = this.state;\r\n        if (!openSearch && !openContacts && !openSettings && !openNewGroup && !openNewChannel) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <Dialog\r\n                open\r\n                transitionDuration={0}\r\n                onClose={this.handleClose}\r\n                classes={{\r\n                    root: 'chat-info-dialog-root',\r\n                    container: 'chat-info-dialog-container',\r\n                    paper: 'chat-info-dialog-paper'\r\n                }}\r\n                onEnter={this.handleDialogEnter}\r\n                >\r\n                {openSettings && <Settings chatId={meChatId} popup/>}\r\n                {openContacts && <Contacts popup />}\r\n                {openNewGroup && <NewGroup popup/>}\r\n                {openNewChannel && <NewChannel popup />}\r\n                {openSearch && (\r\n                    <>\r\n                        <DialogsHeader\r\n                            ref={this.headerRef}\r\n                            openSearch={true}\r\n                            timeout={false}\r\n                            onClick={this.handleHeaderClick}\r\n                            onSearch={this.handleSearch}\r\n                            onSearchTextChange={this.handleSearchTextChange}\r\n                            popup\r\n                        />\r\n                        <div className='search-content'>\r\n                            <Search\r\n                                chatId={searchChatId}\r\n                                text={searchText}\r\n                                onSelectMessage={this.handleSelectMessage}\r\n                                onClose={this.handleCloseSearch}\r\n                            />\r\n                        </div>\r\n                    </>\r\n                )}\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nSidebarDialog.propTypes = {};\r\n\r\nexport default SidebarDialog;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport { orderCompare } from './Common';\r\nimport { getChatOrder } from './Chat';\r\nimport ChatStore from '../Stores/ChatStore';\r\n\r\nexport function getArchiveTitle() {\r\n    const archive = ChatStore.chatList.get('chatListArchive');\r\n    const chats = [];\r\n    const chatsOrder = [];\r\n    if (archive) {\r\n        for (const chatId of archive.keys()) {\r\n            const chat = ChatStore.get(chatId);\r\n            if (chat) {\r\n                const order = getChatOrder(chatId, { '@type': 'chatListArchive' });\r\n                if (order !== '0') chats.push(chat);\r\n                chatsOrder.push({ order, id: chatId, title: chat.title });\r\n            }\r\n        }\r\n    }\r\n\r\n    const orderedChats = chats.sort((a, b) => orderCompare(getChatOrder(b, { '@type': 'chatListArchive' }), getChatOrder(a, { '@type': 'chatListArchive' })));\r\n\r\n    return orderedChats.map(x => x.title).join(', ');\r\n}\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport classNames from 'classnames';\r\nimport CSSTransition from 'react-transition-group/CSSTransition';\r\nimport Archive from './Archive';\r\nimport Search from './Search/Search';\r\nimport Filters from './Filters';\r\nimport DialogsHeader from './DialogsHeader';\r\nimport DialogsList from './DialogsList';\r\nimport SidebarPage from './SidebarPage';\r\nimport Settings from './Settings/Settings';\r\nimport Contacts from './Contacts';\r\nimport UpdatePanel from './UpdatePanel';\r\nimport SidebarDialog from '../Popup/SidebarDialog';\r\nimport NewGroup from './NewGroup';\r\nimport NewChannel from './NewChannel';\r\nimport { openChat } from '../../Actions/Client';\r\nimport { getArchiveTitle } from '../../Utils/Archive';\r\nimport { loadChatsContent } from '../../Utils/File';\r\nimport { duration } from '@material-ui/core/styles/transitions';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport CacheStore from '../../Stores/CacheStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport FilterStore from '../../Stores/FilterStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './Dialogs.css';\r\n\r\nconst defaultTimeout = {\r\n    enter: duration.enteringScreen,\r\n    exit: duration.leavingScreen\r\n};\r\n\r\nclass Dialogs extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.dialogListRef = React.createRef();\r\n        this.archiveListRef = React.createRef();\r\n        this.dialogsHeaderRef = React.createRef();\r\n\r\n        this.state = {\r\n            cache: null,\r\n\r\n            showArchive: false,\r\n            archiveTitle: null,\r\n\r\n            mainItems: [],\r\n            archiveItems: [],\r\n\r\n            timeout: defaultTimeout,\r\n            openSearch: false,\r\n            openArchive: false,\r\n            openContacts: false,\r\n            openSettings: false,\r\n            openNewGroup: false,\r\n            openNewChannel: false,\r\n\r\n            searchChatId: 0,\r\n            searchText: null,\r\n            query: null\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const {\r\n            cache,\r\n            showArchive,\r\n            archiveTitle,\r\n            mainItems,\r\n            archiveItems,\r\n            openSearch,\r\n            openArchive,\r\n            openSettings,\r\n            openContacts,\r\n            openNewGroup,\r\n            openNewChannel,\r\n            searchChatId,\r\n            searchText\r\n        } = this.state;\r\n\r\n        if (nextState.cache !== cache) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.showArchive !== showArchive) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.archiveTitle !== archiveTitle) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.archiveItems !== archiveItems) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.mainItems !== mainItems) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.openSearch !== openSearch) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.openArchive !== openArchive) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.openSettings !== openSettings) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.openContacts !== openContacts) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.openNewGroup !== openNewGroup) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.openNewChannel !== openNewChannel) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.searchChatId !== searchChatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.searchText !== searchText) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadCache();\r\n\r\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\r\n        AppStore.on('clientUpdateThemeChange', this.onClientUpdateThemeChange);\r\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\r\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\r\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\r\n        ChatStore.on('updateChatPosition', this.onUpdateChatOrder);\r\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\r\n        ChatStore.on('clientUpdateArchive', this.onClientUpdateArchive);\r\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\r\n        ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\r\n        ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\r\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\r\n        AppStore.off('clientUpdateThemeChange', this.onClientUpdateThemeChange);\r\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\r\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\r\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\r\n        ChatStore.off('updateChatPosition', this.onUpdateChatOrder);\r\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\r\n        ChatStore.off('clientUpdateArchive', this.onClientUpdateArchive);\r\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\r\n        ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\r\n        ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\r\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\r\n    }\r\n\r\n    onUpdateChatFilters = update => {\r\n        this.saveCache();\r\n    };\r\n\r\n    onClientUpdatePageWidth = update => {\r\n        const { isSmallWidth } = update;\r\n\r\n        if (!isSmallWidth) return;\r\n\r\n        const { openSettings, openContacts, openSearch, openNewGroup, openNewChannel } = this.state;\r\n        if (openSettings || openContacts || openSearch || openNewGroup || openNewChannel) {\r\n            this.setState({\r\n                    openContacts: false,\r\n                    openSettings: false,\r\n                    openSearch: false,\r\n                    openNewGroup: false,\r\n                    openNewChannel: false,\r\n                    timeout: 0\r\n                }, () => {\r\n                    this.setState({\r\n                        timeout: defaultTimeout\r\n                    });\r\n            });\r\n        }\r\n    };\r\n\r\n    async loadCache() {\r\n        const cache = (await CacheStore.load()) || {};\r\n\r\n        const { chats, archiveChats } = cache;\r\n\r\n        FilterStore.filters = FilterStore.filters || CacheStore.filters;\r\n        this.setState({\r\n            cache,\r\n\r\n            showArchive: archiveChats && archiveChats.length > 0,\r\n            archiveTitle: getArchiveTitle()\r\n        });\r\n\r\n        this.loadChatContents((chats || []).map(x => x.id));\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateCacheLoaded'\r\n        });\r\n    }\r\n\r\n    saveCache() {\r\n        const { current: archiveCurrent } = this.archiveListRef;\r\n        const archiveChatIds =\r\n            archiveCurrent && archiveCurrent.state.chats ? archiveCurrent.state.chats.slice(0, 25) : [];\r\n\r\n        const { current: mainCurrent } = this.dialogListRef;\r\n        const mainChatIds = mainCurrent && mainCurrent.state.chats ? mainCurrent.state.chats.slice(0, 25) : [];\r\n\r\n        const { filters } = FilterStore;\r\n\r\n        CacheStore.save(filters, mainChatIds, archiveChatIds);\r\n    }\r\n\r\n    onUpdateChatOrder = update => {\r\n        const { showArchive: prevShowArchive } = this.state;\r\n\r\n        const { current: mainCurrent } = this.dialogListRef;\r\n        if (mainCurrent && mainCurrent.loading) {\r\n            return;\r\n        }\r\n\r\n        const { current: archiveCurrent } = this.archiveListRef;\r\n        if (archiveCurrent && archiveCurrent.loading) {\r\n            return;\r\n        }\r\n\r\n        const archiveList = ChatStore.chatList.get('chatListArchive');\r\n        const showArchive = archiveList && archiveList.size > 0;\r\n\r\n        this.setState({ showArchive, archiveTitle: getArchiveTitle() }, () => {\r\n            if (!prevShowArchive && showArchive) {\r\n                const { current } = this.dialogListRef;\r\n                if (current.listRef) {\r\n                    const { current: listCurrent } = current.listRef;\r\n                    if (listCurrent && listCurrent.scrollTop > 0) {\r\n                        current.scrollTop += 68;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        if (prevShowArchive && !showArchive) {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateCloseArchive'\r\n            });\r\n        }\r\n    };\r\n\r\n    onClientUpdateContacts = async update => {\r\n        const { isSmallWidth } = AppStore;\r\n        if (isSmallWidth) return;\r\n\r\n        const { open } = update;\r\n\r\n        this.setState({ openContacts: open });\r\n    };\r\n\r\n    onClientUpdateSettings = update => {\r\n        const { isSmallWidth } = AppStore;\r\n        if (isSmallWidth) return;\r\n\r\n        const { open, chatId } = update;\r\n\r\n        this.setState({ openSettings: open, meChatId: chatId });\r\n    };\r\n\r\n    onClientUpdateNewGroup = async update => {\r\n        const { isSmallWidth } = AppStore;\r\n        if (isSmallWidth) return;\r\n\r\n        const { open } = update;\r\n\r\n        this.setState({ openNewGroup: open });\r\n    };\r\n\r\n    onClientUpdateNewChannel = async update => {\r\n        const { isSmallWidth } = AppStore;\r\n        if (isSmallWidth) return;\r\n\r\n        const { open } = update;\r\n\r\n        this.setState({ openNewChannel: open });\r\n    };\r\n\r\n    onClientUpdateArchive = update => {\r\n        const { open } = update;\r\n\r\n        this.setState({ openArchive: open });\r\n    };\r\n\r\n    onClientUpdateThemeChange = update => {\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onClientUpdateSearchChat = update => {\r\n        const { isSmallWidth } = AppStore;\r\n        if (isSmallWidth) return;\r\n\r\n        const { chatId, query } = update;\r\n        const { openSearch, searchChatId, searchText } = this.state;\r\n\r\n        if (openSearch && chatId === searchChatId && query === searchText) {\r\n            return;\r\n        }\r\n\r\n        const header = this.dialogsHeaderRef.current;\r\n        this.setState(\r\n            {\r\n                openSearch: true,\r\n                searchChatId: chatId,\r\n                searchText: null,\r\n                openSettings: false,\r\n                openActiveSessions: false,\r\n                openContacts: false\r\n            },\r\n            () => {\r\n                if (header) {\r\n                    header.setInitQuery(query);\r\n                }\r\n            }\r\n        );\r\n    };\r\n\r\n    handleHeaderClick = () => {\r\n        const { openArchive } = this.state;\r\n        if (openArchive) {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateCloseArchive'\r\n            });\r\n        } else {\r\n            this.dialogListRef.current.scrollToTop();\r\n        }\r\n    };\r\n\r\n    handleSearch = visible => {\r\n        this.setState({\r\n            openSearch: visible,\r\n            searchChatId: 0,\r\n            searchText: null\r\n        });\r\n    };\r\n\r\n    handleSelectMessage = (chatId, messageId, openSearch) => {\r\n        openChat(chatId, messageId);\r\n\r\n        const searchChatId = openSearch ? this.state.searchChatId : 0;\r\n        const searchText = openSearch ? this.state.searchText : null;\r\n\r\n        this.setState({\r\n            openSearch,\r\n            searchChatId,\r\n            searchText\r\n        });\r\n    };\r\n\r\n    handleCloseSearch = () => {\r\n        this.setState({\r\n            openSearch: false,\r\n            searchChatId: 0,\r\n            searchText: null\r\n        });\r\n    };\r\n\r\n    handleSearchTextChange = text => {\r\n        this.setState({\r\n            searchText: text,\r\n            query: null\r\n        });\r\n    };\r\n\r\n    handleSaveCache = () => {\r\n        this.saveCache();\r\n    };\r\n\r\n    loadChatContents(chatIds) {\r\n        const store = FileStore.getStore();\r\n        loadChatsContent(store, chatIds);\r\n    }\r\n\r\n    handleCloseArchive = () => {\r\n        this.setState({ openArchive: false });\r\n    };\r\n\r\n    handleCloseContacts = () => {\r\n        this.setState({ openContacts: false });\r\n    };\r\n\r\n    handleCloseSettings = () => {\r\n        this.setState({ openSettings: false });\r\n    };\r\n\r\n    handleCloseNewGroup = () => {\r\n        this.setState({ openNewGroup: false });\r\n    };\r\n\r\n    handleCloseNewChannel = () => {\r\n        this.setState({ openNewChannel: false });\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            cache,\r\n            showArchive,\r\n            archiveTitle,\r\n            mainItems,\r\n            archiveItems,\r\n            meChatId,\r\n            openSettings,\r\n            openContacts,\r\n            openArchive,\r\n            openSearch,\r\n            openNewGroup,\r\n            openNewChannel,\r\n            timeout,\r\n            searchChatId,\r\n            searchText\r\n        } = this.state;\r\n\r\n        const mainCacheItems = cache ? cache.chats || [] : null;\r\n        const archiveCacheItems = cache ? cache.archiveChats || [] : null;\r\n\r\n        return (\r\n            <>\r\n                <div className='dialogs'>\r\n                    <div className='sidebar-page'>\r\n                        <DialogsHeader\r\n                            ref={this.dialogsHeaderRef}\r\n                            openSearch={openSearch}\r\n                            timeout={timeout !== 0}\r\n                            onClick={this.handleHeaderClick}\r\n                            onSearch={this.handleSearch}\r\n                            onSearchTextChange={this.handleSearchTextChange}\r\n                        />\r\n                        <div className='dialogs-content'>\r\n                            <div className='dialogs-content-internal'>\r\n                                <Filters/>\r\n                                <div className='sidebar-page-top-divider' style={{ zIndex: 1 }}/>\r\n                                <DialogsList\r\n                                    type='chatListMain'\r\n                                    ref={this.dialogListRef}\r\n                                    cacheItems={mainCacheItems}\r\n                                    items={mainItems}\r\n                                    showArchive={showArchive}\r\n                                    archiveTitle={archiveTitle}\r\n                                    open={true}\r\n                                    onSaveCache={this.handleSaveCache}\r\n                                />\r\n                            </div>\r\n                            <CSSTransition\r\n                                classNames='search'\r\n                                timeout={timeout}\r\n                                in={openSearch}\r\n                                mountOnEnter={true}\r\n                                unmountOnExit={true}>\r\n                                <Search\r\n                                    chatId={searchChatId}\r\n                                    text={searchText}\r\n                                    onSelectMessage={this.handleSelectMessage}\r\n                                    onClose={this.handleCloseSearch}\r\n                                />\r\n                            </CSSTransition>\r\n                        </div>\r\n                        <UpdatePanel />\r\n                    </div>\r\n\r\n                    <SidebarPage open={openArchive} timeout={timeout} onClose={this.handleCloseArchive}>\r\n                        <Archive\r\n                            innerListRef={this.archiveListRef}\r\n                            items={archiveItems}\r\n                            cacheItems={archiveCacheItems}\r\n                        />\r\n                    </SidebarPage>\r\n\r\n                    <SidebarPage open={openContacts} timeout={timeout} onClose={this.handleCloseContacts}>\r\n                        <Contacts />\r\n                    </SidebarPage>\r\n\r\n                    <SidebarPage open={openSettings} timeout={timeout} onClose={this.handleCloseSettings}>\r\n                        <Settings chatId={meChatId} />\r\n                    </SidebarPage>\r\n\r\n                    <SidebarPage open={openNewGroup} timeout={timeout} onClose={this.handleCloseNewGroup}>\r\n                        <NewGroup />\r\n                    </SidebarPage>\r\n\r\n                    <SidebarPage open={openNewChannel} timeout={timeout} onClose={this.handleCloseNewChannel}>\r\n                        <NewChannel />\r\n                    </SidebarPage>\r\n\r\n                    <SidebarDialog/>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Dialogs;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport ChatInfo from '../ColumnRight/ChatInfo';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport ApplicationStore from '../../Stores/ApplicationStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './ChatInfoDialog.css';\r\n\r\nclass ChatInfoDialog extends React.Component {\r\n    state = {\r\n        chatId: ApplicationStore.dialogChatId\r\n    };\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { chatId } = this.state;\r\n\r\n        return nextState.chatId !== chatId;\r\n    }\r\n\r\n    componentDidMount() {\r\n        ApplicationStore.on('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\r\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ApplicationStore.off('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\r\n        ApplicationStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\r\n    }\r\n\r\n    onClientUpdateMediaViewerContent = update => {\r\n        if (ApplicationStore.mediaViewerContent) {\r\n            this.handleClose();\r\n        }\r\n    };\r\n\r\n    onClientUpdateDialogChatId = update => {\r\n        const { chatId } = update;\r\n\r\n        this.setState({ chatId });\r\n    };\r\n\r\n    handleClose = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateDialogChatId',\r\n            chatId: 0\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { chatId } = this.state;\r\n        if (!chatId) return null;\r\n\r\n        return (\r\n            <Dialog\r\n                open\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                onClose={this.handleClose}\r\n                classes={{\r\n                    root: 'chat-info-dialog-root',\r\n                    container: 'chat-info-dialog-container',\r\n                    paper: 'chat-info-dialog-paper'\r\n                }}>\r\n                <ChatInfo className='chat-info-dialog-content' chatId={chatId} popup />\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nChatInfoDialog.propTypes = {};\r\n\r\nexport default ChatInfoDialog;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M2.65383364,2.92607697 L4.145798,9.778632 C4.26700994,10.3353554 4.73555061,10.7489799 5.30300879,10.8002098 L16.196355,11.7836569 C16.3159306,11.7944521 16.4041145,11.9001385 16.3933192,12.0197141 C16.3838746,12.1243302 16.3009783,12.2072294 16.1963626,12.2166777 L5.30295988,13.2005138 C4.73552551,13.2517615 4.26701089,13.6653731 4.14579755,14.2220735 L2.65385781,21.074154 C2.55168485,21.543407 2.84926209,22.0066394 3.31851517,22.1088123 C3.50628037,22.1496954 3.70229947,22.1272304 3.87594675,22.0449272 L23.4110848,12.7858981 C23.8450551,12.5802101 24.0301144,12.0616646 23.8244264,11.6276943 C23.7384721,11.4463438 23.5924353,11.300307 23.4110848,11.2143527 L3.87592461,1.95531307 C3.44195432,1.74962507 2.92340882,1.93468443 2.71772082,2.36865471 C2.63541897,2.54229904 2.61295329,2.73831451 2.65383364,2.92607697 Z' />,\r\n    'Send'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M19,10 C19.5522847,10 20,10.4477153 20,11 C20,15.0792885 16.9468043,18.445465 13.0009551,18.9379871 L13,22 C13,22.5522847 12.5522847,23 12,23 C11.4871642,23 11.0644928,22.6139598 11.0067277,22.1166211 L11,22 L11.0000487,18.9381123 C7.05371356,18.4460359 4,15.0796344 4,11 C4,10.4477153 4.44771525,10 5,10 C5.55228475,10 6,10.4477153 6,11 C6,14.3137085 8.6862915,17 12,17 C15.3137085,17 18,14.3137085 18,11 C18,10.4477153 18.4477153,10 19,10 Z M12,2 C14.209139,2 16,3.790861 16,6 L16,11 C16,13.209139 14.209139,15 12,15 C9.790861,15 8,13.209139 8,11 L8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 L10,11 C10,12.1045695 10.8954305,13 12,13 C13.1045695,13 14,12.1045695 14,11 L14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\r\n    'Microphone'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M11.657825,8.68730116 L7.89384699,12.5266719 C6.53977525,13.9078658 6.53979565,16.118605 7.89389288,17.4997739 C9.18119565,18.812813 11.2598788,18.8798255 12.6276396,17.6859428 L12.8071445,17.5177786 L19.3928802,10.8005213 C21.4766204,8.67512215 21.4766204,5.27313659 19.3928802,3.14773741 C17.4051081,1.12022499 14.1862843,1.0310006 12.0906645,2.90336495 L11.834659,3.14773741 L5.26671543,9.84699003 C2.45333216,12.7166196 2.45333216,17.3098454 5.26671543,20.179475 C7.96150749,22.9281424 12.3352577,23.0332941 15.1578204,20.4629606 L15.452067,20.1794113 L19.2160679,16.340063 C19.6027032,15.945688 19.596429,15.3125541 19.202054,14.9259188 C18.8076791,14.5392835 18.1745452,14.5455577 17.7879099,14.9399327 L13.9520378,18.8511531 C11.9281881,20.8353343 8.67903707,20.8031766 6.6948559,18.7793268 C4.64395201,16.6874204 4.64395201,13.3390446 6.6948559,11.2471382 L13.3088798,4.50180526 C14.6072848,3.22884976 16.6917843,3.24948061 17.9647398,4.54788555 C19.2860006,5.89556155 19.2860006,8.05269718 17.9647398,9.40037319 L11.3764629,16.119959 C10.803533,16.6816592 9.88373353,16.6725557 9.32203335,16.0996258 C8.73040544,15.4961698 8.73039653,14.5302606 9.3220133,13.9267937 L13.0859914,10.0874229 C13.4726243,9.6930457 13.4663463,9.05991185 13.0719691,8.67327889 C12.6775919,8.28664594 12.044458,8.29292392 11.657825,8.68730116 Z' />,\r\n    'Attach'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport AttachFileIcon from '../../Assets/Icons/Attach';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\r\nimport PollIcon from '@material-ui/icons/PollOutlined';\r\nimport { canSendMediaMessages, canSendPolls, isPrivateChat } from '../../Utils/Chat';\r\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\r\n\r\nclass AttachButton extends React.Component {\r\n    state = {\r\n        anchorEl: null\r\n    };\r\n\r\n    handleMenuClick = event => {\r\n        this.setState({ anchorEl: event.currentTarget });\r\n    };\r\n\r\n    handleMenuClose = () => {\r\n        this.setState({ anchorEl: null });\r\n    };\r\n\r\n    handleAttachPhoto = () => {\r\n        this.handleMenuClose();\r\n\r\n        const { onAttachPhoto } = this.props;\r\n        if (!onAttachPhoto) return;\r\n\r\n        setTimeout(() => onAttachPhoto(), ANIMATION_DURATION_300MS);\r\n    };\r\n\r\n    handleAttachDocument = () => {\r\n        this.handleMenuClose();\r\n\r\n        const { onAttachDocument } = this.props;\r\n        if (!onAttachDocument) return;\r\n\r\n        setTimeout(() => onAttachDocument(), ANIMATION_DURATION_300MS);\r\n    };\r\n\r\n    handleAttachPoll = () => {\r\n        this.handleMenuClose();\r\n\r\n        const { onAttachPoll } = this.props;\r\n        if (!onAttachPoll) return;\r\n\r\n        onAttachPoll();\r\n    };\r\n\r\n    render() {\r\n        const { classes, t, chatId } = this.props;\r\n        const { anchorEl } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <IconButton\r\n                    className='inputbox-icon-button'\r\n                    aria-label='Attach'\r\n                    open={Boolean(anchorEl)}\r\n                    onClick={this.handleMenuClick}>\r\n                    <AttachFileIcon />\r\n                </IconButton>\r\n                <Menu\r\n                    id='attach-menu'\r\n                    anchorEl={anchorEl}\r\n                    open={Boolean(anchorEl)}\r\n                    getContentAnchorEl={null}\r\n                    disableAutoFocusItem\r\n                    disableRestoreFocus={true}\r\n                    anchorOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    onClose={this.handleMenuClose}>\r\n                    <MenuItem onClick={this.handleAttachPhoto} disabled={!canSendMediaMessages(chatId)}>\r\n                        <ListItemIcon>\r\n                            <PhotoIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('AttachPhoto')} />\r\n                    </MenuItem>\r\n                    <MenuItem onClick={this.handleAttachDocument} disabled={!canSendMediaMessages(chatId)}>\r\n                        <ListItemIcon>\r\n                            <InsertDriveFileIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('AttachDocument')} />\r\n                    </MenuItem>\r\n                    {!isPrivateChat(chatId) && (\r\n                        <MenuItem onClick={this.handleAttachPoll} disabled={!canSendPolls(chatId)}>\r\n                            <ListItemIcon>\r\n                                <PollIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('Poll')} />\r\n                        </MenuItem>\r\n                    )}\r\n                </Menu>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nAttachButton.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    onAttachDocument: PropTypes.func.isRequired,\r\n    onAttachPhoto: PropTypes.func.isRequired,\r\n    onAttachPoll: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withTranslation()(AttachButton);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nexport function focusNode(node, toEnd = false) {\r\n    if (!node) return;\r\n\r\n    if (toEnd && node.childNodes && node.childNodes.length > 0) {\r\n        const lastNode = node.childNodes[node.childNodes.length - 1];\r\n        const range = document.createRange();\r\n        range.setStart(lastNode, lastNode.length);\r\n        range.collapse(true);\r\n\r\n        const selection = window.getSelection();\r\n        selection.removeAllRanges();\r\n        selection.addRange(range);\r\n\r\n        node.scrollTop = node.scrollHeight;\r\n    }\r\n\r\n    node.focus();\r\n}\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nconst keys = {\r\n    backspace: 8,\r\n    shift: 16,\r\n    ctrl: 17,\r\n    alt: 18,\r\n    delete: 46,\r\n    cmd: 91,\r\n    leftArrow: 37,\r\n    upArrow: 38,\r\n    rightArrow: 39,\r\n    downArrow: 40\r\n};\r\n\r\nexport const utils = {\r\n    special: {},\r\n    navigational: {},\r\n    isSpecial(e) {\r\n        return typeof this.special[e.keyCode] !== 'undefined';\r\n    },\r\n    isNavigational(e) {\r\n        return typeof this.navigational[e.keyCode] !== 'undefined';\r\n    }\r\n};\r\n\r\nutils.special[keys['backspace']] = true;\r\nutils.special[keys['shift']] = true;\r\nutils.special[keys['ctrl']] = true;\r\nutils.special[keys['alt']] = true;\r\nutils.special[keys['delete']] = true;\r\n\r\nutils.navigational[keys['upArrow']] = true;\r\nutils.navigational[keys['downArrow']] = true;\r\nutils.navigational[keys['leftArrow']] = true;\r\nutils.navigational[keys['rightArrow']] = true;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from '../../Utils/HOC';\r\nimport { withTranslation } from 'react-i18next';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport Typography from '@material-ui/core/es/Typography/Typography';\r\nimport { focusNode } from '../../Utils/Component';\r\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\r\nimport { utils } from '../../Utils/Key';\r\nimport { POLL_OPTION_HINT_LENGTH, POLL_OPTION_LENGTH, POLL_OPTION_MAX_LENGTH } from '../../Constants';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './CreatePollOption.css';\r\n\r\nclass CreatePollOption extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.optionTextRef = React.createRef();\r\n\r\n        this.state = {\r\n            remainLength: POLL_OPTION_MAX_LENGTH\r\n        };\r\n    }\r\n\r\n    getText = () => {\r\n        return this.optionTextRef.current.innerText;\r\n    };\r\n\r\n    focus = (toEnd = false) => {\r\n        const node = this.optionTextRef.current;\r\n\r\n        focusNode(node, toEnd);\r\n    };\r\n\r\n    handleDelete = () => {\r\n        const { option, onDelete } = this.props;\r\n        if (!option) return;\r\n        if (!onDelete) return;\r\n\r\n        onDelete(option.id);\r\n    };\r\n\r\n    handleInput = event => {\r\n        const { option } = this.props;\r\n\r\n        event.preventDefault();\r\n\r\n        const node = this.optionTextRef.current;\r\n        const length = node.dataset.length;\r\n        const maxLength = node.dataset.maxLength;\r\n        const text = this.getText();\r\n\r\n        this.setState({\r\n            remainLength: length - text.length\r\n        });\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdatePollOption',\r\n            id: option.id,\r\n            text\r\n        });\r\n    };\r\n\r\n    handleKeyDown = event => {\r\n        const node = this.optionTextRef.current;\r\n        const maxLength = node.dataset.maxLength;\r\n        const innerText = this.getText();\r\n        const length = innerText.length;\r\n\r\n        let hasSelection = false;\r\n        const selection = window.getSelection();\r\n        const isSpecial = utils.isSpecial(event);\r\n        const isNavigational = utils.isNavigational(event);\r\n\r\n        if (selection) {\r\n            hasSelection = !!selection.toString();\r\n        }\r\n\r\n        switch (event.key) {\r\n            case 'Backspace': {\r\n                const text = this.getText();\r\n                if (!text) {\r\n                    const { option, onDelete } = this.props;\r\n                    if (onDelete) {\r\n                        onDelete(option.id, true);\r\n                    }\r\n\r\n                    event.preventDefault();\r\n                    return false;\r\n                }\r\n\r\n                break;\r\n            }\r\n            case 'Enter': {\r\n                const { option, onFocusNext } = this.props;\r\n                if (option && onFocusNext) {\r\n                    onFocusNext(option.id);\r\n                }\r\n\r\n                event.preventDefault();\r\n                return false;\r\n            }\r\n            case 'ArrowUp': {\r\n                const selection = window.getSelection();\r\n                if (!selection) break;\r\n                if (!selection.isCollapsed) break;\r\n\r\n                const firstChild = node.childNodes && node.childNodes.length > 0 ? node.childNodes[0] : null;\r\n\r\n                if (!firstChild || (selection.anchorNode === firstChild && !selection.anchorOffset)) {\r\n                    const { option, onFocusPrev } = this.props;\r\n                    if (onFocusPrev) {\r\n                        onFocusPrev(option.id);\r\n                    }\r\n\r\n                    event.preventDefault();\r\n                    return false;\r\n                }\r\n\r\n                break;\r\n            }\r\n            case 'ArrowDown': {\r\n                const selection = window.getSelection();\r\n                if (!selection) break;\r\n                if (!selection.isCollapsed) break;\r\n\r\n                const lastChild =\r\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\r\n\r\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\r\n                    const { option, onFocusNext } = this.props;\r\n                    if (onFocusNext) {\r\n                        onFocusNext(option.id);\r\n                    }\r\n\r\n                    event.preventDefault();\r\n                    return false;\r\n                }\r\n\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (isSpecial || isNavigational) {\r\n            return true;\r\n        }\r\n\r\n        if (length >= maxLength && !hasSelection) {\r\n            event.preventDefault();\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    };\r\n\r\n    handlePaste = event => {\r\n        event.preventDefault();\r\n\r\n        const node = this.optionTextRef.current;\r\n        const maxLength = node.dataset.maxLength;\r\n\r\n        const selection = window.getSelection();\r\n        const selectionString = selection ? selection.toString() : '';\r\n\r\n        const innerText = this.getText();\r\n        if (innerText.length - selection.length >= maxLength) return;\r\n\r\n        let pasteText = event.clipboardData.getData('text/plain');\r\n        if (!pasteText) return;\r\n\r\n        pasteText = pasteText.replace('\\r\\n', '\\n').replace('\\n', ' ');\r\n\r\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\r\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\r\n        }\r\n        document.execCommand('insertText', false, pasteText);\r\n    };\r\n\r\n    handleChange = () => {\r\n        const { option } = this.props;\r\n        if (!option) return;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdatePollChooseOption',\r\n            id: option.id\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { t, option } = this.props;\r\n        const { remainLength } = this.state;\r\n\r\n        const { is_chosen } = option;\r\n\r\n        return (\r\n            <div className='create-poll-option'>\r\n                <div className='create-poll-option-wrapper'>\r\n                    <Radio\r\n                        key={Date.now()}\r\n                        classes={{ root: 'create-poll-radio-root' }}\r\n                        color='primary'\r\n                        checked={is_chosen}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                    <div\r\n                        ref={this.optionTextRef}\r\n                        className='create-poll-option-text'\r\n                        contentEditable\r\n                        suppressContentEditableWarning\r\n                        placeholder={t('Option')}\r\n                        data-length={POLL_OPTION_LENGTH}\r\n                        data-max-length={POLL_OPTION_MAX_LENGTH}\r\n                        onInput={this.handleInput}\r\n                        onKeyDown={this.handleKeyDown}\r\n                        onPaste={this.handlePaste}\r\n                    />\r\n                </div>\r\n                <div className='create-poll-option-delete-button'>\r\n                    <IconButton className='create-poll-option-button' onClick={this.handleDelete}>\r\n                        <CloseIcon fontSize='small' />\r\n                    </IconButton>\r\n                </div>\r\n                <div className='create-poll-option-bottom-border' />\r\n                {remainLength <= POLL_OPTION_LENGTH - POLL_OPTION_HINT_LENGTH && (\r\n                    <Typography\r\n                        align='center'\r\n                        className='create-poll-option-subtitle'\r\n                        color={remainLength >= 0 ? 'textSecondary' : 'error'}\r\n                        variant='subtitle1'>\r\n                        {remainLength}\r\n                    </Typography>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nCreatePollOption.propTypes = {\r\n    option: PropTypes.object.isRequired,\r\n    onDelete: PropTypes.func.isRequired,\r\n    onFocusPrev: PropTypes.func.isRequired,\r\n    onFocusNext: PropTypes.func.isRequired\r\n};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTranslation(),\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(CreatePollOption);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withSnackbar } from 'notistack';\r\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CreatePollOption from './CreatePollOption';\r\nimport { focusNode } from '../../Utils/Component';\r\nimport { utils } from '../../Utils/Key';\r\nimport { hasPollData, isValidPoll } from '../../Utils/Poll';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport {\r\n    NOTIFICATION_AUTO_HIDE_DURATION_MS,\r\n    POLL_OPTIONS_MAX_COUNT,\r\n    POLL_QUESTION_HINT_LENGTH,\r\n    POLL_QUESTION_LENGTH,\r\n    POLL_QUESTION_MAX_LENGTH\r\n} from '../../Constants';\r\nimport PollStore from '../../Stores/PollStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './CreatePollDialog.css';\r\n\r\nclass CreatePollDialog extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.questionRef = React.createRef();\r\n        this.optionsRefMap = new Map();\r\n\r\n        this.state = {\r\n            poll: null,\r\n            confirm: false,\r\n            remainLength: POLL_QUESTION_MAX_LENGTH\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        PollStore.on('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\r\n        PollStore.on('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\r\n        PollStore.on('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\r\n        PollStore.on('clientUpdatePollChangeType', this.handleClientUpdatePoll);\r\n        PollStore.on('clientUpdateDeletePoll', this.handleClientUpdatePoll);\r\n        PollStore.on('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\r\n        PollStore.on('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\r\n        PollStore.on('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\r\n        PollStore.on('clientUpdatePollOption', this.handleClientUpdatePoll);\r\n        PollStore.on('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        PollStore.off('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\r\n        PollStore.off('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\r\n        PollStore.off('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\r\n        PollStore.off('clientUpdatePollChangeType', this.handleClientUpdatePoll);\r\n        PollStore.off('clientUpdateDeletePoll', this.handleClientUpdatePoll);\r\n        PollStore.off('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\r\n        PollStore.off('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\r\n        PollStore.off('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\r\n        PollStore.off('clientUpdatePollOption', this.handleClientUpdatePoll);\r\n        PollStore.off('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\r\n    }\r\n\r\n    handleClientUpdateNewPoll = update => {\r\n        const { poll } = PollStore;\r\n\r\n        this.setState({\r\n            confirm: false,\r\n            remainLength: POLL_QUESTION_MAX_LENGTH,\r\n            poll\r\n        });\r\n    };\r\n\r\n    handleClientUpdatePollQuestion = update => {\r\n        const { poll } = PollStore;\r\n\r\n        const node = this.questionRef.current;\r\n        const length = node.dataset.length;\r\n        const innerText = node.innerText;\r\n\r\n        this.setState({\r\n            remainLength: length - innerText.length,\r\n            poll\r\n        });\r\n    };\r\n\r\n    handleClientUpdatePoll = update => {\r\n        const { poll } = PollStore;\r\n\r\n        this.setState({ poll });\r\n    };\r\n\r\n    handleClientUpdateNewPollOption = update => {\r\n        const { poll } = PollStore;\r\n\r\n        this.setState({ poll }, () => {\r\n            setTimeout(() => {\r\n                const node = this.optionsRefMap.get(poll.options.length - 1);\r\n\r\n                node.focus(true);\r\n            });\r\n        });\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { poll } = this.state;\r\n\r\n        if (poll && !prevState.poll) {\r\n            setTimeout(() => {\r\n                focusNode(this.questionRef.current, true);\r\n            }, 0);\r\n        }\r\n    }\r\n\r\n    handleKeyDown = event => {\r\n        const node = this.questionRef.current;\r\n        const maxLength = node.dataset.maxLength;\r\n        const innerText = node.innerText;\r\n        const length = innerText.length;\r\n\r\n        let hasSelection = false;\r\n        const selection = window.getSelection();\r\n        const isSpecial = utils.isSpecial(event);\r\n        const isNavigational = utils.isNavigational(event);\r\n\r\n        if (selection) {\r\n            hasSelection = !!selection.toString();\r\n        }\r\n\r\n        switch (event.key) {\r\n            case 'Enter': {\r\n                if (!event.shiftKey) {\r\n                    this.handleFocusNextOption(0);\r\n\r\n                    event.preventDefault();\r\n                    return false;\r\n                }\r\n\r\n                break;\r\n            }\r\n            case 'ArrowDown': {\r\n                const selection = window.getSelection();\r\n                if (!selection) break;\r\n                if (!selection.isCollapsed) break;\r\n\r\n                const lastChild =\r\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\r\n\r\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\r\n                    this.handleFocusNextOption(0);\r\n\r\n                    event.preventDefault();\r\n                    return false;\r\n                }\r\n\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (isSpecial || isNavigational) {\r\n            return true;\r\n        }\r\n\r\n        if (length >= maxLength && !hasSelection) {\r\n            event.preventDefault();\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    };\r\n\r\n    handlePaste = event => {\r\n        event.preventDefault();\r\n\r\n        const node = this.questionRef.current;\r\n        const maxLength = node.dataset.maxLength;\r\n\r\n        const selection = window.getSelection();\r\n        const selectionString = selection ? selection.toString() : '';\r\n\r\n        const innerText = node.innerText;\r\n        if (innerText.length - selection.length >= maxLength) return;\r\n\r\n        let pasteText = event.clipboardData.getData('text/plain');\r\n        if (!pasteText) return;\r\n\r\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\r\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\r\n        }\r\n        document.execCommand('insertText', false, pasteText);\r\n    };\r\n\r\n    handleInput = event => {\r\n        event.preventDefault();\r\n\r\n        const node = this.questionRef.current;\r\n        //const length = node.dataset.length;\r\n\r\n        const innerText = node.innerText;\r\n        const innerHtml = node.innerHTML;\r\n\r\n        if (innerHtml === '<br>') {\r\n            node.innerText = '';\r\n        }\r\n\r\n        // this.setState({\r\n        //     remainLength: length - innerText.length\r\n        // });\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdatePollQuestion',\r\n            question: innerText\r\n        });\r\n    };\r\n\r\n    handleAddOption = () => {\r\n        const { poll } = this.state;\r\n        if (!poll) return;\r\n\r\n        const { options } = poll;\r\n        if (options.length >= POLL_OPTIONS_MAX_COUNT) return;\r\n\r\n        const option = {\r\n            id: Date.now(),\r\n            text: ''\r\n        };\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateNewPollOption',\r\n            option\r\n        });\r\n    };\r\n\r\n    handleDeleteOption = (id, backspace = false) => {\r\n        if (backspace) {\r\n            this.handleDeleteByBackspace(id);\r\n        } else {\r\n            this.handleDelete(id);\r\n        }\r\n    };\r\n\r\n    handleDelete = id => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateDeletePollOption',\r\n            id\r\n        });\r\n    };\r\n\r\n    handleDeleteByBackspace = id => {\r\n        const { poll } = this.state;\r\n        if (!poll) return;\r\n\r\n        const { options } = poll;\r\n\r\n        const index = options.findIndex(x => x.id === id);\r\n        const prevIndex = index - 1;\r\n        let deleteOption = true;\r\n        for (let i = index; i < options.length; i++) {\r\n            const { text } = options[i];\r\n            if (text) {\r\n                deleteOption = false;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (deleteOption) {\r\n            this.handleDeleteOption(id);\r\n        }\r\n\r\n        const prevNode = this.optionsRefMap.get(prevIndex);\r\n        if (!prevNode) {\r\n            const element = this.questionRef.current;\r\n\r\n            focusNode(element, true);\r\n            return;\r\n        }\r\n\r\n        prevNode.focus(true);\r\n    };\r\n\r\n    handleFocusPrevOption = id => {\r\n        const { poll } = this.state;\r\n        if (!poll) return;\r\n\r\n        const { options } = poll;\r\n\r\n        const index = options.findIndex(x => x.id === id);\r\n        const prevIndex = index - 1;\r\n\r\n        const prevNode = this.optionsRefMap.get(prevIndex);\r\n        if (!prevNode) {\r\n            const element = this.questionRef.current;\r\n\r\n            focusNode(element, false);\r\n            return;\r\n        }\r\n\r\n        prevNode.focus(false);\r\n    };\r\n\r\n    handleFocusNextOption = id => {\r\n        const { poll } = this.state;\r\n        if (!poll) return;\r\n\r\n        const { options } = poll;\r\n\r\n        const index = options.findIndex(x => x.id === id);\r\n        const nextIndex = index + 1;\r\n\r\n        const nextNode = this.optionsRefMap.get(nextIndex);\r\n        if (!nextNode) {\r\n            const text = index >= 0 && index < options.length ? options[index].text : '';\r\n            if (options.length && !text) {\r\n                return;\r\n            }\r\n\r\n            this.handleAddOption();\r\n            return;\r\n        }\r\n\r\n        nextNode.focus(nextNode, true);\r\n    };\r\n\r\n    getHint = () => {\r\n        const { poll } = this.state;\r\n        if (!poll) return;\r\n\r\n        const { options } = poll;\r\n\r\n        const addCount = POLL_OPTIONS_MAX_COUNT - options.length;\r\n\r\n        if (addCount <= 0) {\r\n            return 'You have added the maximum number of options.';\r\n        }\r\n        if (addCount === 1) {\r\n            return 'You can add 1 more option.';\r\n        }\r\n\r\n        return `You can add ${POLL_OPTIONS_MAX_COUNT - options.length} more options.`;\r\n    };\r\n\r\n    handleClose = () => {\r\n        const { poll } = this.state;\r\n\r\n        if (hasPollData(poll)) {\r\n            this.setState({ confirm: true });\r\n        } else {\r\n            this.handleConfirmationDone();\r\n        }\r\n    };\r\n\r\n    handleSend = () => {\r\n        const { onSend } = this.props;\r\n\r\n        const inputMessagePoll = PollStore.getInputMessagePoll();\r\n        if (!inputMessagePoll) return;\r\n\r\n        onSend(inputMessagePoll);\r\n\r\n        this.handleConfirmationDone();\r\n    };\r\n\r\n    handleConfirmationClose = () => {\r\n        this.setState({ confirm: false });\r\n    };\r\n\r\n    handleConfirmationDone = () => {\r\n        this.handleConfirmationClose();\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateDeletePoll'\r\n        });\r\n    };\r\n\r\n    handleChangeAnonymous = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdatePollChangeAnonymous'\r\n        });\r\n    };\r\n\r\n    handleChangeAllowMultipleAnswers = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdatePollChangeAllowMultipleAnswers'\r\n        });\r\n    };\r\n\r\n    handleChangeType = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdatePollChangeType'\r\n        });\r\n    };\r\n\r\n    handleScheduledAction = message => {\r\n        const { enqueueSnackbar, closeSnackbar } = this.props;\r\n\r\n        const snackKey = enqueueSnackbar(message, {\r\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\r\n            preventDuplicate: true,\r\n            action: [\r\n                <IconButton\r\n                    key='close'\r\n                    aria-label='Close'\r\n                    color='inherit'\r\n                    className='notification-close-button'\r\n                    onClick={() => closeSnackbar(snackKey)}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ]\r\n        });\r\n    };\r\n\r\n    handleAllowMultipleAnswersClick = event => {\r\n        const { t } = this.props;\r\n        const { poll } = this.state;\r\n        if (!poll) return;\r\n\r\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\r\n        if (quizPoll) {\r\n            event.stopPropagation();\r\n\r\n            this.handleScheduledAction(t('PollQuizOneRightAnswer'));\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        const { remainLength, confirm, poll } = this.state;\r\n        if (!poll) return null;\r\n\r\n        const { is_anonymous } = poll;\r\n\r\n        const options = poll ? poll.options : [];\r\n        const allowMultipleAnswers = poll.type.allow_multiple_answers;\r\n        const allowMultipleAnswersDisabled = poll.type['@type'] !== 'pollTypeRegular';\r\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\r\n\r\n        this.optionsRefMap.clear();\r\n        const items = options.map((x, i) => (\r\n            <CreatePollOption\r\n                ref={el => this.optionsRefMap.set(i, el)}\r\n                key={x.id}\r\n                option={x}\r\n                onDelete={this.handleDeleteOption}\r\n                onFocusPrev={this.handleFocusPrevOption}\r\n                onFocusNext={this.handleFocusNextOption}\r\n            />\r\n        ));\r\n\r\n        const canAddOption = POLL_OPTIONS_MAX_COUNT - options.length > 0;\r\n        const hint = this.getHint();\r\n\r\n        return (\r\n            <>\r\n                <Dialog\r\n                    className={classNames('create-poll-dialog', { 'create-quiz-dialog': quizPoll })}\r\n                    open\r\n                    manager={modalManager}\r\n                    transitionDuration={0}\r\n                    onClose={this.handleClose}\r\n                    aria-labelledby='dialog-title'>\r\n                    <DialogTitle id='dialog-title'>{t('NewPoll')}</DialogTitle>\r\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\r\n                        <div className='create-poll-dialog-question-title'>\r\n                            <Typography color='primary' variant='subtitle1' style={{ flexGrow: 1 }}>\r\n                                {t('Question')}\r\n                            </Typography>\r\n                            {remainLength <= POLL_QUESTION_LENGTH - POLL_QUESTION_HINT_LENGTH && (\r\n                                <Typography color={remainLength >= 0 ? 'textSecondary' : 'error'} variant='subtitle1'>\r\n                                    {remainLength}\r\n                                </Typography>\r\n                            )}\r\n                        </div>\r\n                        <div\r\n                            ref={this.questionRef}\r\n                            id='create-poll-dialog-question'\r\n                            contentEditable\r\n                            suppressContentEditableWarning\r\n                            placeholder={t('QuestionHint')}\r\n                            data-length={POLL_QUESTION_LENGTH}\r\n                            data-max-length={POLL_QUESTION_MAX_LENGTH}\r\n                            onPaste={this.handlePaste}\r\n                            onKeyDown={this.handleKeyDown}\r\n                            onInput={this.handleInput}\r\n                        />\r\n                        <Divider className='divider' />\r\n                        <Typography color='primary' variant='subtitle1'>\r\n                            {t('PollOptions')}\r\n                        </Typography>\r\n                        <List classes={{ root: 'create-poll-dialog-list' }}>\r\n                            {items}\r\n                            {canAddOption && (\r\n                                <ListItem\r\n                                    selected={false}\r\n                                    className='create-poll-add-option'\r\n                                    button\r\n                                    onClick={this.handleAddOption}>\r\n                                    <ListItemText disableTypography primary={t('AddAnOption')} />\r\n                                </ListItem>\r\n                            )}\r\n                        </List>\r\n                        <Typography>{hint}</Typography>\r\n                        <Divider className='divider' />\r\n                        <Typography color='primary' variant='subtitle1'>\r\n                            {t('Settings')}\r\n                        </Typography>\r\n                        <FormGroup>\r\n                            <FormControlLabel\r\n                                control={\r\n                                    <Checkbox\r\n                                        color='primary'\r\n                                        checked={is_anonymous}\r\n                                        onChange={this.handleChangeAnonymous}\r\n                                    />\r\n                                }\r\n                                label={t('PollAnonymous')}\r\n                            />\r\n                            <div onClick={this.handleAllowMultipleAnswersClick} style={{ background: 'transparent' }}>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Checkbox\r\n                                            color='primary'\r\n                                            disabled={allowMultipleAnswersDisabled}\r\n                                            checked={allowMultipleAnswers}\r\n                                            onChange={this.handleChangeAllowMultipleAnswers}\r\n                                        />\r\n                                    }\r\n                                    label={t('PollMultiple')}\r\n                                />\r\n                            </div>\r\n                            <FormControlLabel\r\n                                control={\r\n                                    <Checkbox color='primary' checked={quizPoll} onChange={this.handleChangeType} />\r\n                                }\r\n                                label={t('PollQuiz')}\r\n                            />\r\n                        </FormGroup>\r\n                        <Typography>{t('QuizInfo')}</Typography>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button color='primary' onClick={this.handleClose}>\r\n                            {t('Cancel')}\r\n                        </Button>\r\n                        {isValidPoll(poll) && (\r\n                            <Button color='primary' onClick={this.handleSend}>\r\n                                {t('Create')}\r\n                            </Button>\r\n                        )}\r\n                    </DialogActions>\r\n                </Dialog>\r\n                <Dialog\r\n                    className='create-poll-dialog-root'\r\n                    open={confirm}\r\n                    manager={modalManager}\r\n                    transitionDuration={0}\r\n                    onClose={this.handleConfirmationClose}\r\n                    aria-labelledby='dialog-title'>\r\n                    <DialogTitle id='dialog-title'>{t('CancelPollAlertTitle')}</DialogTitle>\r\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\r\n                        {t('CancelPollAlertText')}\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button color='primary' onClick={this.handleConfirmationClose}>\r\n                            {t('Cancel')}\r\n                        </Button>\r\n                        <Button color='primary' onClick={this.handleConfirmationDone}>\r\n                            {t('Ok')}\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nCreatePollDialog.propTypes = {\r\n    onSend: PropTypes.func.isRequired\r\n};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTranslation(),\r\n    withSnackbar,\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(CreatePollDialog);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { validateUrl } from '../../Utils/Url';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport './EditUrlDialog.css';\r\n\r\nclass EditUrlDialog extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.textRef = React.createRef();\r\n        this.textInputRef = React.createRef();\r\n        this.urlRef = React.createRef();\r\n        this.urlInputRef = React.createRef();\r\n\r\n        this.state = {};\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { defaultText, defaultUrl, open } = this.props;\r\n\r\n        if (open && prevProps.open !== open) {\r\n            setTimeout(() => {\r\n                const text = this.textInputRef.current;\r\n                const url = this.urlInputRef.current;\r\n\r\n                if (!text) return;\r\n                if (!url) return;\r\n\r\n                if (!defaultText) {\r\n                    text.focus();\r\n                } else if (!defaultUrl) {\r\n                    url.focus();\r\n                } else {\r\n                    text.focus();\r\n                    text.select();\r\n                }\r\n            }, 0);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        // const { defaultText, defaultUrl } = this.props;\r\n        //\r\n        // const text = this.textInputRef.current;\r\n        // const url = this.urlInputRef.current;\r\n        //\r\n        // if (!text) return;\r\n        // if (!url) return;\r\n        //\r\n        // setTimeout(() => {\r\n        //     if (!defaultText) {\r\n        //         text.focus();\r\n        //     } else if (!defaultUrl) {\r\n        //         url.focus();\r\n        //     } else {\r\n        //         text.focus();\r\n        //         // text.select();\r\n        //     }\r\n        // }, 0);\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { defaultText, defaultUrl, onDone, onCancel, open } = this.props;\r\n        const { textError, urlError } = this.state;\r\n\r\n        if (nextProps.defaultText !== defaultText) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.defaultUrl !== defaultUrl) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.textError !== textError) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.urlError !== urlError) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.onDone !== onDone) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.onCancel !== onCancel) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.open !== open) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (state.prevOpen !== props.open) {\r\n            return {\r\n                prevOpen: true,\r\n                textError: false,\r\n                urlError: false,\r\n                text: null,\r\n                url: null\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    handleTextKeyDown = event => {\r\n        if (event.key === 'Enter') {\r\n            this.urlInputRef.current.focus();\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n    };\r\n\r\n    handleUrlKeyDown = event => {\r\n        if (event.key === 'Enter') {\r\n            this.handleDone();\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n    };\r\n\r\n    handleTextChange = event => {\r\n        this.setState({\r\n            text: event.target.value\r\n        });\r\n    };\r\n\r\n    handleUrlChange = event => {\r\n        this.setState({\r\n            url: event.target.value\r\n        });\r\n    };\r\n\r\n    handleDone = () => {\r\n        const { defaultText, defaultUrl } = this.props;\r\n        let { text, url } = this.state;\r\n\r\n        text = text !== null ? text : defaultText;\r\n        url = url !== null ? url : defaultUrl;\r\n\r\n        if (!text && !url) {\r\n            this.textInputRef.current.focus();\r\n            return;\r\n        }\r\n\r\n        if (!text) {\r\n            this.setState({ textError: true });\r\n            this.textInputRef.current.focus();\r\n            return;\r\n        }\r\n\r\n        url = validateUrl(url);\r\n        if (!url) {\r\n            this.setState({ urlError: true });\r\n            this.urlInputRef.current.focus();\r\n            return;\r\n        }\r\n\r\n        const { onDone } = this.props;\r\n\r\n        onDone(text, url);\r\n    };\r\n\r\n    handleCancel = () => {\r\n        const { onCancel } = this.props;\r\n\r\n        onCancel();\r\n    };\r\n\r\n    render() {\r\n        const { open, defaultUrl, defaultText, t } = this.props;\r\n        const { textError, urlError } = this.state;\r\n        if (!open) return null;\r\n\r\n        return (\r\n            <Dialog\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                open={true}\r\n                onClose={this.handleCancel}\r\n                aria-labelledby='edit-url-dialog-title'>\r\n                <DialogTitle id='edit-url-dialog-title'>{t('CreateLink')}</DialogTitle>\r\n                <DialogContent>\r\n                    <div style={{ display: 'flex', flexDirection: 'column', width: 260 }}>\r\n                        <TextField\r\n                            ref={this.textRef}\r\n                            inputRef={this.textInputRef}\r\n                            label={t('Text')}\r\n                            margin='normal'\r\n                            autoComplete='off'\r\n                            defaultValue={defaultText}\r\n                            error={textError}\r\n                            onChange={this.handleTextChange}\r\n                            onKeyDown={this.handleTextKeyDown}\r\n                        />\r\n                        <TextField\r\n                            ref={this.urlRef}\r\n                            inputRef={this.urlInputRef}\r\n                            label={t('URL')}\r\n                            margin='normal'\r\n                            autoComplete='off'\r\n                            defaultValue={defaultUrl}\r\n                            error={urlError}\r\n                            onChange={this.handleUrlChange}\r\n                            onKeyDown={this.handleUrlKeyDown}\r\n                        />\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.handleCancel} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    <Button onClick={this.handleDone} color='primary'>\r\n                        {t('Create')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nEditUrlDialog.propTypes = {\r\n    open: PropTypes.bool,\r\n    defaultText: PropTypes.string,\r\n    defaultUrl: PropTypes.string,\r\n    onDone: PropTypes.func.isRequired,\r\n    onCancel: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withTranslation()(EditUrlDialog);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { getSrc } from '../../Utils/File';\r\nimport { isBlurredThumbnail } from '../../Utils/Media';\r\nimport { hasVideoNote } from '../../Utils/Message';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport './ReplyTile.css';\r\nimport { THUMBNAIL_BLURRED_SIZE_90 } from '../../Constants';\r\n\r\nclass ReplyTile extends React.Component {\r\n    componentDidMount() {\r\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.off('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.off('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.off('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n    }\r\n\r\n    onClientUpdatePhotoBlob = update => {\r\n        const { chatId, messageId, photoSize } = this.props;\r\n        if (!photoSize) return;\r\n\r\n        const { photo } = photoSize;\r\n        if (!photo) return;\r\n\r\n        if (update.chatId === chatId && update.messageId === messageId && update.fileId === photo.id) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { chatId, messageId, photoSize, minithumbnail } = this.props;\r\n        if (!photoSize) return null;\r\n\r\n        const { photo } = photoSize;\r\n        if (!photo) return null;\r\n\r\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\r\n        const src = getSrc(photo);\r\n        const isBlurred = (!src && miniSrc) || isBlurredThumbnail(photoSize, THUMBNAIL_BLURRED_SIZE_90);\r\n        const isVideoNote = hasVideoNote(chatId, messageId);\r\n        const hasSrc = Boolean(src || miniSrc);\r\n\r\n        return (\r\n            <div className='reply-tile'>\r\n                {hasSrc && (\r\n                    <img\r\n                        className={classNames(\r\n                            'reply-tile-photo',\r\n                            { 'reply-tile-photo-round': isVideoNote },\r\n                            { 'reply-tile-photo-loading': !src },\r\n                            { 'media-blurred': src && isBlurred },\r\n                            { 'media-mini-blurred': !src && miniSrc && isBlurred }\r\n                        )}\r\n                        draggable={false}\r\n                        src={src || miniSrc}\r\n                        alt=''\r\n                    />\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nReplyTile.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    photoSize: PropTypes.object,\r\n    minithumbnail: PropTypes.object\r\n};\r\n\r\nexport default ReplyTile;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport ReplyTile from '../Tile/ReplyTile';\r\nimport { getContent, getTitle, isDeletedMessage, getReplyPhotoSize, getReplyMinithumbnail } from '../../Utils/Message';\r\nimport { openChat } from '../../Actions/Client';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport './Reply.css';\r\n\r\nclass Reply extends React.Component {\r\n    componentDidMount() {\r\n        MessageStore.on('getMessageResult', this.onGetMessageResult);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        MessageStore.off('getMessageResult', this.onGetMessageResult);\r\n    }\r\n\r\n    onGetMessageResult = result => {\r\n        const { chatId, messageId } = this.props;\r\n\r\n        if (chatId === result.chat_id && messageId === result.id) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    handleClick = event => {\r\n        event.stopPropagation();\r\n    };\r\n\r\n    handleOpen = event => {\r\n        if (event.button !== 0) return;\r\n\r\n        event.stopPropagation();\r\n\r\n        const { chatId, messageId, onClick } = this.props;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return null;\r\n        if (isDeletedMessage(message)) return null;\r\n\r\n        openChat(chatId, messageId, false);\r\n        if (onClick) onClick();\r\n    };\r\n\r\n    render() {\r\n        const { t, chatId, messageId } = this.props;\r\n        let { title } = this.props;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n\r\n        title = title || getTitle(message, t);\r\n        let content = !message ? t('Loading') : getContent(message, t);\r\n        const photoSize = getReplyPhotoSize(chatId, messageId);\r\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\r\n\r\n        if (isDeletedMessage(message)) {\r\n            title = null;\r\n            content = t('DeletedMessage');\r\n        }\r\n\r\n        return (\r\n            <div className='reply' onMouseDown={this.handleOpen} onClick={this.handleClick}>\r\n                <div className='reply-wrapper'>\r\n                    <div className='border reply-border' />\r\n                    {photoSize && (\r\n                        <ReplyTile\r\n                            chatId={chatId}\r\n                            messageId={messageId}\r\n                            photoSize={photoSize}\r\n                            minithumbnail={minithumbnail}\r\n                        />\r\n                    )}\r\n                    <div className='reply-content'>\r\n                        {title && <div className='reply-content-title'>{title}</div>}\r\n                        <div className={classNames('reply-content-subtitle')}>{content}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nReply.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    title: PropTypes.string,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(Reply);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Reply from '../Message/Reply';\r\nimport { editMessage, replyMessage } from '../../Actions/Client';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './InputBoxHeader.css';\r\n\r\nclass InputBoxHeader extends React.Component {\r\n    componentDidMount() {\r\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\r\n    }\r\n\r\n    onUpdateMessageContent = update => {\r\n        const { chatId, messageId, editMessageId } = this.props;\r\n        const { chat_id, message_id } = update;\r\n\r\n        if (chatId !== chat_id) return;\r\n        if (messageId !== message_id && editMessageId !== message_id) return;\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    handleClose = () => {\r\n        const { chatId, editMessageId } = this.props;\r\n\r\n        if (editMessageId) {\r\n            editMessage(chatId, 0);\r\n        } else {\r\n            replyMessage(chatId, 0);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { chatId, messageId, editMessageId, t, onClick } = this.props;\r\n        if (!chatId) return null;\r\n        if (!messageId && !editMessageId) return null;\r\n\r\n        return (\r\n            <div className='inputbox-header'>\r\n                <div className='inputbox-header-left-column'>\r\n                    <IconButton className='inputbox-icon-button' aria-label='Close' onClick={this.handleClose}>\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                </div>\r\n                <div className='inputbox-header-middle-column'>\r\n                    <Reply\r\n                        chatId={chatId}\r\n                        messageId={editMessageId || messageId}\r\n                        title={editMessageId ? t('EditMessage') : null}\r\n                        onClick={onClick}\r\n                    />\r\n                </div>\r\n                <div className='inputbox-header-right-column' />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nInputBoxHeader.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    editMessageId: PropTypes.number,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(InputBoxHeader);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from '../../Utils/HOC';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport './PasteFilesDialog.css';\r\n\r\nclass PasteFilesDialog extends React.Component {\r\n    handleDone = () => {\r\n        const { onConfirm } = this.props;\r\n        onConfirm();\r\n    };\r\n\r\n    handleCancel = () => {\r\n        const { onCancel } = this.props;\r\n        onCancel();\r\n    };\r\n\r\n    render() {\r\n        const { files, t } = this.props;\r\n        if (!files) return null;\r\n\r\n        return (\r\n            <Dialog\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                open={true}\r\n                onClose={this.handleCancel}\r\n                aria-labelledby='delete-dialog-title'>\r\n                <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        {files.length > 1 ? t('SendFilesConfirmation') : t('SendFileConfirmation')}\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.handleCancel} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    <Button onClick={this.handleDone} color='primary'>\r\n                        {t('Ok')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nPasteFilesDialog.propTypes = {\r\n    files: PropTypes.array,\r\n    onConfirm: PropTypes.func.isRequired,\r\n    onCancel: PropTypes.func.isRequired\r\n};\r\n\r\nconst enhance = compose(withTranslation());\r\n\r\nexport default enhance(PasteFilesDialog);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport './RecordTimer.css';\r\n\r\nclass RecordTimer extends React.Component {\r\n    state = { };\r\n\r\n    componentDidMount() {\r\n        MessageStore.on('clientUpdateRecordStart', this.onClientUpdateRecordStart);\r\n        MessageStore.on('clientUpdateRecordStop', this.onClientUpdateRecordStop);\r\n        MessageStore.on('clientUpdateRecordError', this.onClientUpdateRecordError);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        MessageStore.off('clientUpdateRecordStart', this.onClientUpdateRecordStart);\r\n        MessageStore.off('clientUpdateRecordStop', this.onClientUpdateRecordStop);\r\n        MessageStore.off('clientUpdateRecordError', this.onClientUpdateRecordError);\r\n    }\r\n\r\n    onClientUpdateRecordStart = () => {\r\n        this.timer = setInterval(() => {\r\n            const now = new Date();\r\n            const diff = now - this.startTime;\r\n\r\n            // console.log('[recordTimer] ');\r\n            this.setState({\r\n                time: diff\r\n            });\r\n        }, 25);\r\n        this.startTime = new Date();\r\n    }\r\n\r\n    onClientUpdateRecordStop = () => {\r\n        if (this.timer) {\r\n            clearTimeout(this.timer);\r\n        }\r\n\r\n        this.setState({\r\n            time: null\r\n        });\r\n    }\r\n\r\n    onClientUpdateRecordError = () => {\r\n        if (this.timer) {\r\n            clearTimeout(this.timer);\r\n        }\r\n\r\n        this.setState({\r\n            time: null\r\n        });\r\n    }\r\n\r\n    normalizeM(n) {\r\n        let msStr = n.toString();\r\n        if (msStr.length === 1) {\r\n            msStr += '0'\r\n        } else if (msStr.length > 2) {\r\n            msStr = msStr.substr(0, 2);\r\n        }\r\n\r\n        return msStr;\r\n    }\r\n\r\n    normalizeS(n) {\r\n        let msStr = n.toString();\r\n        if (msStr.length === 1) {\r\n            msStr = '0' + msStr;\r\n        }\r\n\r\n        return msStr;\r\n    }\r\n\r\n    msToTime(s) {\r\n        let ms = (s % 1000);\r\n        s = (s - ms) / 1000;\r\n        let secs = s % 60;\r\n        s = (s - secs) / 60;\r\n        let mins = s % 60;\r\n        let hrs = (s - mins) / 60;\r\n\r\n        let result = mins + ':' + this.normalizeS(secs) + ',' + this.normalizeM(ms);\r\n        if (hrs > 0) {\r\n            result = hrs + ':' + result;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    render() {\r\n        const { time } = this.state;\r\n        if (!time) return null;\r\n\r\n        return (\r\n            <div className='record-timer'>\r\n                {this.msToTime(time)}\r\n                <div className='record-timer-icon'/>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nRecordTimer.propTypes = {};\r\n\r\nexport default RecordTimer;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport EditUrlDialog from './EditUrlDialog';\r\nimport { focusInput } from '../../Utils/DOM';\r\nimport { editMessage as editMessageAction } from '../../Actions/Client';\r\nimport { getEntities, getNodes } from '../../Utils/Message';\r\nimport { getMedia, getMediaPhotoFromFile } from '../../Utils/Media';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport './EditMediaDialog.css';\r\n\r\nclass EditMediaDialog extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.captionRef = React.createRef();\r\n        this.editMediaRef = React.createRef();\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { prevOpen } = state;\r\n        const { open, chatId, messageId, newItem } = props;\r\n\r\n        if (prevOpen !== open) {\r\n            if (open) {\r\n                const editMessage = MessageStore.get(chatId, messageId);\r\n                let sendAsPhoto = false;\r\n                if (editMessage && editMessage.content['@type'] === 'messagePhoto') {\r\n                    sendAsPhoto = true;\r\n                } else if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto'){\r\n                    sendAsPhoto = true;\r\n                }\r\n\r\n                return {\r\n                    prevOpen: true,\r\n                    sendAsPhoto,\r\n                    editMessage,\r\n                    editMedia: null,\r\n                    editFile: null\r\n                }\r\n            } else {\r\n                return {\r\n                    prevOpen: false,\r\n                    sendAsPhoto: false,\r\n                    editMessage: null,\r\n                    editMedia: null,\r\n                    editFile: null\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener('selectionchange', this.handleSelectionChange, true);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('selectionchange', this.handleSelectionChange, true);\r\n    }\r\n\r\n    handleSelectionChange = () => {\r\n        if (document.activeElement === this.captionRef.current) {\r\n            this.saveSelection();\r\n        }\r\n    };\r\n\r\n    handleEnter = () => {\r\n        const { chatId, messageId, open, newItem } = this.props;\r\n        if (!open) return;\r\n\r\n        let text = null;\r\n        let caption = null;\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (message) {\r\n            const { content } = message;\r\n            if (content) {\r\n                text = content.text;\r\n                caption = content.caption;\r\n            }\r\n        }\r\n\r\n        const element = this.captionRef.current;\r\n        if (!element) return;\r\n\r\n        if (text) {\r\n            this.setFormattedText(text);\r\n        } else if (caption) {\r\n            this.setFormattedText(caption);\r\n        } else if (newItem && newItem.caption) {\r\n            element.innerHTML = newItem.caption;\r\n        } else {\r\n            element.innerText = null;\r\n        }\r\n\r\n        focusInput(element);\r\n    };\r\n\r\n    setFormattedText(formattedText) {\r\n        const { t } = this.props;\r\n        const element = this.captionRef.current;\r\n\r\n        if (!formattedText) {\r\n            element.innerText = null;\r\n            return;\r\n        }\r\n\r\n        const { text, entities } = formattedText;\r\n        try {\r\n            const nodes = getNodes(text, entities, t);\r\n            element.innerHTML = null;\r\n            nodes.forEach(x => {\r\n                element.appendChild(x);\r\n            });\r\n        } catch (e) {\r\n            element.innerText = text;\r\n        }\r\n    }\r\n\r\n    handleDone = () => {\r\n        const { chatId, newItem, onSend, onEdit } = this.props;\r\n        const { editMessage, editFile, editMedia, sendAsPhoto } = this.state;\r\n\r\n        const element = this.captionRef.current;\r\n        if (!element) return;\r\n\r\n        const { innerHTML } = element;\r\n\r\n        element.innerText = null;\r\n\r\n        const { text, entities } = getEntities(innerHTML);\r\n\r\n        const caption = {\r\n            '@type': 'formattedText',\r\n            text,\r\n            entities\r\n        };\r\n\r\n        const isEditing = Boolean(editMessage);\r\n        if (isEditing) {\r\n            if (editMedia) {\r\n                const { photo } = editMedia;\r\n                if (!photo) return;\r\n\r\n                const { sizes } = photo;\r\n                if (!sizes) return;\r\n\r\n                const size = sizes[sizes.length - 1];\r\n\r\n                const { width, height } = size;\r\n\r\n                const content = {\r\n                    '@type': 'inputMessagePhoto',\r\n                    photo: { '@type': 'inputFileBlob', name: editFile.name, data: editFile },\r\n                    width,\r\n                    height,\r\n                    caption\r\n                };\r\n\r\n                onEdit(null, content);\r\n            } else {\r\n                onEdit(caption, null);\r\n            }\r\n\r\n            editMessageAction(chatId, 0);\r\n        } else {\r\n            const { media, file } = newItem;\r\n            const { audio, photo, document } = media;\r\n\r\n            let content = null;\r\n            if (photo) {\r\n                const { sizes } = photo;\r\n                if (!sizes) return;\r\n\r\n                const size = sizes[sizes.length - 1];\r\n\r\n                const { width, height } = size;\r\n\r\n                content = sendAsPhoto\r\n                    ? {\r\n                        '@type': 'inputMessagePhoto',\r\n                        photo: { '@type': 'inputFileBlob', name: file.name, data: file },\r\n                        width,\r\n                        height,\r\n                        caption\r\n                    }\r\n                    : {\r\n                        '@type': 'inputMessageDocument',\r\n                        document: { '@type': 'inputFileBlob', name: file.name, data: file },\r\n                        thumbnail: null,\r\n                        caption\r\n                    };\r\n            } else if (document) {\r\n                content = {\r\n                    '@type': 'inputMessageDocument',\r\n                    document: { '@type': 'inputFileBlob', name: file.name, data: file },\r\n                    thumbnail: null,\r\n                    caption\r\n                };\r\n            } else if (audio) {\r\n                const { duration, title, performer } = audio;\r\n\r\n                content = {\r\n                    '@type': 'inputMessageAudio',\r\n                    audio: { '@type': 'inputFileBlob', name: file.name, data: file },\r\n                    thumbnail: null,\r\n                    duration,\r\n                    title,\r\n                    performer,\r\n                    caption\r\n                };\r\n            }\r\n            if (!content) return;\r\n\r\n            onSend(content, file);\r\n        }\r\n    };\r\n\r\n    handleCancel = () => {\r\n        const { chatId, messageId, onCancel } = this.props;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        const isEditing = Boolean(message);\r\n\r\n        if (isEditing) {\r\n            editMessageAction(chatId, 0);\r\n        }\r\n\r\n        onCancel();\r\n    };\r\n\r\n    handleKeyDown = event => {\r\n        const { altKey, ctrlKey, key, keyCode, code, metaKey, shiftKey, repeat, nativeEvent } = event;\r\n\r\n        // fix CJK input\r\n        const { isComposing } = nativeEvent;\r\n        if (isComposing) {\r\n            event.stopPropagation();\r\n            return;\r\n        }\r\n\r\n        switch (nativeEvent.code) {\r\n            case 'Enter':\r\n            case 'NumpadEnter': {\r\n                // enter+cmd, enter+ctrl, enter+shift\r\n                if (!altKey && (ctrlKey || metaKey || shiftKey) && !repeat) {\r\n                    document.execCommand('insertLineBreak');\r\n\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                }\r\n                // enter\r\n                else if (!altKey && !ctrlKey && !metaKey && !shiftKey && !repeat) {\r\n                    this.handleDone();\r\n\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                }\r\n                break;\r\n            }\r\n            // cmd + b\r\n            case 'KeyB': {\r\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\r\n                    this.handleBold();\r\n\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                }\r\n                break;\r\n            }\r\n            // cmd + i\r\n            case 'KeyI': {\r\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\r\n                    this.handleItalic();\r\n\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                }\r\n                break;\r\n            }\r\n            case 'KeyK': {\r\n                // cmd + k\r\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\r\n                    this.handleUrl();\r\n\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                }\r\n                // alt + cmd + k\r\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\r\n                    this.handleMono();\r\n\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                }\r\n                break;\r\n            }\r\n            // alt + cmd + n\r\n            case 'KeyN': {\r\n                if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\r\n                    this.handleClear();\r\n\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                }\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    handleClear = () => {\r\n        document.execCommand('removeFormat', false, null);\r\n        document.execCommand('unlink', false, null);\r\n    };\r\n\r\n    handleBold = () => {\r\n        document.execCommand('removeFormat', false, null);\r\n        document.execCommand('unlink', false, null);\r\n\r\n        document.execCommand('bold', false, null);\r\n    };\r\n\r\n    handleItalic = () => {\r\n        document.execCommand('removeFormat', false, null);\r\n        document.execCommand('unlink', false, null);\r\n\r\n        document.execCommand('italic', false, null);\r\n    };\r\n\r\n    handleMono = () => {\r\n        document.execCommand('removeFormat', false, null);\r\n        document.execCommand('unlink', false, null);\r\n\r\n        let text = '';\r\n        const { selection } = this;\r\n        if (selection && !selection.isCollapsed) {\r\n            text = selection.toString();\r\n        }\r\n\r\n        if (!text) return;\r\n        text = `<code>${text}</code>`;\r\n        document.execCommand('removeFormat', false, null);\r\n        document.execCommand('insertHTML', false, text);\r\n    };\r\n\r\n    handleUnderline = () => {\r\n        document.execCommand('removeFormat', false, null);\r\n        document.execCommand('unlink', false, null);\r\n\r\n        document.execCommand('underline', false, null);\r\n    };\r\n\r\n    handleStrikeThrough = () => {\r\n        document.execCommand('removeFormat', false, null);\r\n        document.execCommand('unlink', false, null);\r\n\r\n        document.execCommand('strikeThrough', false, null);\r\n    };\r\n\r\n    handleUrl = () => {\r\n        this.openEditUrlDialog();\r\n    };\r\n\r\n    openEditUrlDialog = () => {\r\n        let defaultText = '';\r\n        let defaultUrl = '';\r\n\r\n        const { selection, range } = this;\r\n        if (range) {\r\n            let { startContainer, endContainer } = range;\r\n            if (startContainer === endContainer) {\r\n                const { parentElement } = startContainer;\r\n                if (parentElement && parentElement.nodeName === 'A') {\r\n                    defaultText = parentElement.innerText;\r\n                    defaultUrl = parentElement.href;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!defaultText && selection && !selection.isCollapsed) {\r\n            defaultText = selection.toString();\r\n        }\r\n\r\n        this.setState({\r\n            openEditUrl: true,\r\n            defaultUrl,\r\n            defaultText\r\n        });\r\n    };\r\n\r\n    closeEditUrlDialog = () => {\r\n        this.setState(\r\n            {\r\n                openEditUrl: false\r\n            },\r\n            () => {\r\n                this.restoreSelection();\r\n            }\r\n        );\r\n    };\r\n\r\n    saveSelection() {\r\n        this.selection = document.getSelection();\r\n        if (!this.selection) return;\r\n        if (!this.selection.rangeCount) return;\r\n\r\n        this.range = this.selection.getRangeAt(0);\r\n    }\r\n\r\n    restoreSelection() {\r\n        const { range } = this;\r\n\r\n        if (!range) {\r\n            focusInput();\r\n            return;\r\n        }\r\n\r\n        const selection = document.getSelection();\r\n        selection.removeAllRanges();\r\n        selection.addRange(range);\r\n\r\n        this.captionRef.current.focus();\r\n    }\r\n\r\n    handlePaste = event => {\r\n        const plainText = event.clipboardData.getData('text/plain');\r\n        if (plainText) {\r\n            event.preventDefault();\r\n            document.execCommand('insertText', false, plainText);\r\n        }\r\n    };\r\n\r\n    handleInput = () => {\r\n        this.clearInnerHtml();\r\n    };\r\n\r\n    clearInnerHtml() {\r\n        const element = this.captionRef.current;\r\n        if (!element) return;\r\n\r\n        const { innerHTML } = element;\r\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\r\n            element.innerHTML = null;\r\n        }\r\n    }\r\n\r\n    handleCancelEditUrl = () => {\r\n        this.closeEditUrlDialog();\r\n    };\r\n\r\n    handleDoneEditUrl = (text, url) => {\r\n        this.closeEditUrlDialog();\r\n        setTimeout(() => {\r\n            // edit current link node\r\n            const { range } = this;\r\n            if (range) {\r\n                const { startContainer, endContainer } = range;\r\n                if (startContainer && startContainer === endContainer) {\r\n                    const { parentNode } = startContainer;\r\n                    if (parentNode && parentNode.nodeName === 'A') {\r\n                        parentNode.href = url;\r\n                        parentNode.title = url;\r\n                        parentNode.innerText = text;\r\n\r\n                        // move cursor to end of editing node\r\n                        const { lastChild } = parentNode;\r\n                        if (lastChild) {\r\n                            const range = document.createRange();\r\n                            range.setStart(lastChild, lastChild.textContent.length);\r\n                            range.setEnd(lastChild, lastChild.textContent.length);\r\n\r\n                            const selection = document.getSelection();\r\n                            selection.removeAllRanges();\r\n                            selection.addRange(range);\r\n                        }\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // replace selected text with new link node\r\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\r\n            document.execCommand('removeFormat', false, null);\r\n            document.execCommand('insertHTML', false, link);\r\n        }, 0);\r\n    };\r\n\r\n    handleEditMedia = event => {\r\n        const element = this.editMediaRef.current;\r\n        if (!element) return;\r\n\r\n        element.click();\r\n    };\r\n\r\n    handleEditMediaComplete = async () => {\r\n        const element = this.editMediaRef.current;\r\n        if (!element) return;\r\n\r\n        const { files } = element;\r\n        if (files.length === 0) return;\r\n\r\n        const [file, ...rest] = Array.from(files);\r\n        if (!file) return;\r\n\r\n        const editMedia = await getMediaPhotoFromFile(file);\r\n\r\n        this.setState({\r\n            editFile: file,\r\n            editMedia\r\n        });\r\n\r\n        element.value = '';\r\n    };\r\n\r\n    handleSendAsPhoto = () => {\r\n        const { sendAsPhoto } = this.state;\r\n\r\n        this.setState({\r\n            sendAsPhoto: !sendAsPhoto\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, messageId, newItem, open, t } = this.props;\r\n        const { defaultText, defaultUrl, openEditUrl, editMessage, editMedia, sendAsPhoto } = this.state;\r\n        if (!open) return null;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        const isEditing = Boolean(message);\r\n        let isPhoto = false;\r\n        if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto') {\r\n            isPhoto = true;\r\n        } else if (editMedia && editMedia['@type'] === 'messagePhoto') {\r\n            isPhoto = true;\r\n        } else if (editMessage && editMessage.content['@type'] === 'messagePhoto'){\r\n            isPhoto = true;\r\n        }\r\n\r\n        let media = null;\r\n        if (isEditing) {\r\n            media =\r\n            editMedia\r\n                ? getMedia({ content: editMedia })\r\n                : getMedia(message, null);\r\n        } else if (newItem) {\r\n            media = getMedia({ content: newItem.media });\r\n        }\r\n        const doneLabel = isEditing ? t('Edit') : t('Send');\r\n\r\n        return (\r\n            <Dialog\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                open={true}\r\n                onClose={this.handleCancel}\r\n                aria-labelledby='edit-media-dialog-title'\r\n                onEnter={this.handleEnter}>\r\n                <div className='edit-media-dialog-content'>\r\n                    <div style={{ margin: 24 }}>{media}</div>\r\n                    { isEditing && (\r\n                        <>\r\n                            <IconButton\r\n                                disableRipple={true}\r\n                                aria-label={t('Edit')}\r\n                                className='edit-media-dialog-edit-button'\r\n                                size='small'\r\n                                onClick={this.handleEditMedia}>\r\n                                <EditIcon fontSize='inherit' />\r\n                            </IconButton>\r\n                            <input\r\n                                ref={this.editMediaRef}\r\n                                className='inputbox-attach-button'\r\n                                type='file'\r\n                                accept='image/*'\r\n                                onChange={this.handleEditMediaComplete}\r\n                            />\r\n                        </>\r\n                    )}\r\n                    { !isEditing && isPhoto && (\r\n                        <RadioGroup value={sendAsPhoto} onChange={this.handleSendAsPhoto} style={{ margin: '0 24px 24px' }}>\r\n                            <FormControlLabel value={true} control={<Radio color='primary'/>} label={t('SendAsPhoto')} />\r\n                            <FormControlLabel value={false} control={<Radio color='primary'/>} label={t('SendAsFile')} />\r\n                        </RadioGroup>\r\n                    )}\r\n                </div>\r\n                <div\r\n                    ref={this.captionRef}\r\n                    id='edit-media-dialog-caption'\r\n                    className='scrollbars-hidden'\r\n                    contentEditable\r\n                    suppressContentEditableWarning\r\n                    placeholder={t('Caption')}\r\n                    onKeyDown={this.handleKeyDown}\r\n                    onPaste={this.handlePaste}\r\n                    onInput={this.handleInput}\r\n                />\r\n                <DialogActions>\r\n                    <Button onClick={this.handleCancel} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    <Button onClick={this.handleDone} color='primary'>\r\n                        {doneLabel}\r\n                    </Button>\r\n                </DialogActions>\r\n                <EditUrlDialog\r\n                    open={openEditUrl}\r\n                    defaultText={defaultText}\r\n                    defaultUrl={defaultUrl}\r\n                    onDone={this.handleDoneEditUrl}\r\n                    onCancel={this.handleCancelEditUrl}\r\n                />\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nEditMediaDialog.propTypes = {\r\n    open: PropTypes.bool,\r\n\r\n    chatId: PropTypes.number,\r\n    messageId: PropTypes.number,\r\n    newItem: PropTypes.object,\r\n\r\n    onSend: PropTypes.func,\r\n    onEdit: PropTypes.func,\r\n    onCancel: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(EditMediaDialog);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport { TYPING_OUTPUT_INTERVAL_S } from '../Constants';\r\nimport TdLibController from '../Controllers/TdLibController';\r\n\r\nclass OutputTypingManager {\r\n    constructor(chatId) {\r\n        this.chatId = chatId;\r\n        this.lastAction = null;\r\n    }\r\n\r\n    setTyping(action) {\r\n        if (!this.chatId) return;\r\n\r\n        if (this.lastAction && this.lastAction['@type'] === action['@type']) {\r\n            let now = new Date();\r\n            now.setSeconds(now.getSeconds() - TYPING_OUTPUT_INTERVAL_S);\r\n            if (this.lastTypingDate && this.lastTypingDate > now) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        this.lastAction = action;\r\n        this.lastTypingDate = new Date();\r\n\r\n        TdLibController.send({\r\n            '@type': 'sendChatAction',\r\n            chat_id: this.chatId,\r\n            action: action\r\n        });\r\n    }\r\n}\r\n\r\nexport default OutputTypingManager;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport emojiRegex from 'emoji-regex';\r\nimport MediaRecorder from 'opus-media-recorder';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\r\nimport DoneIcon from '../../Assets/Icons/Done';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InsertEmoticonIcon from '../../Assets/Icons/Smile';\r\nimport SendIcon from '../../Assets/Icons/Send';\r\nimport MicrophoneIcon from '../../Assets/Icons/Microphone';\r\nimport DeleteIcon from '../../Assets/Icons/Delete';\r\nimport AttachButton from './../ColumnMiddle/AttachButton';\r\nimport CreatePollDialog from '../Popup/CreatePollDialog';\r\nimport EditUrlDialog from '../Popup/EditUrlDialog';\r\nimport InputBoxHeader from './InputBoxHeader';\r\nimport PasteFilesDialog from '../Popup/PasteFilesDialog';\r\nimport RecordTimer from './RecordTimer';\r\nimport EditMediaDialog from '../Popup/EditMediaDialog';\r\nimport OutputTypingManager from '../../Utils/OutputTypingManager';\r\nimport { draftEquals, getChatDraft, getChatDraftReplyToMessageId, isMeChat, isPrivateChat } from '../../Utils/Chat';\r\nimport { findLastTextNode, focusInput } from '../../Utils/DOM';\r\nimport { getMediaDocumentFromFile, getMediaPhotoFromFile, isEditedMedia } from '../../Utils/Media';\r\nimport { getEntities, getNodes, isTextMessage } from '../../Utils/Message';\r\nimport { getSize, readImageSize } from '../../Utils/Common';\r\nimport { editMessage, replyMessage } from '../../Actions/Client';\r\nimport { PHOTO_SIZE, VOICENOTE_MIN_RECORD_DURATION } from '../../Constants';\r\nimport AnimationStore from '../../Stores/AnimationStore';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport StickerStore from '../../Stores/StickerStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './InputBox.css';\r\n\r\nconst EmojiPickerButton = React.lazy(() => import('./../ColumnMiddle/EmojiPickerButton'));\r\n\r\nclass InputBox extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.attachDocumentRef = React.createRef();\r\n        this.attachPhotoRef = React.createRef();\r\n        this.newMessageRef = React.createRef();\r\n\r\n        const chatId = AppStore.getChatId();\r\n\r\n        this.state = {\r\n            chatId,\r\n            replyToMessageId: getChatDraftReplyToMessageId(chatId),\r\n            editMessageId: 0,\r\n            recordingReady: true,\r\n            recordingTime: null,\r\n            recordPermissionDenied: false,\r\n            sendFile: null\r\n        };\r\n\r\n        document.execCommand('defaultParagraphSeparator', false, 'br');\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { t } = this.props;\r\n        const {\r\n            chatId,\r\n            newDraft,\r\n            files,\r\n            replyToMessageId,\r\n            editMessageId,\r\n            openEditMedia,\r\n            openEditUrl,\r\n            sendFile,\r\n            recordingReady,\r\n            recordingTime,\r\n            recordPermissionDenied,\r\n            shook\r\n        } = this.state;\r\n\r\n        if (nextProps.t !== t) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.newDraft !== newDraft) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.files !== files) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.replyToMessageId !== replyToMessageId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.editMessageId !== editMessageId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.sendFile !== sendFile) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.openEditUrl !== openEditUrl) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.openEditMedia !== openEditMedia) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.recordingTime !== recordingTime) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.recordingReady !== recordingReady) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.recordPermissionDenied !== recordPermissionDenied) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.shook !== shook) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    loadDraft() {\r\n        this.setDraft();\r\n        this.setInputFocus();\r\n        this.handleInput();\r\n    }\r\n\r\n    saveDraft() {\r\n        const { chatId, editMessageId, replyToMessageId } = this.state;\r\n\r\n        const element = this.newMessageRef.current;\r\n        if (!element) return;\r\n\r\n        let innerHTML = null;\r\n        if (editMessageId) {\r\n            innerHTML = this.beforeEditText ? this.beforeEditText.innerHTML : null;\r\n        } else {\r\n            innerHTML = element.innerHTML;\r\n        }\r\n\r\n        const draftMessage = this.getDraftMessage(chatId, replyToMessageId, innerHTML);\r\n        this.setChatDraftMessage(draftMessage);\r\n    }\r\n\r\n    selectionChangeListener = () => {\r\n        // console.log('[ed] selectionchange', document.activeElement);\r\n        if (document.activeElement === this.newMessageRef.current) {\r\n            this.saveSelection();\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        document.addEventListener('selectionchange', this.selectionChangeListener, true);\r\n\r\n        AnimationStore.on('clientUpdateAnimationSend', this.onClientUpdateAnimationSend);\r\n        AppStore.on('clientUpdateInputShake', this.onClientUpdateInputShake);\r\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\r\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\r\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatDraftMessage);\r\n        FileStore.on('clientUpdateSendFiles', this.onClientUpdateSendFiles);\r\n        MessageStore.on('clientUpdateEditMessage', this.onClientUpdateEditMessage);\r\n        MessageStore.on('clientUpdateReply', this.onClientUpdateReply);\r\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n        StickerStore.on('clientUpdateStickerSend', this.onClientUpdateStickerSend);\r\n\r\n        this.loadDraft();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.saveDraft();\r\n\r\n        AnimationStore.off('clientUpdateAnimationSend', this.onClientUpdateAnimationSend);\r\n        AppStore.off('clientUpdateInputShake', this.onClientUpdateInputShake);\r\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\r\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\r\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatDraftMessage);\r\n        FileStore.off('clientUpdateSendFiles', this.onClientUpdateSendFiles);\r\n        MessageStore.off('clientUpdateEditMessage', this.onClientUpdateEditMessage);\r\n        MessageStore.off('clientUpdateReply', this.onClientUpdateReply);\r\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n        StickerStore.off('clientUpdateStickerSend', this.onClientUpdateStickerSend);\r\n\r\n        document.removeEventListener('selectionchange', this.selectionChangeListener, true);\r\n\r\n        this.handleCancelRecord();\r\n    }\r\n\r\n    onClientUpdateInputShake = update => {\r\n        const { chatId, messageId } = this.props;\r\n        const { shook } = this.state;\r\n\r\n        if (shook) {\r\n            this.setState({ shook: false }, () => {\r\n                setTimeout(() => {\r\n                    this.setState({ shook: true });\r\n                }, 0);\r\n            });\r\n        } else {\r\n            this.setState({ shook: true });\r\n        }\r\n    };\r\n\r\n    onClientUpdateSendFiles = update => {\r\n        const { files } = update;\r\n        if (!files) return;\r\n\r\n        this.handleSendFiles(Array.from(files));\r\n    };\r\n\r\n    onUpdateDeleteMessages = update => {\r\n        const { chatId, editMessageId } = this.state;\r\n        const { chat_id, message_ids, is_permanent } = update;\r\n\r\n        if (!editMessageId) return;\r\n        if (!is_permanent) return;\r\n        if (chatId !== chat_id) return;\r\n        if (message_ids.indexOf(editMessageId) === -1) return;\r\n\r\n        this.handleCancel();\r\n    };\r\n\r\n    onClientUpdateEditMessage = update => {\r\n        const { chatId, messageId } = update;\r\n        const { recordingTime } = this.state;\r\n        if (recordingTime) return;\r\n        if (this.state.chatId !== chatId) return;\r\n\r\n        if (!messageId) {\r\n            this.restoreDraftAndSelection();\r\n        } else {\r\n            this.saveDraftAndSelection();\r\n        }\r\n\r\n        const openEditMedia = messageId !== 0 && isEditedMedia(chatId, messageId);\r\n        this.setState(\r\n            {\r\n                editMessageId: messageId,\r\n                openEditMedia\r\n            },\r\n            () => {\r\n                if (!this.state.openEditMedia) {\r\n                    this.setEditMessage();\r\n                    this.handleInput();\r\n                    setTimeout(() => {\r\n                        this.focusInput();\r\n                    }, 0);\r\n                }\r\n            }\r\n        );\r\n    };\r\n\r\n    restoreDraftAndSelection() {\r\n        const element = this.newMessageRef.current;\r\n        if (!element) return;\r\n\r\n        const { beforeEditText } = this;\r\n\r\n        if (beforeEditText) {\r\n            element.innerHTML = beforeEditText.innerHTML;\r\n\r\n            if (!beforeEditText.range) {\r\n                this.focusInput();\r\n                return;\r\n            }\r\n\r\n            const selection = document.getSelection();\r\n            selection.removeAllRanges();\r\n            selection.addRange(beforeEditText.range);\r\n\r\n            element.focus();\r\n        } else {\r\n            element.innerHTML = null;\r\n            this.focusInput();\r\n        }\r\n\r\n        this.handleInput();\r\n    }\r\n\r\n    saveDraftAndSelection() {\r\n        const element = this.newMessageRef.current;\r\n        if (!element) return;\r\n\r\n        this.beforeEditText = {\r\n            innerHTML: element.innerHTML,\r\n            range: this.range\r\n        };\r\n    }\r\n\r\n    onClientUpdateFocusWindow = update => {\r\n        const { focused } = update;\r\n        if (focused) return;\r\n\r\n        this.saveDraft();\r\n    };\r\n\r\n    onUpdateChatDraftMessage = update => {\r\n        const { chat_id } = update;\r\n        const { chatId, recordingTime } = this.state;\r\n\r\n        if (recordingTime) return;\r\n        if (chatId !== chat_id) return;\r\n\r\n        this.loadDraft();\r\n    };\r\n\r\n    onClientUpdateAnimationSend = update => {\r\n        const { animation: item } = update;\r\n        if (!item) return;\r\n\r\n        const { animation, thumbnail, width, height, duration } = item;\r\n        if (!animation) return;\r\n\r\n        const element = this.newMessageRef.current;\r\n        if (!element) return;\r\n\r\n        element.innerText = null;\r\n\r\n        this.restoreSelection();\r\n\r\n        const content = {\r\n            '@type': 'inputMessageAnimation',\r\n            animation: {\r\n                '@type': 'inputFileId',\r\n                id: animation.id\r\n            },\r\n            width,\r\n            height,\r\n            duration\r\n        };\r\n\r\n        if (thumbnail) {\r\n            const { width: thumbnailWidth, height: thumbnailHeight, file } = thumbnail;\r\n\r\n            content.thumbnail = {\r\n                '@type': 'inputThumbnail',\r\n                thumbnail: {\r\n                    '@type': 'inputFileId',\r\n                    id: file.id\r\n                },\r\n                width: thumbnailWidth,\r\n                height: thumbnailHeight\r\n            };\r\n        }\r\n\r\n        this.sendMessage(content, false, result => {});\r\n    };\r\n\r\n    onClientUpdateStickerSend = update => {\r\n        const { sticker: item } = update;\r\n        if (!item) return;\r\n\r\n        const { sticker, thumbnail, width, height } = item;\r\n        if (!sticker) return;\r\n\r\n        const element = this.newMessageRef.current;\r\n        if (!element) return;\r\n\r\n        element.innerText = null;\r\n\r\n        this.restoreSelection();\r\n\r\n        const content = {\r\n            '@type': 'inputMessageSticker',\r\n            sticker: {\r\n                '@type': 'inputFileId',\r\n                id: sticker.id\r\n            },\r\n            width,\r\n            height\r\n        };\r\n\r\n        if (thumbnail) {\r\n            const { width: thumbnailWidth, height: thumbnailHeight, file } = thumbnail;\r\n\r\n            content.thumbnail = {\r\n                '@type': 'inputThumbnail',\r\n                thumbnail: {\r\n                    '@type': 'inputFileId',\r\n                    id: file.id\r\n                },\r\n                width: thumbnailWidth,\r\n                height: thumbnailHeight\r\n            };\r\n        }\r\n\r\n        this.sendMessage(content, false, result => {});\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateLocalStickersHint',\r\n            hint: null\r\n        });\r\n    };\r\n\r\n    onClientUpdateReply = update => {\r\n        const { chatId: currentChatId, recordingTime } = this.state;\r\n        const { chatId, messageId } = update;\r\n\r\n        if (currentChatId !== chatId) {\r\n            return;\r\n        }\r\n\r\n        this.setState({ replyToMessageId: messageId });\r\n\r\n        if (messageId && !recordingTime) {\r\n            this.setInputFocus();\r\n        }\r\n    };\r\n\r\n    onClientUpdateChatId = update => {\r\n        const { chatId } = this.state;\r\n        if (chatId === update.nextChatId) return;\r\n\r\n        this.saveDraft();\r\n        this.beforeEditText = null;\r\n        this.setState(\r\n            {\r\n                chatId: update.nextChatId,\r\n                replyToMessageId: getChatDraftReplyToMessageId(update.nextChatId),\r\n                editMessageId: 0,\r\n                openEditUrl: false\r\n            },\r\n            () => {\r\n                this.loadDraft();\r\n            }\r\n        );\r\n\r\n        this.handleCancelRecord();\r\n    };\r\n\r\n    setDraft = () => {\r\n        const { chatId } = this.state;\r\n\r\n        const element = this.newMessageRef.current;\r\n\r\n        const formattedText = getChatDraft(chatId);\r\n        if (formattedText) {\r\n            this.setFormattedText(formattedText);\r\n            this.setState({\r\n                replyToMessageId: getChatDraftReplyToMessageId(chatId)\r\n            });\r\n        } else {\r\n            element.innerText = null;\r\n        }\r\n    };\r\n\r\n    setEditMessage() {\r\n        const { chatId, editMessageId } = this.state;\r\n\r\n        const message = MessageStore.get(chatId, editMessageId);\r\n        if (!message) return;\r\n\r\n        const { content } = message;\r\n        if (!content) return;\r\n\r\n        const { text, caption } = content;\r\n        if (!text && !caption) return;\r\n\r\n        const element = this.newMessageRef.current;\r\n\r\n        if (text) {\r\n            this.setFormattedText(text);\r\n        } else if (caption) {\r\n            this.setFormattedText(caption);\r\n        } else {\r\n            element.innerText = null;\r\n        }\r\n    }\r\n\r\n    setFormattedText(formattedText) {\r\n        const { t } = this.props;\r\n        const element = this.newMessageRef.current;\r\n\r\n        if (!formattedText) {\r\n            element.innerText = null;\r\n            return;\r\n        }\r\n\r\n        const { text, entities } = formattedText;\r\n        try {\r\n            const nodes = getNodes(text, entities, t);\r\n            element.innerHTML = null;\r\n            nodes.forEach(x => {\r\n                element.appendChild(x);\r\n            });\r\n        } catch (e) {\r\n            element.innerText = text;\r\n        }\r\n    }\r\n\r\n    setInputFocus = () => {\r\n        const { recordingTime } = this.state;\r\n        if (recordingTime) return;\r\n\r\n        setTimeout(() => {\r\n            const element = this.newMessageRef.current;\r\n\r\n            focusInput(element);\r\n        }, 100);\r\n    };\r\n\r\n    setChatDraftMessage = chatDraftMessage => {\r\n        if (!chatDraftMessage) return;\r\n\r\n        const { chatId, draftMessage } = chatDraftMessage;\r\n        if (!chatId) return;\r\n\r\n        TdLibController.send({\r\n            '@type': 'setChatDraftMessage',\r\n            chat_id: chatId,\r\n            draft_message: draftMessage\r\n        });\r\n    };\r\n\r\n    getDraftMessage = (chatId, replyToMessageId, innerHTML) => {\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        const { draft_message } = chat;\r\n        const { text, entities } = getEntities(innerHTML);\r\n        const draftMessage =\r\n            (text && text.length > 0) || entities.length > 0\r\n                ? {\r\n                      '@type': 'draftMessage',\r\n                      reply_to_message_id: replyToMessageId,\r\n                      input_message_text: {\r\n                          '@type': 'inputMessageText',\r\n                          text: {\r\n                              '@type': 'formattedText',\r\n                              text,\r\n                              entities\r\n                          },\r\n                          disable_web_page_preview: false,\r\n                          clear_draft: false\r\n                      }\r\n                  }\r\n                : null;\r\n\r\n        if (draftEquals(draft_message, draftMessage)) {\r\n            return null;\r\n        }\r\n\r\n        return { chatId, draftMessage };\r\n    };\r\n\r\n    handleSubmit = (startRecord = true) => {\r\n        const { chatId, editMessageId, replyToMessageId, recordingReady, recordingTime } = this.state;\r\n\r\n        if (recordingTime) {\r\n            if ((new Date() - recordingTime) < VOICENOTE_MIN_RECORD_DURATION) {\r\n                return;\r\n            }\r\n\r\n            this.handleStopRecord();\r\n            return;\r\n        } else if (recordingReady) {\r\n            if (startRecord) this.handleRecord();\r\n            return;\r\n        }\r\n\r\n        const element = this.newMessageRef.current;\r\n        if (!element) return;\r\n\r\n        let { innerHTML } = element;\r\n\r\n        element.innerText = null;\r\n        this.handleInput();\r\n\r\n        if (!innerHTML) return;\r\n        if (!innerHTML.trim()) return;\r\n\r\n        const { text, entities } = getEntities(innerHTML);\r\n\r\n        const formattedText = {\r\n            '@type': 'formattedText',\r\n            text,\r\n            entities\r\n        };\r\n        const inputContent = {\r\n            '@type': 'inputMessageText',\r\n            text: formattedText,\r\n            disable_web_page_preview: false,\r\n            clear_draft: true\r\n        };\r\n\r\n        if (editMessageId) {\r\n            const editedMessage = MessageStore.get(chatId, editMessageId);\r\n            if (!editedMessage) return;\r\n\r\n            const { content } = editedMessage;\r\n            if (!content) return;\r\n\r\n            const { text, caption } = content;\r\n            if (text) {\r\n                this.editMessageText(inputContent, result => {});\r\n            } else if (caption) {\r\n                this.editMessageCaption(formattedText);\r\n            }\r\n            editMessage(chatId, 0);\r\n        } else {\r\n            this.sendMessage(inputContent, false, result => {});\r\n        }\r\n    };\r\n\r\n    handleAttachPoll = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateNewPoll'\r\n        });\r\n    };\r\n\r\n    handleAttachPhoto = () => {\r\n        if (!this.attachPhotoRef) return;\r\n\r\n        this.attachPhotoRef.current.click();\r\n    };\r\n\r\n    async getNewItem(file, sendAsFile) {\r\n        if (!file) return null;\r\n\r\n        const caption = this.newMessageRef.current.innerHTML;\r\n        if (caption) {\r\n            this.newMessageRef.current.innerHTML = null;\r\n            this.handleInput();\r\n        }\r\n\r\n        const media = sendAsFile\r\n            ? await getMediaPhotoFromFile(file)\r\n            : await getMediaDocumentFromFile(file);\r\n\r\n        return {\r\n            file,\r\n            media,\r\n            caption\r\n        }\r\n    };\r\n\r\n    handleAttachPhotoComplete = async () => {\r\n        const { files } = this.attachPhotoRef.current;\r\n        if (files.length === 0) return;\r\n\r\n        if (files.length === 1) {\r\n            const [ newFile, ...rest ] = Array.from(files);\r\n            if (!newFile) return;\r\n\r\n            const newItem = await this.getNewItem(newFile, true);\r\n\r\n            this.setState({\r\n                openEditMedia: true,\r\n                newItem\r\n            });\r\n        } else {\r\n            Array.from(files).forEach(async file => {\r\n                const [width, height] = await readImageSize(file);\r\n\r\n                const content = {\r\n                    '@type': 'inputMessagePhoto',\r\n                    photo: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file },\r\n                    width,\r\n                    height\r\n                };\r\n\r\n                this.handleSendPhoto(content, file);\r\n            });\r\n        }\r\n\r\n        this.attachPhotoRef.current.value = '';\r\n    };\r\n\r\n    handleAttachDocument = () => {\r\n        if (!this.attachDocumentRef) return;\r\n\r\n        this.attachDocumentRef.current.click();\r\n    };\r\n\r\n    handleAttachDocumentComplete = async () => {\r\n        const { files } = this.attachDocumentRef.current;\r\n        if (files.length === 0) return;\r\n\r\n        if (files.length === 1) {\r\n            const [ newFile, ...rest ] = Array.from(files);\r\n            if (!newFile) return;\r\n\r\n            const newItem = await this.getNewItem(newFile, false);\r\n\r\n            this.setState({\r\n                openEditMedia: true,\r\n                newItem\r\n            });\r\n        } else {\r\n            Array.from(files).forEach(file => {\r\n                const content = {\r\n                    '@type': 'inputMessageDocument',\r\n                    document: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file }\r\n                };\r\n\r\n                this.handleSendDocument(content, file);\r\n            });\r\n        }\r\n\r\n        this.attachDocumentRef.current.value = '';\r\n    };\r\n\r\n    setTyping() {\r\n        const { chatId, editMessageId } = this.state;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        const element = this.newMessageRef.current;\r\n        if (!element) return;\r\n\r\n        const { innerHTML } = element;\r\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\r\n            element.innerHTML = null;\r\n        }\r\n        const { innerText } = element;\r\n\r\n        if (!innerText) return;\r\n        if (isMeChat(chatId)) return;\r\n        if (editMessageId) return;\r\n\r\n        const typingManager = chat.OutputTypingManager || (chat.OutputTypingManager = new OutputTypingManager(chat.id));\r\n        typingManager.setTyping({ '@type': 'chatActionTyping' });\r\n    }\r\n\r\n    setHints() {\r\n        const { editMessageId } = this.state;\r\n        const innerText = this.newMessageRef.current.innerText;\r\n        if (!innerText || innerText.length > 11 || editMessageId) {\r\n            const { hint } = StickerStore;\r\n            if (hint) {\r\n                TdLibController.clientUpdate({\r\n                    '@type': 'clientUpdateLocalStickersHint',\r\n                    hint: null\r\n                });\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        const t0 = performance.now();\r\n        const regex = emojiRegex();\r\n        let match = regex.exec(innerText);\r\n        const t1 = performance.now();\r\n        // console.log('Matched ' + (t1 - t0) + 'ms', match);\r\n        if (!match || innerText !== match[0]) {\r\n            const { hint } = StickerStore;\r\n            if (hint) {\r\n                TdLibController.clientUpdate({\r\n                    '@type': 'clientUpdateLocalStickersHint',\r\n                    hint: null\r\n                });\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        const timestamp = Date.now();\r\n        TdLibController.send({\r\n            '@type': 'getStickers',\r\n            emoji: match[0],\r\n            limit: 100\r\n        }).then(stickers => {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateLocalStickersHint',\r\n                hint: {\r\n                    timestamp,\r\n                    emoji: match[0],\r\n                    stickers\r\n                }\r\n            });\r\n        });\r\n\r\n        TdLibController.send({\r\n            '@type': 'searchStickers',\r\n            emoji: match[0],\r\n            limit: 100\r\n        }).then(stickers => {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateRemoteStickersHint',\r\n                hint: {\r\n                    timestamp,\r\n                    emoji: match[0],\r\n                    stickers\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    handleClear = () => {\r\n        document.execCommand('removeFormat', false, null);\r\n        document.execCommand('unlink', false, null);\r\n    };\r\n\r\n    handleBold = () => {\r\n        document.execCommand('removeFormat', false, null);\r\n        document.execCommand('unlink', false, null);\r\n\r\n        document.execCommand('bold', false, null);\r\n    };\r\n\r\n    handleItalic = () => {\r\n        document.execCommand('removeFormat', false, null);\r\n        document.execCommand('unlink', false, null);\r\n\r\n        document.execCommand('italic', false, null);\r\n    };\r\n\r\n    handleMono = () => {\r\n        document.execCommand('removeFormat', false, null);\r\n        document.execCommand('unlink', false, null);\r\n\r\n        let text = '';\r\n        const { selection } = this;\r\n        if (selection && !selection.isCollapsed) {\r\n            text = selection.toString();\r\n        }\r\n\r\n        if (!text) return;\r\n        text = `<code>${text}</code>`;\r\n        document.execCommand('removeFormat', false, null);\r\n        document.execCommand('insertHTML', false, text);\r\n    };\r\n\r\n    handleUnderline = () => {\r\n        document.execCommand('removeFormat', false, null);\r\n        document.execCommand('unlink', false, null);\r\n\r\n        document.execCommand('underline', false, null);\r\n    };\r\n\r\n    handleStrikeThrough = () => {\r\n        document.execCommand('removeFormat', false, null);\r\n        document.execCommand('unlink', false, null);\r\n\r\n        document.execCommand('strikeThrough', false, null);\r\n    };\r\n\r\n    handleUrl = () => {\r\n        this.openEditUrlDialog();\r\n    };\r\n\r\n    handleCancel = () => {\r\n        const { chatId, editMessageId, replyToMessageId } = this.state;\r\n        if (editMessageId) {\r\n            editMessage(chatId, 0);\r\n            return true;\r\n        } else if (replyToMessageId) {\r\n            replyMessage(chatId, 0);\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    handleKeyDown = event => {\r\n        const { altKey, ctrlKey, key, keyCode, charCode, metaKey, shiftKey, repeat, nativeEvent } = event;\r\n        const { editMessageId, replyToMessageId } = this.state;\r\n\r\n        // console.log('[input] handleKeyDown', key, keyCode, charCode, altKey, ctrlKey, metaKey, shiftKey, repeat, event, nativeEvent, nativeEvent.isComposing);\r\n        //\r\n        // setTimeout(() => {\r\n        //     const { innerText } = this.newMessageRef.current;\r\n        //     console.log('[input] text', innerText.length, [...innerText].map(x => ({ alpha: x, code: x.charCodeAt(0) })));\r\n        // }, 1000);\r\n\r\n        // fix CJK input\r\n        const { isComposing } = nativeEvent;\r\n        if (isComposing) {\r\n            return;\r\n        }\r\n\r\n        switch (nativeEvent.code) {\r\n            // ctrl+alt+0 fix\r\n            case 'Digit0': {\r\n                if (altKey && ctrlKey && !metaKey && !shiftKey) {\r\n                    if (editMessageId) return;\r\n                    if (replyToMessageId) return;\r\n\r\n                    event.preventDefault();\r\n                }\r\n                break;\r\n            }\r\n            case 'Enter':\r\n            case 'NumpadEnter': {\r\n                // enter+cmd, enter+ctrl, enter+shift\r\n                if (!altKey && (ctrlKey || metaKey || shiftKey) && !repeat) {\r\n                    document.execCommand('insertLineBreak');\r\n\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                }\r\n                // enter\r\n                else if (!altKey && !ctrlKey && !metaKey && !shiftKey && !repeat) {\r\n                    this.handleSubmit(false);\r\n\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                }\r\n                break;\r\n            }\r\n            // esc\r\n            case 'Escape': {\r\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    if (!repeat && this.handleCancel()) {\r\n                        event.preventDefault();\r\n                        event.stopPropagation();\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n            // arrow up\r\n            case 'ArrowUp': {\r\n                if (!repeat && !altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    const element = this.newMessageRef.current;\r\n                    if (element && !element.innerText) {\r\n                        const { editMessageId } = this.state;\r\n                        if (editMessageId) return;\r\n\r\n                        TdLibController.clientUpdate({\r\n                            '@type': 'clientUpdateTryEditMessage'\r\n                        });\r\n\r\n                        event.preventDefault();\r\n                        event.stopPropagation();\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n            // cmd + b\r\n            case 'KeyB': {\r\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\r\n                    this.handleBold();\r\n\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                }\r\n                break;\r\n            }\r\n            // cmd + i\r\n            case 'KeyI': {\r\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\r\n                    this.handleItalic();\r\n\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                }\r\n                break;\r\n            }\r\n            case 'KeyK': {\r\n                // cmd + k\r\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\r\n                    this.handleUrl();\r\n\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                }\r\n                // alt + cmd + k\r\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\r\n                    this.handleMono();\r\n\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                }\r\n                break;\r\n            }\r\n            // alt + cmd + n\r\n            case 'KeyN': {\r\n                if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\r\n                    this.handleClear();\r\n\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                }\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    handleSendPhoto = (content, file) => {\r\n        if (!content) return;\r\n\r\n        this.sendMessage(content, true, result => {\r\n            const cachedMessage = MessageStore.get(result.chat_id, result.id);\r\n            if (cachedMessage != null) {\r\n                this.handleSendingMessage(cachedMessage, file);\r\n            }\r\n\r\n            FileStore.uploadFile(result.content.photo.sizes[0].photo.id, result);\r\n        });\r\n    };\r\n\r\n    handleSendPoll = poll => {\r\n        this.sendMessage(poll, true, () => {});\r\n    };\r\n\r\n    handleSendDocument = (content, file) => {\r\n        if (!content) return;\r\n\r\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.document.document.id, result));\r\n    };\r\n\r\n    handleSendAudio = (content, file) => {\r\n        if (!content) return;\r\n\r\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.audio.audio.id, result));\r\n    };\r\n\r\n    handleSendVoiceNote = (content, file) => {\r\n        if (!content) return;\r\n\r\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.voice_note.voice.id, result));\r\n    };\r\n\r\n    async handleSendFiles(files) {\r\n        if (!files) return;\r\n        if (!files.length) return;\r\n\r\n        if (files.length === 1) {\r\n            const newItem = await this.getNewItem(files[0], files[0].type.startsWith('image'));\r\n            if (!newItem) return;\r\n\r\n            this.setState({\r\n                openEditMedia: true,\r\n                newItem\r\n            });\r\n        } else {\r\n            this.setState({ files });\r\n        }\r\n    }\r\n\r\n    handlePaste = async event => {\r\n        const { items } = event.clipboardData || event.originalEvent.clipboardData;\r\n        if (!items) return;\r\n\r\n        const files = [];\r\n        Array.from(items).forEach(item => {\r\n            if (item.kind.indexOf('file') === 0) {\r\n                const file = item.getAsFile();\r\n                if (file) {\r\n                    files.push(file);\r\n                }\r\n            }\r\n        });\r\n\r\n        if (files.length > 0) {\r\n            event.preventDefault();\r\n\r\n            this.handleSendFiles(files);\r\n            return;\r\n        }\r\n\r\n        const plainText = event.clipboardData.getData('text/plain');\r\n        if (plainText) {\r\n            event.preventDefault();\r\n            document.execCommand('insertText', false, plainText);\r\n            return;\r\n        }\r\n    };\r\n\r\n    handlePasteConfirm = () => {\r\n        const { files } = this.state;\r\n        if (!files) return;\r\n        if (!files.length) return;\r\n\r\n        files.forEach(file => {\r\n            const content = {\r\n                '@type': 'inputMessageDocument',\r\n                document: { '@type': 'inputFileBlob', name: file.name, data: file }\r\n            };\r\n\r\n            this.handleSendDocument(content, file);\r\n        });\r\n\r\n        this.handlePasteCancel();\r\n    };\r\n\r\n    handlePasteCancel = () => {\r\n        this.setState({ files: null });\r\n    };\r\n\r\n    handleUpdateDraftConfirm = () => {\r\n        const { newDraft } = this.state;\r\n        if (!newDraft) return;\r\n\r\n        this.loadDraft();\r\n        this.handleUpdateDraftCancel();\r\n    };\r\n\r\n    handleUpdateDraftCancel = () => {\r\n        this.setState({ newDraft: null });\r\n    };\r\n\r\n    handleSendingMessage = (message, blob) => {\r\n        if (!message) return;\r\n\r\n        const { sending_state, content, chat_id, id } = message;\r\n        if (!sending_state) return;\r\n        if (sending_state['@type'] !== 'messageSendingStatePending') return;\r\n        if (content['@type'] !== 'messagePhoto') return;\r\n\r\n        const { photo } = content;\r\n        if (!photo) return;\r\n\r\n        const size = getSize(photo.sizes, PHOTO_SIZE);\r\n        if (!size) return;\r\n\r\n        const { photo: file } = size;\r\n        if (!file) return;\r\n        if (file.blob) return;\r\n\r\n        file.blob = blob;\r\n        FileStore.updatePhotoBlob(chat_id, id, file.id);\r\n    };\r\n\r\n    editMessageMedia(content) {\r\n        const { chatId, editMessageId } = this.state;\r\n        // console.log('[em] editMessageMedia start', chatId, editMessageId, content);\r\n\r\n        if (!chatId) return;\r\n        if (!editMessageId) return;\r\n        if (!content) return;\r\n\r\n        TdLibController.send({\r\n            '@type': 'editMessageMedia',\r\n            chat_id: chatId,\r\n            message_id: editMessageId,\r\n            input_message_content: content\r\n        });\r\n    }\r\n\r\n    editMessageCaption(caption) {\r\n        const { chatId, editMessageId } = this.state;\r\n\r\n        if (!chatId) return;\r\n        if (!editMessageId) return;\r\n        if (!caption) return;\r\n\r\n        TdLibController.send({\r\n            '@type': 'editMessageCaption',\r\n            chat_id: chatId,\r\n            message_id: editMessageId,\r\n            caption\r\n        });\r\n    }\r\n\r\n    async editMessageText(content, callback) {\r\n        const { chatId, editMessageId } = this.state;\r\n\r\n        if (!chatId) return;\r\n        if (!editMessageId) return;\r\n        if (!content) return;\r\n\r\n        try {\r\n            const result = await TdLibController.send({\r\n                '@type': 'editMessageText',\r\n                chat_id: chatId,\r\n                message_id: editMessageId,\r\n                input_message_content: content\r\n            });\r\n\r\n            callback(result);\r\n        } finally {\r\n        }\r\n    }\r\n\r\n    sendMessage = async (content, clearDraft, callback) => {\r\n        const { chatId, replyToMessageId } = this.state;\r\n\r\n        if (!chatId) return;\r\n        if (!content) return;\r\n\r\n        try {\r\n            await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\r\n\r\n            const result = await TdLibController.send({\r\n                '@type': 'sendMessage',\r\n                chat_id: chatId,\r\n                reply_to_message_id: replyToMessageId,\r\n                input_message_content: content\r\n            });\r\n\r\n            this.setState({ replyToMessageId: 0 }, () => {\r\n                if (clearDraft) {\r\n                    this.saveDraft();\r\n                }\r\n            });\r\n            //MessageStore.set(result);\r\n\r\n            TdLibController.send({\r\n                '@type': 'viewMessages',\r\n                chat_id: chatId,\r\n                message_ids: [result.id]\r\n            });\r\n\r\n            if (replyToMessageId) {\r\n                replyMessage(chatId, 0);\r\n            }\r\n\r\n            callback(result);\r\n        } catch (error) {\r\n            alert('sendMessage error ' + JSON.stringify(error));\r\n        }\r\n    };\r\n\r\n    handleEmojiSelect = emoji => {\r\n        if (!emoji) return;\r\n\r\n        this.restoreSelection();\r\n        document.execCommand('insertText', false, emoji.native);\r\n        this.handleInput();\r\n    };\r\n\r\n    handleInput = async event => {\r\n        this.setTyping();\r\n        this.setHints();\r\n        this.setRecordingReadyState();\r\n    };\r\n\r\n    setRecordingReadyState() {\r\n        const { editMessageId } = this.state;\r\n        const innerText = this.newMessageRef.current.innerText;\r\n        if (!innerText && !editMessageId) {\r\n            this.setState({\r\n                recordingReady: true\r\n            });\r\n        } else {\r\n            this.setState({\r\n                recordingReady: false\r\n            });\r\n        }\r\n    }\r\n\r\n    openEditUrlDialog = () => {\r\n        let defaultText = '';\r\n        let defaultUrl = '';\r\n\r\n        const { selection, range } = this;\r\n        if (range) {\r\n            let { startContainer, endContainer } = range;\r\n            if (startContainer === endContainer) {\r\n                const { parentElement } = startContainer;\r\n                if (parentElement && parentElement.nodeName === 'A') {\r\n                    defaultText = parentElement.innerText;\r\n                    defaultUrl = parentElement.href;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!defaultText && selection && !selection.isCollapsed) {\r\n            defaultText = selection.toString();\r\n        }\r\n\r\n        this.setState({\r\n            openEditUrl: true,\r\n            defaultUrl,\r\n            defaultText\r\n        });\r\n    };\r\n\r\n    closeEditUrlDialog = () => {\r\n        this.setState(\r\n            {\r\n                openEditUrl: false\r\n            },\r\n            () => {\r\n                this.restoreSelection();\r\n            }\r\n        );\r\n    };\r\n\r\n    saveSelection() {\r\n        this.selection = document.getSelection();\r\n        if (!this.selection) return;\r\n        if (!this.selection.rangeCount) return;\r\n\r\n        this.range = this.selection.getRangeAt(0);\r\n    }\r\n\r\n    restoreSelection() {\r\n        const { range } = this;\r\n\r\n        if (!range) {\r\n            this.focusInput();\r\n            return;\r\n        }\r\n\r\n        const selection = document.getSelection();\r\n        selection.removeAllRanges();\r\n        selection.addRange(range);\r\n\r\n        this.newMessageRef.current.focus();\r\n    }\r\n\r\n    focusInput = () => {\r\n        const element = this.newMessageRef.current;\r\n        if (!element) return;\r\n        if (!element.childNodes.length) {\r\n            element.focus();\r\n            return;\r\n        }\r\n\r\n        const lastTextNode = findLastTextNode(element);\r\n        if (!lastTextNode) {\r\n            return;\r\n        }\r\n\r\n        const range = document.createRange();\r\n        range.setStart(lastTextNode, lastTextNode.length);\r\n        range.collapse(true);\r\n\r\n        const selection = window.getSelection();\r\n        selection.removeAllRanges();\r\n        selection.addRange(range);\r\n\r\n        element.focus();\r\n    };\r\n\r\n    handleCancelEditUrl = () => {\r\n        this.closeEditUrlDialog();\r\n    };\r\n\r\n    handleDoneEditUrl = (text, url) => {\r\n        this.closeEditUrlDialog();\r\n        setTimeout(() => {\r\n            // edit current link node\r\n            const { range } = this;\r\n            if (range) {\r\n                const { startContainer, endContainer } = range;\r\n                if (startContainer && startContainer === endContainer) {\r\n                    const { parentNode } = startContainer;\r\n                    if (parentNode && parentNode.nodeName === 'A') {\r\n                        parentNode.href = url;\r\n                        parentNode.title = url;\r\n                        parentNode.innerText = text;\r\n\r\n                        // move cursor to end of editing node\r\n                        const { lastChild } = parentNode;\r\n                        if (lastChild) {\r\n                            const range = document.createRange();\r\n                            range.setStart(lastChild, lastChild.textContent.length);\r\n                            range.setEnd(lastChild, lastChild.textContent.length);\r\n\r\n                            const selection = document.getSelection();\r\n                            selection.removeAllRanges();\r\n                            selection.addRange(range);\r\n                        }\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // replace selected text with new link node\r\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\r\n            document.execCommand('removeFormat', false, null);\r\n            document.execCommand('insertHTML', false, link);\r\n        }, 0);\r\n    };\r\n\r\n    handleCancelEditMedia = () => {\r\n        this.closeEditMediaDialog();\r\n    };\r\n\r\n    handleEditMedia = (caption, content) => {\r\n        if (content) {\r\n            this.editMessageMedia(content);\r\n            return;\r\n        }\r\n\r\n        this.editMessageCaption(caption);\r\n    };\r\n\r\n    handleSendMedia = (content, file) => {\r\n        this.closeEditMediaDialog(false);\r\n\r\n        switch (content['@type']) {\r\n            case 'inputMessageAudio': {\r\n                this.handleSendAudio(content, file);\r\n                break;\r\n            }\r\n            case 'inputMessagePhoto': {\r\n                this.handleSendPhoto(content, file);\r\n                break;\r\n            }\r\n            case 'inputMessageDocument': {\r\n                this.handleSendDocument(content, file);\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    closeEditMediaDialog(cancel = true) {\r\n        const { newItem } = this.state;\r\n\r\n        this.setState(\r\n            {\r\n                openEditMedia: false,\r\n                newItem: null\r\n            },\r\n            () => {\r\n                if (cancel && newItem && newItem.caption) {\r\n                    this.newMessageRef.current.innerHTML = newItem.caption;\r\n                    this.focusInput();\r\n                    this.handleInput();\r\n                } else {\r\n                    this.restoreSelection();\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    handleHeaderClick = () => {\r\n        setTimeout(() => this.restoreSelection(), 0);\r\n    };\r\n\r\n    handleStopRecord = (cancelled = false) => {\r\n        if (!this.recorder) return;\r\n\r\n        this.recorder.cancelled = cancelled;\r\n        this.recorder.stop();\r\n        this.recorder.stream.getAudioTracks().forEach(track => track.stop());\r\n    }\r\n\r\n    handleCancelRecord = () => {\r\n        this.handleStopRecord(true);\r\n    }\r\n\r\n    handleRecord = async () => {\r\n        if (this.recorder) return;\r\n\r\n        let stream = null;\r\n        try{\r\n            stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n            if (this.recorder) return;\r\n        } catch { }\r\n\r\n        if (!stream) {\r\n            this.setState({\r\n                recordPermissionDenied: true\r\n            });\r\n            return;\r\n        }\r\n\r\n        const constraints = {\r\n            channelCount: 1,\r\n            sampleRate: 48000,\r\n        };\r\n\r\n        const track = stream.getAudioTracks()[0];\r\n        track.applyConstraints(constraints)\r\n\r\n        const options = { mimeType: 'audio/ogg; codecs=opus', audioBitsPerSecond: 64000 };\r\n        const workerOptions = {\r\n            encoderWorkerFactory: function () {\r\n                return new Worker(process.env.PUBLIC_URL + '/opus-media-recorder/encoderWorker.umd.js')\r\n            },\r\n            OggOpusEncoderWasmPath: process.env.PUBLIC_URL + '/opus-media-recorder/OggOpusEncoder.wasm'\r\n        };\r\n\r\n        const recorder = new MediaRecorder(stream, options, workerOptions);\r\n\r\n        const chunks = [];\r\n\r\n        recorder.ondataavailable = e => {\r\n            chunks.push(e.data);\r\n        };\r\n        recorder.onstart = () => {\r\n\r\n        };\r\n        recorder.onstop = () => {\r\n            TdLibController.clientUpdate({ '@type': 'clientUpdateRecordStop' });\r\n            this.setState({ recordingTime: null });\r\n\r\n            const { cancelled } = this.recorder;\r\n            this.recorder = null;\r\n\r\n            this.loadDraft();\r\n            if (cancelled) {\r\n                return;\r\n            }\r\n\r\n            // console.log('stop');\r\n            const blob = new Blob(chunks, { 'type' : 'audio/ogg; codecs=opus' });\r\n            const audioURL = window.URL.createObjectURL(blob);\r\n\r\n            const audio = new Audio(audioURL);\r\n            audio.oncanplay = () => {\r\n                const content = {\r\n                    '@type': 'inputMessageVoiceNote',\r\n                    voice_note: { '@type': 'inputFileBlob', name: '', size: blob.size, data: blob },\r\n                    duration: Math.trunc(audio.duration),\r\n                    waveform: '',\r\n                    caption: null\r\n                };\r\n\r\n                this.handleSendVoiceNote(content, blob);\r\n            };\r\n        };\r\n        recorder.onerror = () => {\r\n            TdLibController.clientUpdate({ '@type': 'clientUpdateRecordError' });\r\n            this.setState({ recordingTime: null });\r\n\r\n            this.loadDraft();\r\n            // console.log('error', e);\r\n        };\r\n\r\n        this.recorder = recorder;\r\n        this.recorder.start(50);\r\n        this.startTime = new Date();\r\n\r\n        TdLibController.clientUpdate({ '@type': 'clientUpdateRecordStart' });\r\n        this.setState({ recordingTime: new Date() });\r\n    }\r\n\r\n    handleClosePermission = () => {\r\n        this.setState({\r\n            recordPermissionDenied: false\r\n        })\r\n    };\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        const {\r\n            chatId,\r\n            editMessageId,\r\n            newItem,\r\n            replyToMessageId,\r\n            files,\r\n            newDraft,\r\n            defaultText,\r\n            defaultUrl,\r\n            openEditUrl,\r\n            openEditMedia,\r\n            recordingReady,\r\n            recordingTime,\r\n            recordPermissionDenied,\r\n            shook\r\n        } = this.state;\r\n\r\n        const isMediaEditing = editMessageId > 0 && !isTextMessage(chatId, editMessageId);\r\n        let icon = (<SpeedDialIcon open={!recordingTime && recordingReady} openIcon={<MicrophoneIcon />} icon={<SendIcon />} />);\r\n        if (editMessageId) {\r\n            icon = <DoneIcon/>;\r\n        }\r\n\r\n        return (\r\n            <div className='inputbox-background'>\r\n                <div className={classNames('inputbox', { 'inputbox-recording': recordingTime }, { 'shook': shook })}>\r\n                    <div className={classNames('inputbox-bubble')}>\r\n                        <InputBoxHeader\r\n                            chatId={chatId}\r\n                            messageId={replyToMessageId}\r\n                            editMessageId={openEditMedia ? 0 : editMessageId}\r\n                            onClick={this.handleHeaderClick}\r\n                        />\r\n                        <div className='inputbox-wrapper'>\r\n                            <div className='inputbox-left-column'>\r\n                                <React.Suspense\r\n                                    fallback={\r\n                                        <IconButton className='inputbox-icon-button' aria-label='Emoticon'>\r\n                                            <InsertEmoticonIcon />\r\n                                        </IconButton>\r\n                                    }>\r\n                                    <EmojiPickerButton onSelect={this.handleEmojiSelect} />\r\n                                </React.Suspense>\r\n                            </div>\r\n                            <div className='inputbox-middle-column'>\r\n                                <div\r\n                                    id='inputbox-message'\r\n                                    className='scrollbars-hidden'\r\n                                    ref={this.newMessageRef}\r\n                                    placeholder={isMediaEditing ? t('Caption') : t('Message')}\r\n                                    contentEditable\r\n                                    suppressContentEditableWarning\r\n                                    onKeyDown={this.handleKeyDown}\r\n                                    // onKeyDownCapture={this.handleKeyDownCapture}\r\n                                    onPaste={this.handlePaste}\r\n                                    onInput={this.handleInput}\r\n                                />\r\n                            </div>\r\n                            <div className='inputbox-right-column'>\r\n                                <RecordTimer/>\r\n                                <input\r\n                                    ref={this.attachDocumentRef}\r\n                                    className='inputbox-attach-button'\r\n                                    type='file'\r\n                                    multiple='multiple'\r\n                                    onChange={this.handleAttachDocumentComplete}\r\n                                />\r\n                                <input\r\n                                    ref={this.attachPhotoRef}\r\n                                    className='inputbox-attach-button'\r\n                                    type='file'\r\n                                    multiple='multiple'\r\n                                    accept='image/*'\r\n                                    onChange={this.handleAttachPhotoComplete}\r\n                                />\r\n                                {!Boolean(editMessageId) && !recordingTime && (\r\n                                    <AttachButton\r\n                                        chatId={chatId}\r\n                                        onAttachPhoto={this.handleAttachPhoto}\r\n                                        onAttachDocument={this.handleAttachDocument}\r\n                                        onAttachPoll={this.handleAttachPoll}\r\n                                    />\r\n                                )}\r\n\r\n                                {/*<IconButton>*/}\r\n                                {/*<KeyboardVoiceIcon />*/}\r\n                                {/*</IconButton>*/}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    { recordingTime && (\r\n                        <div className='inputbox-cancel-record-button-background'>\r\n                            <IconButton\r\n                                className='inputbox-cancel-record-button'\r\n                                aria-label='Delete'\r\n                                size='small'\r\n                                color='secondary'\r\n                                onClick={this.handleCancelRecord}>\r\n                                <DeleteIcon />\r\n                            </IconButton>\r\n                        </div>\r\n                    )}\r\n                    <div className='inputbox-send-button-background'>\r\n                        <IconButton\r\n                            className={classNames('inputbox-send-button', {'inputbox-send-accent-button': recordingTime || !recordingReady})}\r\n                            aria-label='Send'\r\n                            size='small'\r\n                            onClick={this.handleSubmit}>\r\n                            {icon}\r\n                        </IconButton>\r\n                    </div>\r\n                </div>\r\n                {!isPrivateChat(chatId) && <CreatePollDialog onSend={this.handleSendPoll} />}\r\n                <PasteFilesDialog files={files} onConfirm={this.handlePasteConfirm} onCancel={this.handlePasteCancel} />\r\n                {/*<UpdateDraftDialog draft={newDraft} onConfirm={this.handleUpdateDraftConfirm} onCancel={this.handleUpdateDraftCancel}/>*/}\r\n                <EditUrlDialog\r\n                    open={openEditUrl}\r\n                    defaultText={defaultText}\r\n                    defaultUrl={defaultUrl}\r\n                    onDone={this.handleDoneEditUrl}\r\n                    onCancel={this.handleCancelEditUrl}\r\n                />\r\n                <EditMediaDialog\r\n                    open={openEditMedia}\r\n                    chatId={chatId}\r\n                    messageId={editMessageId}\r\n                    newItem={newItem}\r\n                    onEdit={this.handleEditMedia}\r\n                    onSend={this.handleSendMedia}\r\n                    onCancel={this.handleCancelEditMedia}\r\n                />\r\n                <Dialog\r\n                    transitionDuration={0}\r\n                    open={recordPermissionDenied}\r\n                    onClose={this.handleClosePermission}\r\n                    aria-labelledby='form-dialog-title'>\r\n                    <DialogTitle id='form-dialog-title'>{t('RecordDeniedTitle')}</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText>{t('RecordDeniedDescription')}</DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClosePermission} color='primary'>\r\n                            {t('Ok')}\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTranslation()(InputBox);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport Button from '@material-ui/core/Button/Button';\r\nimport './FooterCommand.css';\r\n\r\nclass FooterCommand extends React.Component {\r\n    render() {\r\n        const { command, onCommand } = this.props;\r\n\r\n        return (\r\n            <div className='footer-command-wrapper'>\r\n                <div className='footer-command-actions'>\r\n                    <Button color='primary' className='footer-command-button' onClick={onCommand}>\r\n                        {command}\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FooterCommand;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport FooterCommand from './FooterCommand';\r\nimport Notifications from './Notifications';\r\n\r\nclass NotificationsCommand extends Notifications {\r\n    render() {\r\n        const { t } = this.props;\r\n        const { isMuted } = this.state;\r\n        const command = isMuted ? t('ChatsUnmute') : t('ChatsMute');\r\n\r\n        return <FooterCommand command={command} onCommand={this.handleSetChatNotifications} />;\r\n    }\r\n}\r\n\r\nexport default withTranslation()(NotificationsCommand);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport InputBox from './InputBox';\r\nimport FooterCommand from './FooterCommand';\r\nimport NotificationsCommand from './NotificationsCommand';\r\nimport { hasBasicGroupId, hasSupergroupId } from '../../Utils/Chat';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\r\nimport SupergroupStore from '../../Stores/SupergroupStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './Footer.css';\r\n\r\nclass Footer extends React.Component {\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { t, chatId } = this.props;\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.t !== t) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\r\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\r\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\r\n    }\r\n\r\n    onUpdateBasicGroup = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (hasBasicGroupId(chatId, update.basic_group.id)) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    onUpdateSupergroup = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (hasSupergroupId(chatId, update.supergroup.id)) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    handleJoin = () => {\r\n        const { chatId } = this.props;\r\n        if (!chatId) return;\r\n\r\n        TdLibController.send({\r\n            '@type': 'joinChat',\r\n            chat_id: chatId\r\n        });\r\n    };\r\n\r\n    handleDeleteAndExit = () => {\r\n        const { chatId } = this.props;\r\n        if (!chatId) return;\r\n\r\n        TdLibController.send({\r\n            '@type': 'deleteChatHistory',\r\n            chat_id: chatId,\r\n            remove_from_chat_list: true\r\n        });\r\n\r\n        // TdLibController\r\n        //     .send({\r\n        //         '@type': 'leaveChat',\r\n        //         chat_id: this.props.chatId\r\n        //     });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, t } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return null;\r\n\r\n        const { type } = chat;\r\n        if (!type) return null;\r\n\r\n        switch (type['@type']) {\r\n            case 'chatTypeBasicGroup': {\r\n                const basicGroup = BasicGroupStore.get(type.basic_group_id);\r\n                if (!basicGroup) return null;\r\n\r\n                const { status } = basicGroup;\r\n                if (!status) return null;\r\n\r\n                const { is_member, permissions } = status;\r\n\r\n                switch (status['@type']) {\r\n                    case 'chatMemberStatusAdministrator': {\r\n                        return <InputBox />;\r\n                    }\r\n                    case 'chatMemberStatusBanned': {\r\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\r\n                    }\r\n                    case 'chatMemberStatusCreator': {\r\n                        return is_member ? <InputBox /> : <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\r\n                    }\r\n                    case 'chatMemberStatusLeft': {\r\n                        return null;\r\n                    }\r\n                    case 'chatMemberStatusMember': {\r\n                        return <InputBox />;\r\n                    }\r\n                    case 'chatMemberStatusRestricted': {\r\n                        if (is_member) {\r\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\r\n                        } else {\r\n                            return <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n            case 'chatTypePrivate': {\r\n                return <InputBox />;\r\n            }\r\n            case 'chatTypeSecret': {\r\n                return <InputBox />;\r\n            }\r\n            case 'chatTypeSupergroup': {\r\n                const supergroup = SupergroupStore.get(type.supergroup_id);\r\n                if (!supergroup) return null;\r\n\r\n                const { is_channel, status } = supergroup;\r\n                if (!status) return null;\r\n\r\n                const { is_member, permissions } = status;\r\n\r\n                switch (status['@type']) {\r\n                    case 'chatMemberStatusAdministrator': {\r\n                        return <InputBox />;\r\n                    }\r\n                    case 'chatMemberStatusBanned': {\r\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\r\n                    }\r\n                    case 'chatMemberStatusCreator': {\r\n                        return is_member ? <InputBox /> : <FooterCommand command={is_channel ? t('ChannelJoin') : t('JoinGroup')} onCommand={this.handleJoin} />;\r\n                    }\r\n                    case 'chatMemberStatusLeft': {\r\n                        return (\r\n                            <FooterCommand\r\n                                command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\r\n                                onCommand={this.handleJoin}\r\n                            />\r\n                        );\r\n                    }\r\n                    case 'chatMemberStatusMember': {\r\n                        if (is_channel) {\r\n                            return <NotificationsCommand chatId={chatId} />;\r\n                        } else {\r\n                            return <InputBox />;\r\n                        }\r\n                    }\r\n                    case 'chatMemberStatusRestricted': {\r\n                        if (is_member) {\r\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\r\n                        } else {\r\n                            return (\r\n                                <FooterCommand\r\n                                    command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\r\n                                    onCommand={this.handleJoin}\r\n                                />\r\n                            );\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n}\r\n\r\nexport default withTranslation()(Footer);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Typography from '@material-ui/core/es/Typography/Typography';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport './NotificationTimer.css';\r\n\r\nclass NotificationTimer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            seconds: this.props.timeout / 1000,\r\n            value: 0\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.startTime = new Date();\r\n        this.expire = this.startTime;\r\n        this.expire.setMilliseconds(this.expire.getMilliseconds() + this.props.timeout);\r\n        this.timerId = setInterval(this.handleTimer, 100);\r\n    }\r\n\r\n    handleTimer = () => {\r\n        const now = new Date();\r\n        const seconds = this.expire - now;\r\n        const value = 100 - (seconds / this.props.timeout) * 100;\r\n        // console.log(`NotificationTimer ms=${seconds} value=${value}`);\r\n        this.setState({\r\n            seconds: seconds > 0 ? seconds : 0,\r\n            value: value > 100 ? 100 : value\r\n        });\r\n\r\n        if (now >= this.expire) {\r\n            if (this.timerId) {\r\n                clearInterval(this.timerId);\r\n                this.timerId = null;\r\n\r\n                const { onTimeout } = this.props;\r\n                if (onTimeout) {\r\n                    onTimeout();\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    componentWillUnmount() {\r\n        if (this.timerId) {\r\n            clearInterval(this.timerId);\r\n            this.timerId = null;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { value, seconds } = this.state;\r\n\r\n        return (\r\n            <div className='notification-timer'>\r\n                <div className='notification-timer-text'>\r\n                    <Typography color='inherit'>{(seconds / 1000).toFixed()}</Typography>\r\n                </div>\r\n                <div className='notification-timer-progress'>\r\n                    <CircularProgress size={32} value={100 - value} variant='static' />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nNotificationTimer.propTypes = {\r\n    timeout: PropTypes.number.isRequired,\r\n    onTimeout: PropTypes.func\r\n};\r\n\r\nexport default NotificationTimer;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { compose } from '../../Utils/HOC';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { withSnackbar } from 'notistack';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MoreVertIcon from '../../Assets/Icons/More';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport ChatTile from '../Tile/ChatTile';\r\nimport NotificationTimer from '../Additional/NotificationTimer';\r\nimport { canClearHistory, canDeleteChat, canUnpinMessage, getChatShortTitle, isCreator, isPrivateChat, isSupergroup } from '../../Utils/Chat';\r\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\r\nimport ApplicationStore from '../../Stores/ApplicationStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport SupergroupStore from '../../Stores/SupergroupStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './MainMenuButton.css';\r\n\r\nclass LeaveChatDialog extends React.Component {\r\n    getDeleteDialogText = (chatId, t) => {\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return null;\r\n        if (!chat.type) return null;\r\n\r\n        switch (chat.type['@type']) {\r\n            case 'chatTypeBasicGroup': {\r\n                return `Are you sure you want to leave group ${chat.title}?`;\r\n            }\r\n            case 'chatTypeSupergroup': {\r\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\r\n                if (supergroup) {\r\n                    return supergroup.is_channel\r\n                        ? `Are you sure you want to leave channel ${chat.title}?`\r\n                        : `Are you sure you want to leave group ${chat.title}?`;\r\n                }\r\n\r\n                return null;\r\n            }\r\n            case 'chatTypePrivate':\r\n            case 'chatTypeSecret': {\r\n                return `Are you sure you want to delete chat with ${getChatShortTitle(chatId, false, t)}?`;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    render() {\r\n        const { onClose, chatId, t, open } = this.props;\r\n\r\n        return (\r\n            <Dialog\r\n                transitionDuration={0}\r\n                onClose={() => onClose(false)}\r\n                aria-labelledby='delete-dialog-title'\r\n                open={open}>\r\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\r\n                <DialogContent>\r\n                    <div className='delete-dialog-content'>\r\n                        <ChatTile chatId={chatId} />\r\n                        <DialogContentText id='delete-dialog-description'>\r\n                            {this.getDeleteDialogText(chatId, t)}\r\n                        </DialogContentText>\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => onClose(false)} color='primary'>\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\r\n                        Ok\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nconst EnhancedLeaveChatDialog = withTranslation()(LeaveChatDialog);\r\n\r\nclass ClearHistoryDialog extends React.Component {\r\n    render() {\r\n        const { onClose, chatId, t, open } = this.props;\r\n\r\n        return (\r\n            <Dialog\r\n                transitionDuration={0}\r\n                onClose={() => onClose(false)}\r\n                aria-labelledby='delete-dialog-title'\r\n                open={open}>\r\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\r\n                <DialogContent>\r\n                    <div className='delete-dialog-content'>\r\n                        <ChatTile chatId={chatId} />\r\n                        <DialogContentText id='delete-dialog-description'>\r\n                            Are you sure you want clear history?\r\n                        </DialogContentText>\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => onClose(false)} color='primary'>\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\r\n                        Ok\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nconst EnhancedClearHistoryDialog = withTranslation()(ClearHistoryDialog);\r\n\r\nclass MainMenuButton extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            anchorEl: null,\r\n            openDelete: false,\r\n            openClearHistory: false\r\n        };\r\n    }\r\n\r\n    handleButtonClick = event => {\r\n        this.setState({ anchorEl: event.currentTarget });\r\n    };\r\n\r\n    handleMenuClose = () => {\r\n        this.setState({ anchorEl: null });\r\n    };\r\n\r\n    handleChatInfo = () => {\r\n        this.handleMenuClose();\r\n        setTimeout(() => this.props.openChatDetails(), 150);\r\n    };\r\n\r\n    handleClearHistory = () => {\r\n        this.handleMenuClose();\r\n\r\n        this.setState({ openClearHistory: true });\r\n    };\r\n\r\n    handleClearHistoryContinue = result => {\r\n        const { t } = this.props;\r\n\r\n        this.setState({ openClearHistory: false });\r\n\r\n        if (!result) return;\r\n\r\n        const chatId = ApplicationStore.getChatId();\r\n        const message = t('HistoryClearedUndo');\r\n        const request = {\r\n            '@type': 'deleteChatHistory',\r\n            chat_id: chatId,\r\n            remove_from_chat_list: false\r\n        };\r\n\r\n        this.handleScheduledAction(chatId, 'clientUpdateClearHistory', message, request);\r\n    };\r\n\r\n    handleLeave = () => {\r\n        this.handleMenuClose();\r\n\r\n        this.setState({ openDelete: true });\r\n    };\r\n\r\n    handleLeaveContinue = result => {\r\n        this.setState({ openDelete: false });\r\n\r\n        if (!result) return;\r\n\r\n        const chatId = ApplicationStore.getChatId();\r\n        const message = this.getLeaveChatNotification(chatId);\r\n        let request = isPrivateChat(chatId)\r\n            ? { '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true }\r\n            : { '@type': 'leaveChat', chat_id: chatId };\r\n\r\n        if (isSupergroup(chatId) && isCreator(chatId)) {\r\n            request = {\r\n                '@type': 'setChatMemberStatus',\r\n                chat_id: chatId,\r\n                user_id: UserStore.getMyId(),\r\n                status: {\r\n                    '@type': 'chatMemberStatusCreator',\r\n                    is_member: false\r\n                }\r\n            };\r\n        }\r\n\r\n        this.handleScheduledAction(chatId, 'clientUpdateLeaveChat', message, request);\r\n    };\r\n\r\n    handleScheduledAction = (chatId, clientUpdateType, message, request) => {\r\n        const { t } = this.props;\r\n        if (!clientUpdateType) return;\r\n\r\n        const key = `${clientUpdateType} chatId=${chatId}`;\r\n        const action = async () => {\r\n            try {\r\n                await TdLibController.send(request);\r\n            } finally {\r\n                TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: false });\r\n            }\r\n        };\r\n        const cancel = () => {\r\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: false });\r\n        };\r\n\r\n        const { enqueueSnackbar, closeSnackbar } = this.props;\r\n\r\n        TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: true });\r\n        const snackKey = enqueueSnackbar(message, {\r\n            persist: true,\r\n            key,\r\n            preventDuplicate: true,\r\n            action: [\r\n                <IconButton\r\n                    key='progress'\r\n                    color='inherit'\r\n                    className='progress-button'>\r\n                    <NotificationTimer\r\n                        timeout={NOTIFICATION_AUTO_HIDE_DURATION_MS}\r\n                        onTimeout={() => {\r\n                            action();\r\n                            closeSnackbar(snackKey);\r\n                        }}/>\r\n                </IconButton>,\r\n                <Button\r\n                    key='undo'\r\n                    color='primary'\r\n                    size='small'\r\n                    onClick={() => {\r\n                        cancel();\r\n                        closeSnackbar(snackKey);\r\n                    }}>\r\n                    {t('Undo')}\r\n                </Button>\r\n            ]\r\n        });\r\n    };\r\n\r\n    getLeaveChatTitle = (chatId, t) => {\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return null;\r\n        if (!chat.type) return null;\r\n\r\n        switch (chat.type['@type']) {\r\n            case 'chatTypeBasicGroup': {\r\n                return t('DeleteChat');\r\n            }\r\n            case 'chatTypeSupergroup': {\r\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\r\n                if (supergroup) {\r\n                    return supergroup.is_channel ? t('LeaveChannel') : t('LeaveMegaMenu');\r\n                }\r\n\r\n                return null;\r\n            }\r\n            case 'chatTypePrivate':\r\n            case 'chatTypeSecret': {\r\n                return t('DeleteChatUser');\r\n            }\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    getLeaveChatNotification = chatId => {\r\n        const { t } = this.props;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return t('ChatDeletedUndo');\r\n        if (!chat.type) return t('ChatDeletedUndo');\r\n\r\n        switch (chat.type['@type']) {\r\n            case 'chatTypeBasicGroup': {\r\n                return t('ChatDeletedUndo');\r\n            }\r\n            case 'chatTypeSupergroup': {\r\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\r\n                if (supergroup) {\r\n                    return supergroup.is_channel ? 'Left channel' : 'Left group';\r\n                }\r\n\r\n                return t('ChatDeletedUndo');\r\n            }\r\n            case 'chatTypePrivate':\r\n            case 'chatTypeSecret': {\r\n                return t('ChatDeletedUndo');\r\n            }\r\n        }\r\n\r\n        return t('ChatDeletedUndo');\r\n    };\r\n\r\n    handleUnpin = () => {\r\n        this.handleMenuClose();\r\n\r\n        const chatId = ApplicationStore.getChatId();\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateUnpin',\r\n            chatId\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        const { anchorEl, openDelete, openClearHistory } = this.state;\r\n\r\n        const chatId = ApplicationStore.getChatId();\r\n        const clearHistory = canClearHistory(chatId);\r\n        const deleteChat = canDeleteChat(chatId);\r\n        const leaveChatTitle = this.getLeaveChatTitle(chatId, t);\r\n        const unpinMessage = canUnpinMessage(chatId);\r\n\r\n        return (\r\n            <>\r\n                <IconButton\r\n                    aria-owns={anchorEl ? 'simple-menu' : null}\r\n                    aria-haspopup='true'\r\n                    className='main-menu-button'\r\n                    aria-label='Menu'\r\n                    onClick={this.handleButtonClick}>\r\n                    <MoreVertIcon />\r\n                </IconButton>\r\n                <Menu\r\n                    id='main-menu'\r\n                    anchorEl={anchorEl}\r\n                    open={Boolean(anchorEl)}\r\n                    onClose={this.handleMenuClose}\r\n                    getContentAnchorEl={null}\r\n                    disableAutoFocusItem\r\n                    disableRestoreFocus={true}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'right'\r\n                    }}>\r\n                    <MenuItem onClick={this.handleChatInfo}>{t('ChatInfo')}</MenuItem>\r\n                    {clearHistory && <MenuItem onClick={this.handleClearHistory}>{t('ClearHistory')}</MenuItem>}\r\n                    {deleteChat && leaveChatTitle && <MenuItem onClick={this.handleLeave}>{leaveChatTitle}</MenuItem>}\r\n                    {unpinMessage && <MenuItem onClick={this.handleUnpin}>{t('Unpin')}</MenuItem>}\r\n                </Menu>\r\n                <EnhancedLeaveChatDialog chatId={chatId} open={openDelete} onClose={this.handleLeaveContinue} />\r\n                <EnhancedClearHistoryDialog\r\n                    chatId={chatId}\r\n                    open={openClearHistory}\r\n                    onClose={this.handleClearHistoryContinue}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst enhance = compose(\r\n    withSnackbar,\r\n    withTranslation()\r\n);\r\n\r\nexport default enhance(MainMenuButton);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { getChatSubtitle, isAccentChatSubtitle } from '../../Utils/Chat';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\r\nimport SupergroupStore from '../../Stores/SupergroupStore';\r\nimport './HeaderChatSubtitle.css';\r\n\r\nclass HeaderChatSubtitle extends React.Component {\r\n    componentDidMount() {\r\n        ChatStore.on('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\r\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\r\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\r\n        ChatStore.on('updateUserChatAction', this.onUpdateUserChatAction);\r\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\r\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\r\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\r\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\r\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ChatStore.off('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\r\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\r\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\r\n        ChatStore.off('updateUserChatAction', this.onUpdateUserChatAction);\r\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\r\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\r\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\r\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\r\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\r\n    }\r\n\r\n    onUpdateChatOnlineMemberCount = update => {\r\n        const { chatId } = this.props;\r\n        if (chatId !== update.chat_id) return;\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onUpdateChatTitle = update => {\r\n        const { chatId } = this.props;\r\n        if (chatId !== update.chat_id) return;\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onUpdateUserChatAction = update => {\r\n        const { chatId } = this.props;\r\n        if (chatId !== update.chat_id) return;\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onUpdateUserStatus = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n        if (!chat.type) return;\r\n\r\n        switch (chat.type['@type']) {\r\n            case 'chatTypeBasicGroup': {\r\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\r\n                if (fullInfo && fullInfo.members) {\r\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\r\n                    if (member) {\r\n                        this.forceUpdate();\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n            case 'chatTypePrivate': {\r\n                if (chat.type.user_id === update.user_id) {\r\n                    this.forceUpdate();\r\n                }\r\n                break;\r\n            }\r\n            case 'chatTypeSecret': {\r\n                if (chat.type.user_id === update.user_id) {\r\n                    this.forceUpdate();\r\n                }\r\n                break;\r\n            }\r\n            case 'chatTypeSupergroup': {\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    onUpdateUserFullInfo = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n        if (!chat.type) return;\r\n\r\n        if (\r\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\r\n            chat.type.user_id === update.user_id\r\n        ) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    onUpdateBasicGroupFullInfo = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n        if (!chat.type) return;\r\n\r\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group_id) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    onUpdateSupergroupFullInfo = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n        if (!chat.type) return;\r\n\r\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup_id) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    onUpdateBasicGroup = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n        if (!chat.type) return;\r\n\r\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group.id) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    onUpdateSupergroup = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n        if (!chat.type) return;\r\n\r\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup.id) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { chatId } = this.props;\r\n\r\n        const subtitle = getChatSubtitle(chatId, true);\r\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\r\n\r\n        return (\r\n            <div className={classNames('header-chat-subtitle', { 'header-chat-subtitle-accent': isAccentSubtitle })}>\r\n                {subtitle}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nHeaderChatSubtitle.propTypes = {\r\n    chatId: PropTypes.number.isRequired\r\n};\r\n\r\nexport default HeaderChatSubtitle;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport ChatTile from './ChatTile';\r\nimport DialogTitle from './DialogTitle';\r\nimport HeaderChatSubtitle from './HeaderChatSubtitle';\r\nimport './HeaderChat.css';\r\n\r\nclass HeaderChat extends React.Component {\r\n    render() {\r\n        const { className, chatId, onClick } = this.props;\r\n\r\n        return (\r\n            <div className={classNames('header-chat', className)} onClick={onClick}>\r\n                <ChatTile chatId={chatId} size={44} />\r\n                <div className='header-chat-content'>\r\n                    <DialogTitle chatId={chatId} />\r\n                    <HeaderChatSubtitle chatId={chatId} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nHeaderChat.propTypes = {\r\n    chatId: PropTypes.number.isRequired\r\n};\r\n\r\nexport default HeaderChat;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport { clearSelection, deleteMessages, forwardMessages } from '../../Actions/Client';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport './HeaderCommand.css';\r\n\r\nclass HeaderCommand extends React.Component {\r\n    handleCancel = () => {\r\n        clearSelection();\r\n    };\r\n\r\n    handleDelete = () => {\r\n        let id = 0;\r\n        let messageIds = [];\r\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\r\n            id = chatId;\r\n            messageIds.push(messageId);\r\n        }\r\n\r\n        deleteMessages(id, messageIds);\r\n    };\r\n\r\n    handleForward = () => {\r\n        let id;\r\n        const messageIds = [];\r\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\r\n            id = chatId;\r\n            messageIds.push(messageId);\r\n        }\r\n\r\n        forwardMessages(id, messageIds);\r\n    };\r\n\r\n    render() {\r\n        const { t, count } = this.props;\r\n\r\n        let canBeDeleted = true;\r\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\r\n            const message = MessageStore.get(chatId, messageId);\r\n            if (!message) {\r\n                canBeDeleted = false;\r\n                break;\r\n            }\r\n            if (!message.can_be_deleted_only_for_self && !message.can_be_deleted_for_all_users) {\r\n                canBeDeleted = false;\r\n                break;\r\n            }\r\n        }\r\n\r\n        let canBeForwarded = true;\r\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\r\n            const message = MessageStore.get(chatId, messageId);\r\n            if (!message) {\r\n                canBeForwarded = false;\r\n                break;\r\n            }\r\n            if (!message.can_be_forwarded) {\r\n                canBeForwarded = false;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className='header-command'>\r\n                {canBeForwarded && (\r\n                    <Button color='primary' className='header-command-button' onClick={this.handleForward}>\r\n                        {count <= 1 ? t('Forward') : `${t('Forward')} ${count}`}\r\n                    </Button>\r\n                )}\r\n                {canBeDeleted && (\r\n                    <Button color='primary' className='header-command-button' onClick={this.handleDelete}>\r\n                        {count <= 1 ? t('Delete') : `${t('Delete')} ${count}`}\r\n                    </Button>\r\n                )}\r\n                <div className='header-command-space' />\r\n                <Button color='primary' className='header-command-button' onClick={this.handleCancel}>\r\n                    {t('Cancel')}\r\n                </Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nHeaderCommand.propTypes = {\r\n    count: PropTypes.number\r\n};\r\n\r\nexport default withTranslation()(HeaderCommand);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport ReplyTile from '../Tile/ReplyTile';\r\nimport { canPinMessages } from '../../Utils/Chat';\r\nimport { getContent, getReplyMinithumbnail, getReplyPhotoSize, isDeletedMessage } from '../../Utils/Message';\r\nimport { loadMessageContents } from '../../Utils/File';\r\nimport { openChat } from '../../Actions/Client';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './PinnedMessage.css';\r\n\r\nclass PinnedMessage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {};\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { prevPropsChatId } = state;\r\n        const { chatId } = props;\r\n\r\n        if (prevPropsChatId !== chatId) {\r\n            const chat = ChatStore.get(chatId);\r\n            return {\r\n                prevPropsChatId: chatId,\r\n                clientData: ChatStore.getClientData(chatId),\r\n                messageId: chat && chat.pinned_message_id ? chat.pinned_message_id : 0,\r\n                confirm: false\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { messageId } = this.state;\r\n\r\n        if (messageId && prevState.messageId !== messageId) {\r\n            this.loadContent();\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadContent();\r\n\r\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\r\n        ChatStore.on('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\r\n        ChatStore.on('clientUpdateUnpin', this.onClientUpdateUnpin);\r\n        ChatStore.on('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\r\n        ChatStore.off('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\r\n        ChatStore.off('clientUpdateUnpin', this.onClientUpdateUnpin);\r\n        ChatStore.off('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\r\n    }\r\n\r\n    onClientUpdateUnpin = update => {\r\n        const { chatId } = update;\r\n\r\n        if (this.props.chatId !== chatId) return;\r\n\r\n        this.handleDelete();\r\n    };\r\n\r\n    onClientUpdateDialogsReady = update => {\r\n        const { messageId } = this.state;\r\n\r\n        if (messageId) {\r\n            this.loadContent();\r\n        }\r\n    };\r\n\r\n    onClientUpdateSetChatClientData = update => {\r\n        const { chatId, clientData } = update;\r\n\r\n        if (this.props.chatId !== chatId) return;\r\n\r\n        this.setState({ clientData });\r\n    };\r\n\r\n    onUpdateChatPinnedMessage = update => {\r\n        const { chat_id, pinned_message_id: messageId } = update;\r\n        const { chatId } = this.props;\r\n\r\n        if (chatId !== chat_id) return;\r\n\r\n        this.setState({ messageId });\r\n    };\r\n\r\n    loadContent = () => {\r\n        const { chatId } = this.props;\r\n        const { messageId } = this.state;\r\n\r\n        if (!chatId) return;\r\n        if (!messageId) return;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (message) return;\r\n\r\n        TdLibController.send({\r\n            '@type': 'getMessage',\r\n            chat_id: chatId,\r\n            message_id: messageId\r\n        })\r\n            .then(result => {\r\n                MessageStore.set(result);\r\n\r\n                const store = FileStore.getStore();\r\n                loadMessageContents(store, [result]);\r\n\r\n                this.forceUpdate();\r\n            })\r\n            .catch(error => {\r\n                const { code, message } = error;\r\n                if (message !== 'Chat not found') {\r\n                    const deletedMessage = {\r\n                        '@type': 'deletedMessage',\r\n                        chat_id: chatId,\r\n                        id: messageId,\r\n                        content: null\r\n                    };\r\n\r\n                    MessageStore.set(deletedMessage);\r\n                    this.forceUpdate();\r\n                }\r\n            });\r\n    };\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { chatId, t, theme } = this.props;\r\n        const { clientData, confirm, messageId } = this.state;\r\n\r\n        if (nextProps.t !== t) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.theme !== theme) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.clientData !== clientData) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.confirm !== confirm) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.messageId !== messageId) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    handleClick = event => {\r\n        const { chatId } = this.props;\r\n        const { messageId } = this.state;\r\n\r\n        if (!messageId) return;\r\n\r\n        openChat(chatId, messageId);\r\n    };\r\n\r\n    handleDelete = async event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { chatId } = this.props;\r\n        const { messageId } = this.state;\r\n\r\n        const canPin = canPinMessages(chatId);\r\n        if (canPin) {\r\n            this.setState({ confirm: true });\r\n        } else {\r\n            const data = ChatStore.getClientData(chatId);\r\n            await TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateSetChatClientData',\r\n                chatId: chatId,\r\n                clientData: Object.assign({}, data, { unpinned_message_id: messageId })\r\n            });\r\n        }\r\n    };\r\n\r\n    handleUnpin = async () => {\r\n        const { chatId } = this.props;\r\n\r\n        this.handleClose();\r\n\r\n        TdLibController.send({\r\n            '@type': 'unpinChatMessage',\r\n            chat_id: chatId\r\n        });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ confirm: false });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, t } = this.props;\r\n        const { messageId, confirm } = this.state;\r\n\r\n        if (!chatId) return null;\r\n\r\n        const { unpinned_message_id } = ChatStore.getClientData(chatId);\r\n        if (unpinned_message_id === messageId) return null;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return null;\r\n\r\n        let content = !message ? t('Loading') : getContent(message, t);\r\n        const photoSize = getReplyPhotoSize(chatId, messageId);\r\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\r\n\r\n        if (isDeletedMessage(message)) {\r\n            content = t('DeletedMessage');\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <div className='pinned-message' onMouseDown={this.handleClick}>\r\n                    <div className='border reply-border' />\r\n                    {photoSize && (\r\n                        <ReplyTile\r\n                            chatId={chatId}\r\n                            messageId={messageId}\r\n                            photoSize={photoSize}\r\n                            minithumbnail={minithumbnail}\r\n                        />\r\n                    )}\r\n                    <div className='pinned-message-content'>\r\n                        <div className='pinned-message-title'>{t('PinnedMessage')}</div>\r\n                        <div className='pinned-message-subtitle'>{content}</div>\r\n                    </div>\r\n                </div>\r\n                {confirm && (\r\n                    <Dialog\r\n                        manager={modalManager}\r\n                        transitionDuration={0}\r\n                        open\r\n                        onClose={this.handleClose}\r\n                        aria-labelledby='unpin-message-confirmation'>\r\n                        <DialogTitle id='unpin-message-confirmation'>{t('Confirm')}</DialogTitle>\r\n                        <DialogContent>\r\n                            <DialogContentText>{t('UnpinMessageAlert')}</DialogContentText>\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button onClick={this.handleClose} color='primary'>\r\n                                {t('Cancel')}\r\n                            </Button>\r\n                            <Button onClick={this.handleUnpin} color='primary'>\r\n                                {t('Ok')}\r\n                            </Button>\r\n                        </DialogActions>\r\n                    </Dialog>\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nPinnedMessage.propTypes = {\r\n    chatId: PropTypes.number.isRequired\r\n};\r\n\r\nexport default withTranslation()(PinnedMessage);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SearchIcon from '../../Assets/Icons/Search';\r\nimport MainMenuButton from './MainMenuButton';\r\nimport HeaderChat from '../Tile/HeaderChat';\r\nimport HeaderCommand from './HeaderCommand';\r\nimport HeaderProgress from './HeaderProgress';\r\nimport PinnedMessage from './PinnedMessage';\r\nimport { changeChatDetailsVisibility } from '../../Actions/Chat';\r\nimport {\r\n    getChatShortTitle,\r\n    getChatSubtitle,\r\n    getChatTitle,\r\n    isAccentChatSubtitle, isChannelChat,\r\n    isPrivateChat, isSupergroup\r\n} from '../../Utils/Chat';\r\nimport { clearSelection, openChat, searchChat } from '../../Actions/Client';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './Header.css';\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            authorizationState: AppStore.getAuthorizationState(),\r\n            connectionState: AppStore.getConnectionState(),\r\n            openDeleteDialog: false\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if (nextState !== this.state) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.theme !== this.props.theme) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.t !== this.props.t) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\r\n        AppStore.on('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\r\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\r\n        AppStore.on('updateConnectionState', this.onUpdateConnectionState);\r\n\r\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\r\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\r\n        AppStore.off('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\r\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\r\n        AppStore.off('updateConnectionState', this.onUpdateConnectionState);\r\n\r\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\r\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\r\n    }\r\n\r\n    onClientUpdateDeleteMessages = update => {\r\n        const { chatId, messageIds } = update;\r\n\r\n        let canBeDeletedForAllUsers = true;\r\n        for (let messageId of messageIds) {\r\n            const message = MessageStore.get(chatId, messageId);\r\n            if (!message) {\r\n                canBeDeletedForAllUsers = false;\r\n                break;\r\n            }\r\n            if (!message.can_be_deleted_for_all_users) {\r\n                canBeDeletedForAllUsers = false;\r\n                break;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            openDeleteDialog: true,\r\n            chatId,\r\n            messageIds,\r\n            canBeDeletedForAllUsers: canBeDeletedForAllUsers,\r\n            revoke: canBeDeletedForAllUsers\r\n        });\r\n    };\r\n\r\n    handleRevokeChange = () => {\r\n        this.setState({ revoke: !this.state.revoke });\r\n    };\r\n\r\n    handleCloseDelete = () => {\r\n        this.setState({ openDeleteDialog: false });\r\n    };\r\n\r\n    handleDeleteContinue = () => {\r\n        const { revoke, chatId, messageIds } = this.state;\r\n\r\n        clearSelection();\r\n        this.handleCloseDelete();\r\n\r\n        TdLibController.send({\r\n            '@type': 'deleteMessages',\r\n            chat_id: chatId,\r\n            message_ids: messageIds,\r\n            revoke: revoke\r\n        });\r\n    };\r\n\r\n    onClientUpdateMessageSelected = update => {\r\n        this.setState({ selectionCount: MessageStore.selectedItems.size });\r\n    };\r\n\r\n    onClientUpdateChatId = update => {\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onUpdateConnectionState = update => {\r\n        this.setState({ connectionState: update.state });\r\n    };\r\n\r\n    onUpdateAuthorizationState = update => {\r\n        this.setState({ authorizationState: update.authorization_state });\r\n    };\r\n\r\n    openChatDetails = () => {\r\n        const chatId = AppStore.getChatId();\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        const { isSmallWidth } = AppStore;\r\n\r\n        if (isSmallWidth) {\r\n            openChat(chatId, null, true);\r\n        } else {\r\n            changeChatDetailsVisibility(true);\r\n        }\r\n    };\r\n\r\n    handleSearchChat = () => {\r\n        const chatId = AppStore.getChatId();\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        searchChat(chatId);\r\n    };\r\n\r\n    localize = str => {\r\n        const { t } = this.props;\r\n\r\n        return t(str)\r\n            .replace('...', '')\r\n            .replace('…', '');\r\n    };\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        const {\r\n            authorizationState,\r\n            connectionState,\r\n            selectionCount,\r\n            openDeleteDialog,\r\n            canBeDeletedForAllUsers,\r\n            revoke,\r\n            messageIds\r\n        } = this.state;\r\n\r\n        const count = messageIds ? messageIds.length : 0;\r\n\r\n        let control = null;\r\n        if (selectionCount) {\r\n            control = <HeaderCommand count={selectionCount} />;\r\n        }\r\n\r\n        const chatId = AppStore.getChatId();\r\n        const chat = ChatStore.get(chatId);\r\n\r\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\r\n        let title = getChatTitle(chatId, true, t);\r\n        let subtitle = getChatSubtitle(chatId, true);\r\n        let showProgressAnimation = false;\r\n\r\n        if (connectionState) {\r\n            switch (connectionState['@type']) {\r\n                case 'connectionStateConnecting':\r\n                    title = this.localize('Connecting');\r\n                    subtitle = '';\r\n                    showProgressAnimation = true;\r\n                    break;\r\n                case 'connectionStateConnectingToProxy':\r\n                    title = this.localize('Connecting to proxy');\r\n                    subtitle = '';\r\n                    showProgressAnimation = true;\r\n                    break;\r\n                case 'connectionStateReady':\r\n                    break;\r\n                case 'connectionStateUpdating':\r\n                    title = this.localize('Updating');\r\n                    subtitle = '';\r\n                    showProgressAnimation = true;\r\n                    break;\r\n                case 'connectionStateWaitingForNetwork':\r\n                    title = this.localize('Waiting for network');\r\n                    subtitle = '';\r\n                    showProgressAnimation = true;\r\n                    break;\r\n            }\r\n        } else if (authorizationState) {\r\n            switch (authorizationState['@type']) {\r\n                case 'authorizationStateClosed':\r\n                    break;\r\n                case ' authorizationStateClosing':\r\n                    break;\r\n                case 'authorizationStateLoggingOut':\r\n                    title = this.localize('Logging out');\r\n                    subtitle = '';\r\n                    showProgressAnimation = true;\r\n                    break;\r\n                case 'authorizationStateReady':\r\n                    break;\r\n                case 'authorizationStateWaitCode':\r\n                    break;\r\n                case 'authorizationStateWaitEncryptionKey':\r\n                    title = this.localize('Loading');\r\n                    subtitle = '';\r\n                    showProgressAnimation = true;\r\n                    break;\r\n                case 'authorizationStateWaitPassword':\r\n                    break;\r\n                case 'authorizationStateWaitPhoneNumber':\r\n                    break;\r\n                case 'authorizationStateWaitTdlibParameters':\r\n                    title = this.localize('Loading');\r\n                    subtitle = '';\r\n                    showProgressAnimation = true;\r\n                    break;\r\n            }\r\n        } else {\r\n            title = this.localize('Loading');\r\n            subtitle = '';\r\n            showProgressAnimation = true;\r\n        }\r\n\r\n        control = control || (\r\n            <div className='header-details'>\r\n                {showProgressAnimation ? (\r\n                    <div\r\n                        className={classNames('header-status', 'grow', chat ? 'cursor-pointer' : 'cursor-default')}\r\n                        onClick={this.openChatDetails}>\r\n                        <span className='header-status-content'>{title}</span>\r\n                        <HeaderProgress />\r\n                        <span\r\n                            className={classNames('header-status-title', { 'header-status-accent': isAccentSubtitle })}>\r\n                            {subtitle}\r\n                        </span>\r\n                        <span className='header-status-tail' />\r\n                    </div>\r\n                ) : (\r\n                    <HeaderChat\r\n                        className={classNames('grow', 'cursor-pointer')}\r\n                        chatId={chatId}\r\n                        onClick={this.openChatDetails}\r\n                    />\r\n                )}\r\n                <PinnedMessage chatId={chatId} />\r\n                {chat && (\r\n                    <>\r\n                        <IconButton\r\n                            className='header-right-second-button'\r\n                            aria-label='Search'\r\n                            onClick={this.handleSearchChat}>\r\n                            <SearchIcon />\r\n                        </IconButton>\r\n                        <MainMenuButton openChatDetails={this.openChatDetails} />\r\n                    </>\r\n                )}\r\n            </div>\r\n        );\r\n\r\n        return (\r\n            <>\r\n                {control}\r\n                <Dialog\r\n                    transitionDuration={0}\r\n                    open={openDeleteDialog}\r\n                    onClose={this.handleCloseDelete}\r\n                    aria-labelledby='delete-dialog-title'>\r\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText>\r\n                            {count === 1\r\n                                ? 'Do you want to delete this message?'\r\n                                : `Do you want to delete ${count} messages?`}\r\n                        </DialogContentText>\r\n                        { isSupergroup(chatId) ? (\r\n                            <DialogContentText>\r\n                                { !isChannelChat(chatId) && (count === 1\r\n                                    ? 'This will delete it for everyone in this chat'\r\n                                    : 'This will delete them for everyone in this chat')\r\n                                }\r\n                            </DialogContentText>\r\n                        ) : (\r\n                            <>\r\n                                {\r\n                                    canBeDeletedForAllUsers && (\r\n                                    <FormControlLabel\r\n                                    control={\r\n                                        <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\r\n                                    }\r\n                                    label={\r\n                                        isPrivateChat(chatId)\r\n                                            ? `Delete for ${getChatShortTitle(chatId, false, t)}`\r\n                                            : 'Delete for all'\r\n                                    }\r\n                                    />\r\n                                )}\r\n                            </>\r\n                        )}\r\n\r\n\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleCloseDelete} color='primary'>\r\n                            {t('Cancel')}\r\n                        </Button>\r\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\r\n                            {t('Ok')}\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTranslation()(Header);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\r\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\r\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\r\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport { PLAYER_VOLUME_NORMAL } from '../../Constants';\r\nimport PlayerStore from '../../Stores/PlayerStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './VolumeButton.css';\r\n\r\nclass VolumeButton extends React.Component {\r\n    state = {\r\n        anchorEl: null,\r\n        value: PlayerStore.volume,\r\n        prevValue: PlayerStore.volume,\r\n        dragging: false,\r\n        buttonOver: false,\r\n        popupOver: false\r\n    };\r\n\r\n    componentDidMount() {\r\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\r\n    }\r\n\r\n    onClientUpdateMediaVolume = update => {\r\n        const { volume, prevVolume } = update;\r\n\r\n        if (prevVolume === undefined) {\r\n            this.setState({ value: volume });\r\n        } else {\r\n            this.setState({ value: volume, prevValue: prevVolume });\r\n        }\r\n    };\r\n\r\n    handlePopoverOpen = anchorEl => {\r\n        this.setState({ anchorEl: anchorEl });\r\n    };\r\n\r\n    handlePopoverClose = () => {\r\n        const { dragging, buttonOver, popupOver } = this.state;\r\n\r\n        if (dragging) return;\r\n        if (buttonOver) return;\r\n        if (popupOver) return;\r\n\r\n        this.setState({ anchorEl: null });\r\n    };\r\n\r\n    handleMouseEnter = (event, openPopover) => {\r\n        this.setState({ buttonOver: true });\r\n\r\n        if (openPopover) {\r\n            this.handlePopoverOpen(event.currentTarget);\r\n        }\r\n    };\r\n\r\n    handleMouseLeave = () => {\r\n        this.setState({ buttonOver: false }, () => {\r\n            this.handlePopoverClose();\r\n        });\r\n    };\r\n\r\n    handlePopupMouseLeave = () => {\r\n        this.setState({ popupOver: false }, () => {\r\n            this.handlePopoverClose();\r\n        });\r\n    };\r\n\r\n    handleVoiceClick = () => {\r\n        const { value, prevValue } = this.state;\r\n        const nextValue = value > 0 ? 0 : prevValue || PLAYER_VOLUME_NORMAL;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaVolume',\r\n            volume: nextValue\r\n        });\r\n    };\r\n\r\n    handleChange = (event, value) => {\r\n        const { dragging, prevValue } = this.state;\r\n\r\n        if (dragging) {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateMediaVolume',\r\n                volume: value\r\n            });\r\n        } else {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateMediaVolume',\r\n                prevVolume: value > 0 ? value : prevValue,\r\n                volume: value\r\n            });\r\n        }\r\n    };\r\n\r\n    handleDragStart = () => {\r\n        const { value } = this.state;\r\n\r\n        this.setState({\r\n            dragging: true,\r\n            prevValue: value\r\n        });\r\n    };\r\n\r\n    handleDragEnd = () => {\r\n        const { value, prevValue } = this.state;\r\n\r\n        this.setState(\r\n            {\r\n                dragging: false,\r\n                prevValue: value > 0 ? value : prevValue\r\n            },\r\n            () => {\r\n                this.handlePopoverClose();\r\n            }\r\n        );\r\n    };\r\n\r\n    getVolumeIcon = value => {\r\n        if (value === 0) {\r\n            return <VolumeOffIcon fontSize='small' />;\r\n        }\r\n\r\n        if (value < 0.25) {\r\n            return <VolumeMuteIcon fontSize='small' />;\r\n        }\r\n\r\n        if (value < 0.5) {\r\n            return <VolumeDownIcon fontSize='small' />;\r\n        }\r\n\r\n        return <VolumeUpIcon fontSize='small' />;\r\n    };\r\n\r\n    render() {\r\n        const { anchorEl, value } = this.state;\r\n        const open = Boolean(anchorEl);\r\n\r\n        return (\r\n            <div\r\n                onMouseEnter={e => this.handleMouseEnter(e, true)}\r\n                onMouseLeave={this.handleMouseLeave}\r\n                style={{\r\n                    position: 'relative',\r\n                    background: 'transparent'\r\n                }}>\r\n                <IconButton className='header-player-button' color='primary' onClick={this.handleVoiceClick}>\r\n                    {this.getVolumeIcon(value)}\r\n                </IconButton>\r\n                <div\r\n                    style={{\r\n                        position: 'absolute',\r\n                        background: 'transparent',\r\n                        visibility: open ? 'visible' : 'hidden',\r\n                        zIndex: 1\r\n                    }}\r\n                    onMouseEnter={e => this.handleMouseEnter(e, false)}\r\n                    onMouseLeave={this.handlePopupMouseLeave}>\r\n                    <div className='volume-button-panel'>\r\n                        <Slider\r\n                            min={0}\r\n                            max={1}\r\n                            step={0.01}\r\n                            value={value}\r\n                            onChange={this.handleChange}\r\n                            onDragStart={this.handleDragStart}\r\n                            onDragEnd={this.handleDragEnd}\r\n                            orientation='vertical'\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default VolumeButton;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport RepeatIcon from '@material-ui/icons/Repeat';\r\nimport RepeatOneIcon from '@material-ui/icons/RepeatOne';\r\nimport PlayerStore, { RepeatEnum } from '../../Stores/PlayerStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\n\r\nclass RepeatButton extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { repeat } = PlayerStore;\r\n\r\n        this.state = {\r\n            repeat\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        PlayerStore.on('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        PlayerStore.off('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\r\n    }\r\n\r\n    onClientUpdateMediaRepeat = update => {\r\n        const { repeat } = update;\r\n\r\n        this.setState({ repeat });\r\n    };\r\n\r\n    handleRepeat = () => {\r\n        const { repeat } = this.state;\r\n\r\n        let nextRepeat = repeat;\r\n        switch (repeat) {\r\n            case RepeatEnum.NONE: {\r\n                nextRepeat = RepeatEnum.REPEAT;\r\n                break;\r\n            }\r\n            case RepeatEnum.REPEAT: {\r\n                nextRepeat = RepeatEnum.REPEAT_ONE;\r\n                break;\r\n            }\r\n            case RepeatEnum.REPEAT_ONE: {\r\n                nextRepeat = RepeatEnum.NONE;\r\n                break;\r\n            }\r\n        }\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaRepeat',\r\n            repeat: nextRepeat\r\n        });\r\n    };\r\n\r\n    getIcon = repeat => {\r\n        switch (repeat) {\r\n            case RepeatEnum.NONE: {\r\n                return <RepeatIcon fontSize='small' />;\r\n            }\r\n            case RepeatEnum.REPEAT: {\r\n                return <RepeatIcon fontSize='small' />;\r\n            }\r\n            case RepeatEnum.REPEAT_ONE: {\r\n                return <RepeatOneIcon fontSize='small' />;\r\n            }\r\n            default: {\r\n                return <RepeatIcon fontSize='small' />;\r\n            }\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { repeat } = this.state;\r\n\r\n        return (\r\n            <IconButton\r\n                className='header-player-button'\r\n                color={repeat === RepeatEnum.NONE ? 'default' : 'primary'}\r\n                onClick={this.handleRepeat}>\r\n                {this.getIcon(repeat)}\r\n            </IconButton>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RepeatButton;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\r\nimport PlayerStore from '../../Stores/PlayerStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\n\r\nclass ShuffleButton extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { shuffle } = PlayerStore;\r\n\r\n        this.state = {\r\n            shuffle\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        PlayerStore.on('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        PlayerStore.off('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\r\n    }\r\n\r\n    onClientUpdateMediaShuffle = update => {\r\n        const { shuffle } = update;\r\n\r\n        this.setState({ shuffle });\r\n    };\r\n\r\n    handleShuffle = () => {\r\n        const { shuffle } = this.state;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaShuffle',\r\n            shuffle: !shuffle\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { shuffle } = this.state;\r\n\r\n        return (\r\n            <IconButton\r\n                className='header-player-button'\r\n                color={!shuffle ? 'default' : 'primary'}\r\n                onClick={this.handleShuffle}>\r\n                <ShuffleIcon fontSize='small' />\r\n            </IconButton>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ShuffleButton;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL } from '../../Constants';\r\nimport PlayerStore from '../../Stores/PlayerStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\n\r\nclass PlaybackRateButton extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { audioPlaybackRate, playbackRate } = PlayerStore;\r\n\r\n        this.state = {\r\n            audioPlaybackRate,\r\n            playbackRate\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\r\n        PlayerStore.on('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\r\n        PlayerStore.off('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\r\n    }\r\n\r\n    onClientUpdateMediaPlaybackRate = update => {\r\n        const { playbackRate } = update;\r\n\r\n        this.setState({ playbackRate });\r\n    };\r\n\r\n    onClientUpdateMediaAudioPlaybackRate = update => {\r\n        const { audioPlaybackRate } = update;\r\n\r\n        this.setState({ audioPlaybackRate });\r\n    };\r\n\r\n    handlePlaybackRate = () => {\r\n        const { audio } = this.props;\r\n        const { audioPlaybackRate, playbackRate } = this.state;\r\n\r\n        const rate = audio ? audioPlaybackRate : playbackRate;\r\n        const nextRate = rate === PLAYER_PLAYBACKRATE_NORMAL\r\n            ? PLAYER_PLAYBACKRATE_FAST\r\n            : PLAYER_PLAYBACKRATE_NORMAL;\r\n\r\n        if (audio) {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateMediaAudioPlaybackRate',\r\n                audioPlaybackRate: nextRate\r\n            });\r\n        } else {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateMediaPlaybackRate',\r\n                playbackRate: nextRate\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { audio } = this.props;\r\n        const { audioPlaybackRate, playbackRate } = this.state;\r\n\r\n        const rate = audio ? audioPlaybackRate : playbackRate;\r\n\r\n        return (\r\n            <IconButton\r\n                className='header-player-button'\r\n                color={rate > PLAYER_PLAYBACKRATE_NORMAL ? 'primary' : 'default'}\r\n                onClick={this.handlePlaybackRate}>\r\n                <div className='header-player-playback-icon'>2X</div>\r\n            </IconButton>\r\n        );\r\n    }\r\n}\r\n\r\nPlaybackRateButton.defaultProps = {\r\n    audio: false\r\n}\r\n\r\nPlaybackRateButton.propTypes = {\r\n    audio: PropTypes.bool\r\n}\r\n\r\nexport default PlaybackRateButton;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { getDurationString } from '../../Utils/Common';\r\nimport PlayerStore from '../../Stores/PlayerStore';\r\nimport './Time.css';\r\n\r\nclass Time extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { duration } = this.props;\r\n\r\n        const currentTime = 0;\r\n        const reverse = false;\r\n\r\n        this.state = {\r\n            reverse,\r\n            currentTime,\r\n            duration,\r\n            currentTimeString: getDurationString(currentTime, duration, reverse),\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        PlayerStore.off('clientUpdateMediaTime', this.onClientUpdateMediaTime);\r\n    }\r\n\r\n    onClientUpdateMediaTime = update => {\r\n        const { currentTime, duration } = update;\r\n        const { reverse } = this.state;\r\n\r\n        this.setState({\r\n            currentTime,\r\n            duration,\r\n            currentTimeString: getDurationString(Math.floor(currentTime || 0), duration, reverse)\r\n        });\r\n    };\r\n\r\n    handleReverse = event => {\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n\r\n        const { currentTime, duration, reverse } = this.state;\r\n\r\n        this.setState({\r\n            reverse: !reverse,\r\n            currentTimeString: getDurationString(Math.floor(currentTime || 0), duration, !reverse)\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { currentTimeString } = this.state;\r\n\r\n        return (\r\n            <div className='header-player-time' onClick={this.handleReverse}>\r\n                {currentTimeString}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Time;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport * as ReactDOM from 'react-dom';\r\nimport MediaAudio from '../Message/Media/Audio';\r\nimport MediaVoiceNote from '../Message/Media/VoiceNote';\r\nimport { openMedia } from '../../Utils/Message';\r\nimport { getMedia } from '../../Utils/Media';\r\nimport { isCurrentSource, playlistItemEquals } from '../../Utils/Player';\r\nimport { openInstantViewMedia } from '../../Utils/InstantView';\r\nimport { SCROLL_PRECISION } from '../../Constants';\r\nimport PlayerStore from '../../Stores/PlayerStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './Playlist.css';\r\n\r\nclass Playlist extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.listRef = React.createRef();\r\n        this.itemRefMap = new Map();\r\n\r\n        const { message, block, playlist } = PlayerStore;\r\n        this.state = {\r\n            message,\r\n            block,\r\n            playlist,\r\n\r\n            open: false,\r\n            titleMouseOver: false,\r\n            playlistMouseOver: false\r\n        };\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { open } = this.state;\r\n\r\n        if (!prevState.open && open) {\r\n            this.scrollToActive();\r\n        }\r\n    }\r\n\r\n    scrollToActive = () => {\r\n        const list = this.listRef.current;\r\n        if (!list) return;\r\n\r\n        const { playlist, message, block } = this.state;\r\n        if (!message && !block) return;\r\n        if (!playlist) return;\r\n\r\n        const index = [...playlist.items]\r\n            .reverse()\r\n            .findIndex(x => playlistItemEquals(x, message || block));\r\n        if (index === -1) return;\r\n\r\n        const item = this.itemRefMap.get(index);\r\n        if (!item) return;\r\n\r\n        const node = ReactDOM.findDOMNode(item);\r\n        if (!node) return;\r\n\r\n        list.scrollTop = node.offsetTop - 15;\r\n    };\r\n\r\n    componentDidMount() {\r\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\r\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\r\n        PlayerStore.on('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\r\n        PlayerStore.on('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\r\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\r\n        PlayerStore.off('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\r\n        PlayerStore.off('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\r\n    }\r\n\r\n    onClientUpdateMediaTitleMouseOver = update => {\r\n        const { over } = update;\r\n\r\n        if (over) {\r\n            this.setState(\r\n                {\r\n                    playlistMouseOver: over\r\n                },\r\n                () => {\r\n                    this.tryOpen();\r\n                }\r\n            );\r\n        } else {\r\n            this.setState(\r\n                {\r\n                    playlistMouseOver: over\r\n                },\r\n                () => {\r\n                    this.tryClose();\r\n                }\r\n            );\r\n        }\r\n    };\r\n\r\n    onClientUpdateMediaActive = update => {\r\n        const { source } = update;\r\n\r\n        switch (source['@type']) {\r\n            case 'message': {\r\n\r\n                this.setState({\r\n                    message: source,\r\n                    block: null\r\n                })\r\n                break;\r\n            }\r\n            case 'instantViewSource': {\r\n\r\n                this.setState({\r\n                    message: null,\r\n                    block: source.block\r\n                });\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    onClientUpdateMediaPlaylistLoading = update => {\r\n        const { message, block } = this.state;\r\n        const { source } = update;\r\n\r\n        const chatId = message ? message.chat_id : 0;\r\n        const messageId = message ? message.id : 0;\r\n\r\n        if (isCurrentSource(chatId, messageId, block, source)) {\r\n            this.setState({\r\n                playlist: null\r\n            });\r\n        }\r\n    };\r\n\r\n    onClientUpdateMediaPlaylist = update => {\r\n        const { message, block } = this.state;\r\n        const { source, playlist } = update;\r\n\r\n        const chatId = message ? message.chat_id : 0;\r\n        const messageId = message ? message.id : 0;\r\n\r\n        if (isCurrentSource(chatId, messageId, block, source)) {\r\n            this.setState({\r\n                playlist\r\n            });\r\n        }\r\n    };\r\n\r\n    tryOpen = () => {\r\n        clearTimeout(this.openTimeout);\r\n\r\n        this.openTimeout = setTimeout(() => {\r\n            const { titleMouseOver, playlistMouseOver } = this.state;\r\n            this.setState({\r\n                open: titleMouseOver || playlistMouseOver\r\n            });\r\n        }, 250);\r\n    };\r\n\r\n    tryClose = () => {\r\n        clearTimeout(this.timeout);\r\n\r\n        this.timeout = setTimeout(() => {\r\n            const { titleMouseOver, playlistMouseOver } = this.state;\r\n            this.setState({\r\n                open: titleMouseOver || playlistMouseOver\r\n            });\r\n        }, 250);\r\n    };\r\n\r\n    handleMouseEnter = () => {\r\n        this.setState({\r\n            playlistMouseOver: true,\r\n            open: true\r\n        });\r\n    };\r\n\r\n    handleMouseLeave = () => {\r\n        this.setState(\r\n            {\r\n                playlistMouseOver: false\r\n            },\r\n            () => {\r\n                this.tryClose();\r\n            }\r\n        );\r\n    };\r\n\r\n    handleScroll = () => {\r\n        const list = this.listRef.current;\r\n        if (!list) return;\r\n\r\n        if (list.scrollTop <= SCROLL_PRECISION) {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateMediaPlaylistNext'\r\n            });\r\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateMediaPlaylistPrev'\r\n            });\r\n        }\r\n    };\r\n\r\n    getPageBlock(block, instantView) {\r\n        if (!block) return null;\r\n\r\n        let element = null;\r\n        switch (block['@type']) {\r\n            case 'pageBlockAudio': {\r\n                element = (\r\n                    <MediaAudio\r\n                        block={block}\r\n                        audio={block.audio}\r\n                        openMedia={() => openInstantViewMedia(block.audio, block.caption, block, instantView, true)} />\r\n                );\r\n                break;\r\n            }\r\n            case 'pageBlockVoiceNote': {\r\n                element = (\r\n                    <MediaVoiceNote\r\n                        block={block}\r\n                        voiceNote={block.voice_note}\r\n                        openMedia={() => openInstantViewMedia(block.voice_note, block.caption, block, instantView, true)} />\r\n                );\r\n                break;\r\n            }\r\n        }\r\n\r\n        return element;\r\n    }\r\n\r\n    render() {\r\n        const { open, playlist } = this.state;\r\n\r\n        if (!open) return null;\r\n        if (!playlist) return null;\r\n\r\n        const { items } = playlist;\r\n        if (!items) return null;\r\n        if (items.length <= 1) return null;\r\n\r\n        this.itemRefMap.clear();\r\n\r\n        let iv = null;\r\n        if (items[0]['@type'] === 'instantViewSource') {\r\n            iv = playlist.source.instantView;\r\n        }\r\n\r\n        const getMediaFunc = items[0]['@type'] === 'message'\r\n            ? x => getMedia(x, () => openMedia(x.chat_id, x.id))\r\n            : x => this.getPageBlock(x, iv)\r\n\r\n        return (\r\n            <div className='playlist'>\r\n                <div className='playlist-wrapper'>\r\n                    <div\r\n                        ref={this.listRef}\r\n                        className='playlist-items'\r\n                        onMouseEnter={this.handleMouseEnter}\r\n                        onMouseLeave={this.handleMouseLeave}\r\n                        onScroll={this.handleScroll}>\r\n                        {[...items]\r\n                            .reverse()\r\n                            .map((x, index) => (\r\n                                <div key={x.id || index} ref={el => this.itemRefMap.set(index, el)} className='playlist-item'>\r\n                                    {getMediaFunc(x)}\r\n                                </div>\r\n                            ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nPlaylist.propTypes = {\r\n\r\n};\r\n\r\nexport default Playlist;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport { loadInstantViewContent } from '../Utils/File';\r\nimport { setInstantViewContent } from './Client';\r\nimport TdLibController from '../Controllers/TdLibController';\r\n\r\nexport function openMediaInstantView(instantView, block) {\r\n    const url = urlCache.get(instantView);\r\n    if (!url) return;\r\n\r\n    console.log('[IV] open', instantView);\r\n    loadInstantViewContent(instantView);\r\n    setInstantViewContent({ instantView, block, url });\r\n}\r\n\r\nlet timestamp = null;\r\n\r\nconst ivCache = new Map();\r\nconst urlCache = new Map();\r\n\r\nexport async function openInstantView(url) {\r\n    try {\r\n        let result = null;\r\n        if (ivCache.has(url)) {\r\n            result = ivCache.get(url);\r\n        } else {\r\n            const now = (timestamp = new Date());\r\n            result = await TdLibController.send({\r\n                '@type': 'getWebPageInstantView',\r\n                url,\r\n                force_full: true\r\n            });\r\n            ivCache.set(url, result);\r\n            urlCache.set(result, url);\r\n            if (timestamp !== now) return;\r\n        }\r\n\r\n        console.log('[IV] open', result);\r\n        loadInstantViewContent(result);\r\n        setInstantViewContent({ instantView: result, url });\r\n    } catch {\r\n        const newWindow = window.open();\r\n        newWindow.opener = null;\r\n        newWindow.location = url;\r\n    }\r\n}\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport PlayArrowIcon from '../../Assets/Icons/PlayArrow';\r\nimport PauseIcon from '../../Assets/Icons/Pause';\r\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\r\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport VolumeButton from '../Player/VolumeButton';\r\nimport RepeatButton from '../Player/RepeatButton';\r\nimport ShuffleButton from '../Player/ShuffleButton';\r\nimport PlaybackRateButton from './PlaybackRateButton';\r\nimport Time from '../Player/Time';\r\nimport Playlist from '../Player/Playlist';\r\nimport { supportsStreaming } from '../../Utils/File';\r\nimport { openChat } from '../../Actions/Client';\r\nimport { getDate, getDateHint, getMessageAudio, hasAudio, hasVoice, useAudioPlaybackRate } from '../../Utils/Message';\r\nimport { getCurrentTime, getMediaTitle, getMediaMimeType, getMediaSrc, isCurrentSource, playlistItemEquals } from '../../Utils/Player';\r\nimport { openMediaInstantView } from '../../Actions/InstantView';\r\nimport { clamp } from '../../Utils/Common';\r\nimport { PLAYER_PLAYBACKRATE_NORMAL, PLAYER_SEEK_STEP_BIG } from '../../Constants';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport PlayerStore from '../../Stores/PlayerStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './HeaderPlayer.css';\r\n\r\nclass HeaderPlayer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.videoRef = React.createRef();\r\n\r\n        const { message, block, instantView, playlist } = PlayerStore;\r\n        const { currentTime, duration } = getCurrentTime(message);\r\n\r\n        this.state = {\r\n            currentTime,\r\n            duration,\r\n            message,\r\n            block,\r\n            instantView,\r\n            playlist,\r\n            playing: false,\r\n            src: getMediaSrc(message),\r\n            mimeType: getMediaMimeType(message)\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { message, block, playlist, src, playing } = this.state;\r\n\r\n        if (nextState.block !== block) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.message !== message) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.playlist !== playlist) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.src !== src) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.playing !== playing) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.addMediaSessionHandlers();\r\n\r\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\r\n        FileStore.on('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\r\n        MessageStore.on('clientUpdateRecordStart', this.onClientUpdateRecordStart);\r\n        MessageStore.on('clientUpdateRecordStop', this.onClientUpdateRecordStop);\r\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\r\n        PlayerStore.on('clientUpdateMediaClose', this.onClientUpdateMediaClose);\r\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\r\n        PlayerStore.on('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\r\n        PlayerStore.on('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\r\n        PlayerStore.on('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\r\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\r\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\r\n        PlayerStore.on('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\r\n        PlayerStore.on('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.removeMediaSessionHandlers();\r\n\r\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\r\n        FileStore.off('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.off('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.off('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\r\n        MessageStore.off('clientUpdateRecordStart', this.onClientUpdateRecordStart);\r\n        MessageStore.off('clientUpdateRecordStop', this.onClientUpdateRecordStop);\r\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\r\n        PlayerStore.off('clientUpdateMediaClose', this.onClientUpdateMediaClose);\r\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\r\n        PlayerStore.off('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\r\n        PlayerStore.off('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\r\n        PlayerStore.off('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\r\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\r\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\r\n        PlayerStore.off('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\r\n        PlayerStore.off('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\r\n    }\r\n\r\n    addMediaSessionHandlers() {\r\n        const { mediaSession } = navigator;\r\n        if (!mediaSession) return;\r\n\r\n        try {\r\n            mediaSession.setActionHandler('nexttrack', this.handleNext);\r\n            mediaSession.setActionHandler('previoustrack', this.handlePrev);\r\n            mediaSession.setActionHandler('seekforward', this.handleSeekForward);\r\n            mediaSession.setActionHandler('seekbackward', this.handleSeekBackward);\r\n            mediaSession.setActionHandler('seekto', this.handleSeekTo);\r\n        } catch {\r\n\r\n        }\r\n    }\r\n\r\n    handleSeekForward = () => {\r\n        const video = this.videoRef.current;\r\n        if (!video) return;\r\n\r\n        this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_BIG);\r\n    };\r\n\r\n    handleSeekBackward = () => {\r\n        const video = this.videoRef.current;\r\n        if (!video) return;\r\n\r\n        this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_BIG);\r\n    };\r\n\r\n    handleSeekTo = event => {\r\n        const video = this.videoRef.current;\r\n        if (!video) return;\r\n\r\n        this.handleSeek(event.seekTime);\r\n    };\r\n\r\n    handleSeek = currentTime => {\r\n        const video = this.videoRef.current;\r\n        if (!video) return;\r\n\r\n        currentTime = clamp(currentTime, 0, video.duration || 0);\r\n\r\n        video.currentTime = currentTime;\r\n    };\r\n\r\n    removeMediaSessionHandlers() {\r\n        const { mediaSession } = navigator;\r\n        if (!mediaSession) return;\r\n\r\n        try{\r\n            mediaSession.setActionHandler('nexttrack', null);\r\n            mediaSession.setActionHandler('previoustrack', null);\r\n            mediaSession.setActionHandler('seekforward', null);\r\n            mediaSession.setActionHandler('seekbackward', null);\r\n            mediaSession.setActionHandler('seekto', null);\r\n        }catch {\r\n\r\n        }\r\n    }\r\n\r\n    fadeOutVolume(duration) {\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        const totalIterations = 20;\r\n        let count = 0;\r\n        const currentVolume = player.volume;\r\n        this.volumeInterval = setInterval(() => {\r\n            if (count >= totalIterations) {\r\n                player.pause();\r\n                player.volume = currentVolume;\r\n                clearInterval(this.volumeInterval);\r\n            } else {\r\n                player.volume = currentVolume / (count + 1);\r\n                count++;\r\n            }\r\n        }, duration / totalIterations);\r\n    }\r\n\r\n    fadeInVolume(duration) {\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        const totalIterations = 20;\r\n        let count = 0;\r\n        const currentVolume = player.volume;\r\n        player.volume = 0;\r\n        player.play();\r\n        this.volumeInterval = setInterval(() => {\r\n            if (count >= totalIterations) {\r\n                player.volume = currentVolume;\r\n                clearInterval(this.volumeInterval);\r\n            } else {\r\n                player.volume = currentVolume / totalIterations * (count + 1);\r\n                count++;\r\n            }\r\n        }, duration / totalIterations);\r\n    }\r\n\r\n    onClientUpdateRecordStart = update => {\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        if (!player.paused) {\r\n            this.fadeOutVolume(250);\r\n            this.pausedForRecord = true;\r\n        }\r\n    };\r\n\r\n    onClientUpdateRecordStop = update => {\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        if (player.paused && this.pausedForRecord) {\r\n            this.fadeInVolume(250);\r\n            this.pausedForRecord = false;\r\n        }\r\n    };\r\n\r\n    onClientUpdateMediaPlaybackRate = update => {\r\n        const { playbackRate } = update;\r\n\r\n        const { message, block } = this.state;\r\n        if (!message && !block) return;\r\n\r\n        const audio = hasAudio(message || block);\r\n        if (audio) return;\r\n\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        player.playbackRate = playbackRate;\r\n    };\r\n\r\n    onClientUpdateMediaAudioPlaybackRate = update => {\r\n        const { audioPlaybackRate } = update;\r\n\r\n        const { message, block } = this.state;\r\n        if (!message && !block) return;\r\n\r\n        if (!hasAudio(message || block)) return;\r\n        if (!useAudioPlaybackRate(message || block)) return;\r\n\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        player.playbackRate = audioPlaybackRate;\r\n    };\r\n\r\n    onClientUpdateMediaVolume = update => {\r\n        const { volume } = update;\r\n\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        player.volume = volume;\r\n    };\r\n\r\n    onClientUpdateMediaSeek = update => {\r\n        const { source, value, duration } = update;\r\n        const { message, block } = this.state;\r\n\r\n        if (!isCurrentSource(message? message.chat_id : 0, message? message.id : 0, block, source)) return;\r\n\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n        if (!player.duration) {\r\n            this.currentValue = { value, duration };\r\n            return;\r\n        }\r\n\r\n        player.currentTime = value * player.duration;\r\n    };\r\n\r\n    onClientUpdateMediaViewerContent = update => {\r\n        this.playingMediaViewer = Boolean(AppStore.mediaViewerContent);\r\n    };\r\n\r\n    onClientUpdateMediaViewerEnded = update => {\r\n        this.playingMediaViewer = false;\r\n    };\r\n\r\n    onClientUpdateMediaViewerPause = update => {\r\n        this.playingMediaViewer = false;\r\n    };\r\n\r\n    onClientUpdateMediaViewerPlay = update => {\r\n        this.playingMediaViewer = true;\r\n\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        this.fadeOutVolume(250);\r\n    };\r\n\r\n    startPlayingFile = source => {\r\n        if (!source) return;\r\n\r\n        const { playlist } = PlayerStore;\r\n        const { src: prevSrc } = this.state;\r\n\r\n        const src = getMediaSrc(source);\r\n        const mimeType = getMediaMimeType(source);\r\n        const { currentTime, duration } = getCurrentTime(source);\r\n        const playing = Boolean(src);\r\n\r\n        const srcSource = source['@type'] === 'instantViewSource'\r\n            ? { message: null, block: source.block, instantView: source.instantView }\r\n            : { message: source, block: null, instantView: null };\r\n\r\n        this.setState(\r\n            {\r\n                currentTime,\r\n                duration,\r\n                playlist,\r\n                playing,\r\n                src,\r\n                ...srcSource,\r\n                mimeType\r\n            },\r\n            () => {\r\n                const player = this.videoRef.current;\r\n                if (!player) return;\r\n\r\n                if (prevSrc !== src) {\r\n                    player.load();\r\n                    if (this.currentValue) {\r\n                        player.currentTime = this.currentValue.value * this.currentValue.duration;\r\n                        this.currentValue = null;\r\n                    } else {\r\n                        player.currentTime = currentTime;\r\n                    }\r\n                }\r\n\r\n                if (this.playingMediaViewer) {\r\n                    player.pause();\r\n\r\n                    TdLibController.clientUpdate({\r\n                        '@type': 'clientUpdateMediaPause',\r\n                        source\r\n                    });\r\n                } else if (player.paused) {\r\n                    player.play();\r\n                }\r\n            }\r\n        );\r\n    };\r\n\r\n    onClientUpdateMediaBlob = update => {\r\n        const { chatId, messageId, fileId } = update;\r\n        const { message, block, instantView } = this.state;\r\n\r\n        if (message) {\r\n            const { chat_id, id, content } = message;\r\n            if (!content) return;\r\n            if (chatId !== chat_id || messageId !== id) return;\r\n\r\n            let startPlaying = false;\r\n            switch (content['@type']) {\r\n                case 'messageText': {\r\n                    const { web_page } = content;\r\n                    if (web_page) {\r\n                        const { audio, voice_note, video_note } = web_page;\r\n\r\n                        if (audio) {\r\n                            if (supportsStreaming()) return;\r\n\r\n                            const { audio: file } = audio;\r\n                            if (file) {\r\n                                startPlaying = true;\r\n                                break;\r\n                            }\r\n                        }\r\n\r\n                        if (voice_note) {\r\n                            const { voice } = voice_note;\r\n                            if (voice) {\r\n                                startPlaying = true;\r\n                                break;\r\n                            }\r\n                        }\r\n\r\n                        if (video_note) {\r\n                            const { video } = video_note;\r\n                            if (video) {\r\n                                startPlaying = true;\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    break;\r\n                }\r\n                case 'messageAudio': {\r\n                    const { audio } = content;\r\n                    if (audio) {\r\n                        if (supportsStreaming()) return;\r\n\r\n                        const { audio: file } = audio;\r\n                        if (file) {\r\n                            startPlaying = true;\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    break;\r\n                }\r\n                case 'messageVoiceNote': {\r\n                    const { voice_note } = content;\r\n                    if (voice_note) {\r\n                        const { voice } = voice_note;\r\n                        if (voice) {\r\n                            startPlaying = true;\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    break;\r\n                }\r\n                case 'messageVideoNote': {\r\n                    const { video_note } = content;\r\n                    if (video_note) {\r\n                        const { video } = video_note;\r\n                        if (video) {\r\n                            startPlaying = true;\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (startPlaying) {\r\n                this.startPlayingFile(message);\r\n            }\r\n        } else if (block) {\r\n            let startPlaying = false;\r\n            switch (block['@type']) {\r\n                case 'pageBlockAudio': {\r\n                    const { audio } = block;\r\n                    if (audio) {\r\n                        if (supportsStreaming()) return;\r\n\r\n                        const { audio: file } = audio;\r\n                        if (file && file.id === fileId) {\r\n                            startPlaying = true;\r\n                        }\r\n                    }\r\n\r\n                    break;\r\n                }\r\n                case 'pageBlockVoiceNote': {\r\n                    const { voice_note } = block;\r\n                    if (voice_note) {\r\n                        const { voice: file } = voice_note;\r\n                        if (file && file.id === fileId) {\r\n                            startPlaying = true;\r\n                        }\r\n                    }\r\n\r\n                    break;\r\n                }\r\n                case 'pageBlockVideoNote': {\r\n                    const { video_note } = block;\r\n                    if (video_note) {\r\n                        const { video: file } = video_note;\r\n                        if (file && file.id === fileId) {\r\n                            startPlaying = true;\r\n                        }\r\n                    }\r\n\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (startPlaying) {\r\n                this.startPlayingFile({ '@type': 'instantViewSource', block, instantView });\r\n            }\r\n        }\r\n    };\r\n\r\n    onClientUpdateMediaPlaylist = update => {\r\n        const { playlist, source } = update;\r\n        const { message, block } = this.state;\r\n\r\n        const chatId = message ? message.chat_id : 0;\r\n        const messageId = message ? message.id : 0;\r\n\r\n        if (isCurrentSource(chatId, messageId, block, source)) {\r\n            this.setState({ playlist });\r\n        }\r\n    };\r\n\r\n    onClientUpdateMediaClose = update => {\r\n        this.setState({\r\n            message: null,\r\n            block: null,\r\n            instantView: null,\r\n            playlist: null,\r\n            playing: false,\r\n            src: null,\r\n            mimeType: null\r\n        }, () => {\r\n            const player = this.videoRef.current;\r\n            if (!player) return;\r\n\r\n            player.load();\r\n        });\r\n    };\r\n\r\n    onClientUpdateMediaActive = update => {\r\n        const { source } = update;\r\n        const { message, block, src } = this.state;\r\n\r\n        if (isCurrentSource(message ? message.chat_id : 0, message ? message.id : 0, block, source)) {\r\n            if (!src) return;\r\n\r\n            const player = this.videoRef.current;\r\n            if (!player) return;\r\n\r\n            this.pausedForRecord = false;\r\n            if (player.paused) {\r\n                player.play();\r\n            } else {\r\n                player.pause();\r\n            }\r\n        } else {\r\n            this.startPlayingFile(source);\r\n        }\r\n    };\r\n\r\n    handlePrev = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaPrev'\r\n        });\r\n    };\r\n\r\n    handlePlay = () => {\r\n        const { message, block, instantView } = this.state;\r\n        if (!message && !block) return;\r\n\r\n        const source = message || { '@type': 'instantViewSource', block, instantView };\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaActive',\r\n            source\r\n        });\r\n    };\r\n\r\n    handleNext = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaNext'\r\n        });\r\n    };\r\n\r\n    handleEnded = (moveNext = true) => {\r\n        const { message, block, instantView } = this.state;\r\n        if (!message && !block) return;\r\n\r\n        const source = message || { '@type': 'instantViewSource', block, instantView };\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaEnding',\r\n            source,\r\n            moveNext\r\n        });\r\n\r\n        this.setState(\r\n            {\r\n                //playing: false,\r\n                //message: null,\r\n                //src: null\r\n            },\r\n            () => {\r\n                TdLibController.clientUpdate({\r\n                    '@type': 'clientUpdateMediaEnd',\r\n                    source,\r\n                    moveNext\r\n                });\r\n            }\r\n        );\r\n    };\r\n\r\n    handleVideoEnded = () => {\r\n        const video = this.videoRef.current;\r\n        this.setCurrentTime({ currentTime: 0, duration: video.duration });\r\n\r\n        this.handleEnded(true);\r\n    };\r\n\r\n    handleClose = () => {\r\n        const player = this.videoRef.current;\r\n        if (player) {\r\n            player.pause();\r\n        }\r\n\r\n        this.handleEnded(false);\r\n    };\r\n\r\n    handleLoadedMetadata = () => {\r\n        let { message, block, instantView, currentTime } = this.state;\r\n        if (!message && !block) return;\r\n\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        const { audioPlaybackRate, playbackRate, volume } = PlayerStore;\r\n\r\n        const audio = hasAudio(message || block);\r\n        const voiceNote = hasVoice(message || block);\r\n\r\n        let rate = PLAYER_PLAYBACKRATE_NORMAL;\r\n        if (voiceNote) {\r\n            rate = playbackRate;\r\n        } else if (audio && useAudioPlaybackRate(message || block)) {\r\n            rate = audioPlaybackRate;\r\n        }\r\n\r\n        player.playbackRate = rate;\r\n        player.volume = volume;\r\n        player.muted = false;\r\n        if (this.currentValue) {\r\n            player.currentTime = player.duration * this.currentValue.value;\r\n            this.currentValue = null;\r\n        } else {\r\n            player.currentTime = currentTime;\r\n        }\r\n\r\n        player.play();\r\n\r\n        const { buffered, duration, videoWidth, videoHeight } = player;\r\n        const source = message || { '@type': 'instantViewSource', block, instantView };\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaLoadedMetadata',\r\n            source,\r\n            buffered,\r\n            duration,\r\n            videoWidth,\r\n            videoHeight\r\n        });\r\n\r\n        if (audio) {\r\n            return;\r\n        }\r\n        if (voiceNote) {\r\n            return;\r\n        }\r\n\r\n        let stream = null;\r\n        if ('captureStream' in player) {\r\n            stream = player.captureStream();\r\n        } else if ('mozCaptureStream' in player) {\r\n            stream = player.mozCaptureStream();\r\n        }\r\n\r\n        if (!stream) {\r\n            return;\r\n        }\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaCaptureStream',\r\n            chatId: message.chat_id,\r\n            messageId: message.id,\r\n            stream: stream\r\n        });\r\n    };\r\n\r\n    handleProgress = () => {\r\n        const { message, block, instantView } = this.state;\r\n        if (!message && !block) return;\r\n\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        const { buffered } = player;\r\n\r\n        const source = message || { '@type': 'instantViewSource', block, instantView };\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaProgress',\r\n            source,\r\n            buffered\r\n        });\r\n    }\r\n\r\n    handleTimeUpdate = () => {\r\n        const { message, block, instantView } = this.state;\r\n        if (!message && !block) return;\r\n\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        const { currentTime, buffered, duration } = player;\r\n\r\n        this.setState({ currentTime });\r\n\r\n        const source = message || { '@type': 'instantViewSource', block, instantView };\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaTime',\r\n            source,\r\n            duration,\r\n            currentTime,\r\n            buffered,\r\n            timestamp: Date.now()\r\n        });\r\n\r\n        this.setCurrentTime({ currentTime, duration });\r\n    };\r\n\r\n    handleCanPlay = () => {\r\n\r\n    };\r\n\r\n    handleVideoPlay = () => {\r\n        const { message, block, instantView } = this.state;\r\n        if (!message && !block) return;\r\n\r\n        this.setState({ playing: true });\r\n\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        const { currentTime, duration } = player;\r\n\r\n        const source = message || { '@type': 'instantViewSource', block, instantView };\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaPlay',\r\n            source,\r\n            currentTime,\r\n            duration,\r\n            timestamp: Date.now()\r\n        });\r\n    };\r\n\r\n    handleVideoPause = () => {\r\n        const { message, block, instantView } = this.state;\r\n        if (!message && !block) return;\r\n\r\n        this.setState({\r\n            playing: false\r\n        });\r\n\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        const source = message || { '@type': 'instantViewSource', block, instantView };\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaPause',\r\n            source\r\n        });\r\n    };\r\n\r\n    hasPrev = (item, playlist) => {\r\n        if (!item) return false;\r\n        if (!playlist || !playlist.items.length) return false;\r\n\r\n        const index = playlist.items.findIndex(x => playlistItemEquals(x, item));\r\n        if (index === -1) return false;\r\n\r\n        return index + 1 < playlist.items.length;\r\n    };\r\n\r\n    hasNext = (item, playlist) => {\r\n        if (!item) return false;\r\n        if (!playlist || !playlist.items.length) return false;\r\n\r\n        const index = playlist.items.findIndex(x => playlistItemEquals(x, item));\r\n        if (index === -1) return false;\r\n\r\n        return index - 1 >= 0;\r\n    };\r\n\r\n    handleTitleMouseEnter = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaTitleMouseOver',\r\n            over: true\r\n        });\r\n    };\r\n\r\n    handleTitleMouseLeave = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaTitleMouseOver',\r\n            over: false\r\n        });\r\n    };\r\n\r\n    handleTitleClick = () => {\r\n        const { message, block, instantView } = this.state;\r\n        if (message) {\r\n            openChat(message.chat_id, message.id);\r\n            return;\r\n        }\r\n\r\n        if (block && instantView) {\r\n            openMediaInstantView(instantView, block);\r\n            return;\r\n        }\r\n    };\r\n\r\n    setCurrentTime = currentTime => {\r\n        const { message, block } = this.state;\r\n        if (!message && !block) return;\r\n\r\n        if (!useAudioPlaybackRate(message || block)) return;\r\n\r\n        const audio = getMessageAudio(message.chat_id, message.id);\r\n        if (!audio) return;\r\n\r\n        const { audio: file } = audio;\r\n        if (!file) return;\r\n\r\n        const { remote } = file;\r\n        if (!remote) return;\r\n\r\n        const { unique_id } = remote;\r\n        if (!unique_id) return;\r\n\r\n        if (!currentTime) {\r\n            PlayerStore.clearCurrentTime(unique_id);\r\n        } else {\r\n            PlayerStore.setCurrentTime(unique_id, currentTime);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        const { playing, message, block, duration, playlist, src, mimeType } = this.state;\r\n\r\n        const audio = hasAudio(message || block);\r\n        const useAudioRate = useAudioPlaybackRate(message || block);\r\n\r\n        const date = message ? message.date : null;\r\n\r\n        const title = getMediaTitle(message || block, t);\r\n        const dateHintStr = getDateHint(date);\r\n        const dateStr = getDate(date);\r\n        const showDate = false; //!audio;\r\n        const showPlaybackRate = !audio || useAudioRate;\r\n        const showRepeat = audio;\r\n        const showShuffle = audio;\r\n        const hasPrev = this.hasPrev(message || block, playlist);\r\n        const hasNext = this.hasNext(message || block, playlist);\r\n\r\n        const source = src ? <source src={src} type={mimeType}/> : null;\r\n\r\n        return (\r\n            <>\r\n                <video\r\n                    className='header-player-video'\r\n                    ref={this.videoRef}\r\n                    autoPlay={true}\r\n                    controls={false}\r\n                    width={44}\r\n                    height={44}\r\n                    disablePictureInPicture={true}\r\n                    onLoadedMetadata={this.handleLoadedMetadata}\r\n                    onCanPlay={this.handleCanPlay}\r\n                    onPlay={this.handleVideoPlay}\r\n                    onPause={this.handleVideoPause}\r\n                    onEnded={this.handleVideoEnded}\r\n                    onTimeUpdate={this.handleTimeUpdate}\r\n                    onProgress={this.handleProgress}\r\n                >\r\n                    {source}\r\n                </video>\r\n                {(message || block) && (\r\n                    <div className='header-player'>\r\n                        <IconButton\r\n                            disabled={!hasPrev}\r\n                            className='header-player-button'\r\n                            color='primary'\r\n                            onClick={this.handlePrev}>\r\n                            <SkipPreviousIcon fontSize='small' />\r\n                        </IconButton>\r\n                        <IconButton\r\n                            className='header-player-button'\r\n                            color='primary'\r\n                            disabled={!src}\r\n                            onClick={this.handlePlay}>\r\n                            {playing ? <PauseIcon /> : <PlayArrowIcon />}\r\n                        </IconButton>\r\n                        <IconButton\r\n                            disabled={!hasNext}\r\n                            className='header-player-button'\r\n                            color='primary'\r\n                            onClick={this.handleNext}>\r\n                            <SkipNextIcon fontSize='small' />\r\n                        </IconButton>\r\n                        <Playlist />\r\n                        <div\r\n                            className='header-player-content'\r\n                            onMouseEnter={this.handleTitleMouseEnter}\r\n                            onMouseLeave={this.handleTitleMouseLeave}\r\n                            onClick={this.handleTitleClick}>\r\n                            <div className='header-player-title'>\r\n                                {title}\r\n                                {showDate && (\r\n                                    <span title={dateHintStr}>\r\n                                        &nbsp;\r\n                                        {dateStr}\r\n                                    </span>\r\n                                )}\r\n                            </div>\r\n                            &nbsp;\r\n                        </div>\r\n                        <Time duration={duration}/>\r\n                        <VolumeButton />\r\n                        {showPlaybackRate && <PlaybackRateButton audio={audio} />}\r\n                        {showRepeat && <RepeatButton />}\r\n                        {showShuffle && <ShuffleButton />}\r\n                        <IconButton className='header-player-button' onClick={this.handleClose}>\r\n                            <CloseIcon fontSize='small' />\r\n                        </IconButton>\r\n                    </div>\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTranslation()(HeaderPlayer);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { getChatUserId } from '../../Utils/Chat';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './ActionBar.css';\r\n\r\nclass ActionBar extends React.Component {\r\n    componentDidMount() {\r\n        ChatStore.on('updateChatActionBar', this.onUpdateChatActionBar);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ChatStore.off('updateChatActionBar', this.onUpdateChatActionBar);\r\n    }\r\n\r\n    onUpdateChatActionBar = update => {\r\n        const { chatId } = this.props;\r\n        const { chat_id } = update;\r\n\r\n        if (chat_id !== chatId) return;\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    handleClose = () => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return null;\r\n\r\n        TdLibController.send({\r\n            '@type': 'removeChatActionBar',\r\n            chat_id: chatId\r\n        });\r\n    };\r\n\r\n    handleReportSpam = () => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return null;\r\n\r\n        TdLibController.send({\r\n            '@type': 'reportChat',\r\n            chat_id: chatId,\r\n            reason: {\r\n                '@type': 'chatReportReasonSpam'\r\n            },\r\n            message_ids: []\r\n        });\r\n    };\r\n\r\n    handleReportUnrelatedLocation = () => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return null;\r\n\r\n        TdLibController.send({\r\n            '@type': 'reportChat',\r\n            chat_id: chatId,\r\n            reason: {\r\n                '@type': 'chatReportReasonUnrelatedLocation'\r\n            },\r\n            message_ids: []\r\n        });\r\n    };\r\n\r\n    handleSharePhoneNumber = () => {\r\n        const { chatId } = this.props;\r\n        const userId = getChatUserId(chatId);\r\n        if (!userId) return;\r\n\r\n        TdLibController.send({\r\n            '@type': 'sharePhoneNumber',\r\n            user_id: userId\r\n        });\r\n    };\r\n\r\n    handleAddContact = () => {\r\n        const { chatId } = this.props;\r\n        const userId = getChatUserId(chatId);\r\n        if (!userId) return;\r\n\r\n        const user = UserStore.get(userId);\r\n        if (!user) return;\r\n\r\n        const { user_id, phone_number, first_name, last_name } = user;\r\n\r\n        TdLibController.send({\r\n            '@type': 'addContact',\r\n            contact: {\r\n                '@type': 'contact',\r\n                phone_number,\r\n                first_name,\r\n                last_name,\r\n                vcard: '',\r\n                user_id\r\n            },\r\n            share_phone_number: false\r\n        });\r\n    };\r\n\r\n    handleBlockUser = () => {\r\n        const { chatId } = this.props;\r\n        const userId = getChatUserId(chatId);\r\n        if (!userId) return;\r\n\r\n        TdLibController.send({\r\n            '@type': 'blockUser',\r\n            user_id: userId\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, t } = this.props;\r\n        if (!chatId) return null;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return null;\r\n\r\n        const { action_bar } = chat;\r\n        if (!action_bar) return null;\r\n\r\n        let content = null;\r\n        switch (action_bar['@type']) {\r\n            case 'chatActionBarSharePhoneNumber': {\r\n                content = (\r\n                    <Button color='primary' className='header-command-button' onClick={this.handleSharePhoneNumber}>\r\n                        {t('ShareMyPhone')}\r\n                    </Button>\r\n                );\r\n                break;\r\n            }\r\n            case 'chatActionBarAddContact': {\r\n                content = (\r\n                    <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\r\n                        {t('AddContactChat')}\r\n                    </Button>\r\n                );\r\n                break;\r\n            }\r\n            case 'chatActionBarReportAddBlock': {\r\n                content = (\r\n                    <>\r\n                        <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\r\n                            {t('AddContactChat')}\r\n                        </Button>\r\n                        <Button color='secondary' className='header-command-button' onClick={this.handleBlockUser}>\r\n                            {t('ReportSpamUser')}\r\n                        </Button>\r\n                    </>\r\n                );\r\n                break;\r\n            }\r\n            case 'chatActionBarUnrelatedLocation': {\r\n                content = (\r\n                    <Button\r\n                        color='secondary'\r\n                        className='header-command-button'\r\n                        onClick={this.handleReportUnrelatedLocation}>\r\n                        {t('ReportSpamLocation')}\r\n                    </Button>\r\n                );\r\n                break;\r\n            }\r\n            case 'chatActionBarReportSpam': {\r\n                content = (\r\n                    <Button color='secondary' className='header-command-button' onClick={this.handleReportSpam}>\r\n                        {t('ReportSpam')}\r\n                    </Button>\r\n                );\r\n                break;\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className='action-bar' onMouseDown={this.handleClick}>\r\n                <div className='action-bar-content'>{content}</div>\r\n                <div className='action-bar-close-button'>\r\n                    <IconButton onClick={this.handleClose}>\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nActionBar.propTypes = {\r\n    chatId: PropTypes.number\r\n};\r\n\r\nexport default withTranslation()(ActionBar);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport LocalizationStore from '../../Stores/LocalizationStore';\r\nimport './DayMeta.css';\r\n\r\nclass DayMeta extends React.Component {\r\n    componentDidMount() {\r\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguage);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguage);\r\n    }\r\n\r\n    onClientUpdateLanguage = () => {\r\n        this.forceUpdate();\r\n    };\r\n\r\n    render() {\r\n        const { date, i18n } = this.props;\r\n\r\n        const showYear = new Date(date * 1000) < new Date().setMonth(new Date().getMonth() - 3);\r\n        const options = showYear\r\n            ? {\r\n                  day: 'numeric',\r\n                  month: 'long',\r\n                  year: 'numeric'\r\n              }\r\n            : {\r\n                  day: 'numeric',\r\n                  month: 'long'\r\n              };\r\n\r\n        return (\r\n            <div className='day-meta'>\r\n                <div className='day-meta-wrapper'>\r\n                    <div>{new Date(date * 1000).toLocaleDateString([i18n.language], options)}</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nDayMeta.propTypes = {\r\n    date: PropTypes.number.isRequired\r\n};\r\n\r\nexport default withTranslation()(DayMeta);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './FilesDropTarget.css';\r\n\r\nclass FilesDropTarget extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { dragParams } = AppStore;\r\n\r\n        this.state = { dragParams };\r\n    }\r\n\r\n    componentDidMount() {\r\n        AppStore.on('clientUpdateDragging', this.onClientUpdateDragging);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('clientUpdateDragging', this.onClientUpdateDragging);\r\n    }\r\n\r\n    onClientUpdateDragging = update => {\r\n        const { dragParams } = AppStore;\r\n\r\n        this.setState({ dragParams });\r\n    };\r\n\r\n    handleDragEnter = event => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n    };\r\n\r\n    handleDrop = event => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateDragging',\r\n            dragging: false\r\n        });\r\n\r\n        this.handleAttachDocumentComplete(event.dataTransfer.files);\r\n    };\r\n\r\n    handleDragLeave = event => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateDragging',\r\n            dragging: false\r\n        });\r\n    };\r\n\r\n    handleAttachDocumentComplete = files => {\r\n        if (files.length === 0) return;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateSendFiles',\r\n            files\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { dragParams } = this.state;\r\n        if (!dragParams) return null;\r\n\r\n        return (\r\n            <div\r\n                className='files-drop-target'\r\n                onDragEnter={this.handleDragEnter}\r\n                onDragLeave={this.handleDragLeave}\r\n                onDrop={this.handleDrop}>\r\n                <div className='files-drop-target-wrapper'>\r\n                    <div className='files-drop-target-text'>\r\n                        <div className='files-drop-target-title'>Drop files here</div>\r\n                        <div className='files-drop-target-subtitle'>to send them</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FilesDropTarget;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport { getForwardTitle, isForwardOriginHidden } from '../../Utils/Message';\r\nimport { openUser, openChat } from '../../Actions/Client';\r\nimport './Forward.css';\r\n\r\nclass Forward extends React.Component {\r\n    state = {\r\n        arrowRef: null\r\n    };\r\n\r\n    handleArrowRef = node => {\r\n        this.setState({\r\n            arrowRef: node\r\n        });\r\n    };\r\n\r\n    openForward = event => {\r\n        event.stopPropagation();\r\n\r\n        const { forwardInfo } = this.props;\r\n        if (!forwardInfo) return null;\r\n\r\n        const { origin } = forwardInfo;\r\n\r\n        switch (origin['@type']) {\r\n            case 'messageForwardOriginUser': {\r\n                const { sender_user_id } = origin;\r\n\r\n                openUser(sender_user_id, true);\r\n                break;\r\n            }\r\n            case 'messageForwardOriginHiddenUser': {\r\n                break;\r\n            }\r\n            case 'messageForwardOriginChannel': {\r\n                const { chat_id, message_id } = origin;\r\n\r\n                openChat(chat_id, message_id);\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { t, forwardInfo } = this.props;\r\n        const { arrowRef } = this.state;\r\n\r\n        const title = getForwardTitle(forwardInfo, t);\r\n        const tooltip = isForwardOriginHidden(forwardInfo) ? (\r\n            <>\r\n                {t('HidAccount')}\r\n                <span className='forward-arrow' ref={this.handleArrowRef} />\r\n            </>\r\n        ) : (\r\n            ''\r\n        );\r\n\r\n        return (\r\n            <div className={classNames('message-author', 'forward')}>\r\n                <div>{t('ForwardedMessage')}</div>\r\n                <div className='forward-subtitle'>\r\n                    {t('From') + ' '}\r\n                    {/*<Tooltip*/}\r\n                    {/*    title={tooltip}*/}\r\n                    {/*    classes={{ popper: 'forward-arrow-popper', tooltip: 'forward-tooltip' }}*/}\r\n                    {/*    PopperProps={{*/}\r\n                    {/*        popperOptions: {*/}\r\n                    {/*            modifiers: {*/}\r\n                    {/*                arrow: {*/}\r\n                    {/*                    enabled: Boolean(arrowRef),*/}\r\n                    {/*                    element: arrowRef*/}\r\n                    {/*                }*/}\r\n                    {/*            }*/}\r\n                    {/*        }*/}\r\n                    {/*    }}*/}\r\n                    {/*    placement='top'>*/}\r\n                        <a onClick={this.openForward}>{title}</a>\r\n                    {/*</Tooltip>*/}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nForward.propTypes = {\r\n    forwardInfo: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withTranslation()(Forward);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport Status from './Status';\r\nimport { getDate, getDateHint, getViews } from '../../Utils/Message';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport './Meta.css';\r\n\r\nclass Meta extends React.Component {\r\n\r\n    state = { };\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { chatId, messageId } = props;\r\n        const { prevChatId, prevMessageId } = state;\r\n\r\n        if (prevChatId !== chatId || prevMessageId !== messageId) {\r\n            const message = MessageStore.get(chatId, messageId);\r\n            if (!message) return null;\r\n\r\n            const { date, edit_date: editDate, views, is_outgoing: isOutgoing } = message;\r\n\r\n            return {\r\n                prevChatId: chatId,\r\n                prevMessageId: messageId,\r\n\r\n                date,\r\n                editDate,\r\n                views,\r\n                isOutgoing\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\r\n        MessageStore.on('updateMessageViews', this.onUpdateMessageViews);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        MessageStore.off('updateMessageEdited', this.onUpdateMessageEdited);\r\n        MessageStore.off('updateMessageViews', this.onUpdateMessageViews);\r\n    }\r\n\r\n    onUpdateMessageEdited = update => {\r\n        const { chat_id, message_id, edit_date: editDate } = update;\r\n        const { chatId, messageId } = this.props;\r\n\r\n        if (chat_id !== chatId) return;\r\n        if (message_id !== messageId) return;\r\n\r\n        this.setState({\r\n            editDate\r\n        });\r\n    };\r\n\r\n    onUpdateMessageViews = update => {\r\n        const { chat_id, message_id, views } = update;\r\n        const { chatId, messageId } = this.props;\r\n\r\n        if (chat_id !== chatId) return;\r\n        if (message_id !== messageId) return;\r\n\r\n        this.setState({\r\n            views\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { className, chatId, messageId, onDateClick, t, style } = this.props;\r\n        const { date, editDate, views, isOutgoing } = this.state;\r\n\r\n        const dateStr = getDate(date);\r\n        const dateHintStr = getDateHint(date);\r\n        const viewsStr = getViews(views);\r\n\r\n        return (\r\n            <div className={classNames('meta', className)} style={style}>\r\n                <span>&ensp;</span>\r\n                {views > 0 && (\r\n                    <>\r\n                        <VisibilityIcon className='meta-views-icon' />\r\n                        <span className='meta-views' title={views}>\r\n                            &nbsp;\r\n                            {viewsStr}\r\n                            &nbsp; &nbsp;\r\n                        </span>\r\n                    </>\r\n                )}\r\n                {editDate > 0 && <span>{t('EditedMessage')}&nbsp;</span>}\r\n                <a onClick={onDateClick}>\r\n                    <span title={dateHintStr}>{dateStr}</span>\r\n                </a>\r\n                {isOutgoing && <Status chatId={chatId} messageId={messageId} />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMeta.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    onDateClick: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(Meta);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M18,5 C19.6568542,5 21,6.34314575 21,8 L21,20 C21,21.6568542 19.6568542,23 18,23 L9,23 C7.34314575,23 6,21.6568542 6,20 L6,8 C6,6.34314575 7.34314575,5 9,5 L18,5 Z M18,7 L9,7 C8.44771525,7 8,7.44771525 8,8 L8,20 C8,20.5522847 8.44771525,21 9,21 L18,21 C18.5522847,21 19,20.5522847 19,20 L19,8 C19,7.44771525 18.5522847,7 18,7 Z M15,1 C15.5522847,1 16,1.44771525 16,2 C16,2.55228475 15.5522847,3 15,3 L15,3 L5,3 C4.44771525,3 4,3.44771525 4,4 L4,4 L4,16 C4,16.5522847 3.55228475,17 3,17 C2.44771525,17 2,16.5522847 2,16 L2,16 L2,4 C2,2.34314575 3.34314575,1 5,1 L5,1 Z' />,\r\n    'Copy'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M18,3 C19.6568542,3 21,4.34314575 21,6 L21,18 C21,19.6568542 19.6568542,21 18,21 L6,21 C4.34314575,21 3,19.6568542 3,18 L3,6 C3,4.34314575 4.34314575,3 6,3 L18,3 Z M18,5 L6,5 C5.44771525,5 5,5.44771525 5,6 L5,18 C5,18.5522847 5.44771525,19 6,19 L18,19 C18.5522847,19 19,18.5522847 19,18 L19,6 C19,5.44771525 18.5522847,5 18,5 Z M15.7928932,8.29289322 C16.1834175,7.90236893 16.8165825,7.90236893 17.2071068,8.29289322 C17.5976311,8.68341751 17.5976311,9.31658249 17.2071068,9.70710678 L17.2071068,9.70710678 L11.2071068,15.7071068 C10.8165825,16.0976311 10.1834175,16.0976311 9.79289322,15.7071068 L9.79289322,15.7071068 L7.29289322,13.2071068 C6.90236893,12.8165825 6.90236893,12.1834175 7.29289322,11.7928932 C7.68341751,11.4023689 8.31658249,11.4023689 8.70710678,11.7928932 L8.70710678,11.7928932 L10.5,13.5857864 Z' />,\r\n    'FrameCheck'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <g stroke='currentColor' strokeWidth='2' fill='none' fillRule='evenodd' strokeLinecap='round' transform='translate(4, 1)'>\r\n        <path d='M2,3 L14,3 C15.1045695,3 16,3.8954305 16,5 L16,17 C16,18.1045695 15.1045695,19 14,19 L2,19 C0.8954305,19 0,18.1045695 0,17 L0,10 L0,10'/>\r\n        <polyline strokeLinejoin='round' points='4 11.5 6.5 14 12.5 8'/>\r\n        <polyline strokeLinejoin='round' points='3 0 -2.87547763e-14 3 3 6'/>\r\n    </g>,\r\n    'RemoveCheck'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M11.8025478,4.79529691 C11.8025478,3.93005081 12.5039683,3.22863025 13.3692144,3.22863025 C13.7633775,3.22863025 14.1430567,3.37720768 14.4325315,3.64473128 L22.2284036,10.8494344 C22.8638434,11.4366882 22.9029059,12.4278772 22.2883553,13.0917108 L22.2284036,13.1505656 L14.4325315,20.3552687 C13.7970916,20.9425225 12.8059026,20.90346 12.2186488,20.2680201 C11.9511252,19.9785454 11.8025478,19.5988662 11.8025478,19.2047031 L11.8025478,16.4249931 C8.21922017,16.6092505 5.79479016,17.8111183 4.43312712,19.9909578 L4.29164834,20.2262356 C3.95336498,20.8131459 3.20334729,21.0146979 2.61643694,20.6764146 C2.24185558,20.4605134 2.00860424,20.0633528 2.00249611,19.6310483 C1.8981509,12.2459874 5.13388305,8.13673748 11.4825227,7.6491321 L11.8025478,7.62777147 L11.8025478,4.79529691 Z M13.8025478,5.78581808 L13.8025478,8.6 C13.8025478,9.15228475 13.3548325,9.6 12.8025478,9.6 C7.49232524,9.6 4.65375859,12.0566924 4.1006582,17.2535243 C6.09650127,15.345115 9.01935671,14.4 12.8025478,14.4 C13.3548325,14.4 13.8025478,14.8477153 13.8025478,15.4 L13.8025478,18.2142808 L20.5271714,12.0005066 L13.8025478,5.78581808 Z' />,\r\n    'Share'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from '../../Utils/HOC';\r\nimport { withSnackbar } from 'notistack';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport CopyIcon from '../../Assets/Icons/Copy';\r\nimport DeleteIcon from '../../Assets/Icons/Delete';\r\nimport FrameCheckIcon from '../../Assets/Icons/FrameCheck';\r\nimport EditIcon from '../../Assets/Icons/Edit';\r\nimport RemoveCheckIcon from '../../Assets/Icons/RemoveCheck';\r\nimport ShareIcon from '../../Assets/Icons/Share';\r\nimport StopIcon from '../../Assets/Icons/Stop';\r\nimport PinIcon from '../../Assets/Icons/Pin2';\r\nimport UnpinIcon from '../../Assets/Icons/Pin2';\r\nimport { isPublicSupergroup } from '../../Utils/Supergroup';\r\nimport { canMessageBeClosed, canMessageBeDeleted, canMessageBeEdited, canMessageBeForwarded, canMessageBeUnvoted, isMessagePinned } from '../../Utils/Message';\r\nimport { canPinMessages, canSendMessages } from '../../Utils/Chat';\r\nimport { cancelPollAnswer, stopPoll } from '../../Actions/Poll';\r\nimport { copy } from '../../Utils/Text';\r\nimport { clearSelection, deleteMessages, editMessage, forwardMessages, replyMessage, selectMessage } from '../../Actions/Client';\r\nimport { pinMessage, unpinMessage } from '../../Actions/Message';\r\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './MessageMenu.css';\r\n\r\nclass MessageMenu extends React.PureComponent {\r\n    state = {\r\n        confirmStopPoll: false\r\n    };\r\n\r\n    handleConfirmStopPoll = event => {\r\n        const { dialog } = this.state;\r\n        if (dialog) return;\r\n\r\n        this.setState({\r\n            confirmStopPoll: true,\r\n            contextMenu: false\r\n        });\r\n    };\r\n\r\n    handleCloseConfirm = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({ confirmStopPoll: false });\r\n    };\r\n\r\n    handleStopPoll = event => {\r\n        event.stopPropagation();\r\n\r\n        const { chatId, messageId } = this.props;\r\n        const { confirmStopPoll } = this.state;\r\n\r\n        if (confirmStopPoll) {\r\n            this.setState({ confirmStopPoll: false });\r\n        }\r\n\r\n        stopPoll(chatId, messageId);\r\n    };\r\n\r\n    handleUnvote = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { chatId, messageId, onClose } = this.props;\r\n\r\n        onClose(event);\r\n        cancelPollAnswer(chatId, messageId);\r\n    };\r\n\r\n    handleCopyLink = event => {\r\n        const { onClose, copyLink, t } = this.props;\r\n\r\n        onClose(event);\r\n\r\n        if (!copyLink) return;\r\n\r\n        copy(copyLink);\r\n        this.handleScheduledAction(t('LinkCopied'));\r\n    };\r\n\r\n    handleCopyPublicMessageLink = async event => {\r\n        const { onClose, chatId, messageId, t } = this.props;\r\n\r\n        onClose(event);\r\n\r\n        const httpUrl = await TdLibController.send({\r\n            '@type': 'getPublicMessageLink',\r\n            chat_id: chatId,\r\n            message_id: messageId,\r\n            for_album: false\r\n        });\r\n\r\n        if (!httpUrl) return;\r\n        const { link: copyLink } = httpUrl;\r\n\r\n        if (!copyLink) return;\r\n\r\n        copy(copyLink);\r\n        this.handleScheduledAction(t('LinkCopied'));\r\n    };\r\n\r\n    handleScheduledAction = message => {\r\n        const { enqueueSnackbar, closeSnackbar } = this.props;\r\n\r\n        const snackKey = enqueueSnackbar(message, {\r\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\r\n            preventDuplicate: true,\r\n            action: [\r\n                <IconButton\r\n                    key='close'\r\n                    aria-label='Close'\r\n                    color='inherit'\r\n                    className='notification-close-button'\r\n                    onClick={() => {\r\n                        closeSnackbar(snackKey);\r\n                    }}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ]\r\n        });\r\n    };\r\n\r\n    handleReply = event => {\r\n        const { chatId, messageId, onClose } = this.props;\r\n\r\n        clearSelection();\r\n        onClose(event);\r\n        replyMessage(chatId, messageId);\r\n    };\r\n\r\n    handlePin = event => {\r\n        const { chatId, messageId, onClose } = this.props;\r\n\r\n        clearSelection();\r\n        onClose(event);\r\n\r\n        if (isMessagePinned(chatId, messageId)) {\r\n            unpinMessage(chatId);\r\n        } else {\r\n            pinMessage(chatId, messageId);\r\n        }\r\n    };\r\n\r\n    handleForward = event => {\r\n        const { chatId, messageId, onClose } = this.props;\r\n\r\n        onClose(event);\r\n        forwardMessages(chatId, [messageId]);\r\n    };\r\n\r\n    handleEdit = event => {\r\n        const { chatId, messageId, onClose } = this.props;\r\n\r\n        clearSelection();\r\n        onClose(event);\r\n        editMessage(chatId, messageId);\r\n    };\r\n\r\n    handleSelect = event => {\r\n        const { chatId, messageId, onClose } = this.props;\r\n\r\n        onClose(event);\r\n        selectMessage(chatId, messageId, true);\r\n    };\r\n\r\n    handleDelete = event => {\r\n        const { chatId, messageId, onClose } = this.props;\r\n\r\n        onClose(event);\r\n        deleteMessages(chatId, [messageId]);\r\n    };\r\n\r\n    render() {\r\n        const { t, chatId, messageId, anchorPosition, copyLink, open, onClose } = this.props;\r\n        const { confirmStopPoll } = this.state;\r\n        if (!confirmStopPoll && !open) return null;\r\n\r\n        const isPinned = isMessagePinned(chatId, messageId);\r\n        const canBeUnvoted = canMessageBeUnvoted(chatId, messageId);\r\n        const canBeClosed = canMessageBeClosed(chatId, messageId);\r\n        const canBeReplied = canSendMessages(chatId);\r\n        const canBePinned = canPinMessages(chatId);\r\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\r\n        const canBeDeleted = canMessageBeDeleted(chatId, messageId);\r\n        const canBeEdited = canMessageBeEdited(chatId, messageId) && !AppStore.recording;\r\n        const canBeSelected = !MessageStore.hasSelectedMessage(chatId, messageId);\r\n        const canCopyLink = Boolean(copyLink);\r\n        const canCopyPublicMessageLink = isPublicSupergroup(chatId);\r\n\r\n        return (\r\n            <>\r\n                <Popover\r\n                    open={open}\r\n                    onClose={onClose}\r\n                    anchorReference='anchorPosition'\r\n                    anchorPosition={anchorPosition}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'left'\r\n                    }}\r\n                    onMouseDown={e => e.stopPropagation()}>\r\n                    <MenuList onClick={e => e.stopPropagation()}>\r\n                        {canCopyPublicMessageLink && (\r\n                            <MenuItem onClick={this.handleCopyPublicMessageLink}>\r\n                                <ListItemIcon>\r\n                                    <CopyIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={t('CopyMessageLink')} />\r\n                            </MenuItem>\r\n                        )}\r\n                        {canCopyLink && (\r\n                            <MenuItem onClick={this.handleCopyLink}>\r\n                                <ListItemIcon>\r\n                                    <CopyIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={t('CopyLink')} />\r\n                            </MenuItem>\r\n                        )}\r\n                        {canBeReplied && (\r\n                            <MenuItem onClick={this.handleReply}>\r\n                                <ListItemIcon>\r\n                                    <ShareIcon style={{transform: 'scaleX(-1)'}}/>\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={t('Reply')} />\r\n                            </MenuItem>\r\n                        )}\r\n                        {canBePinned && (\r\n                            <MenuItem onClick={this.handlePin}>\r\n                                {isPinned ? (\r\n                                    <>\r\n                                        <ListItemIcon>\r\n                                            <UnpinIcon />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText primary={t('UnpinFromTop')} />\r\n                                    </>\r\n                                ) : (\r\n                                    <>\r\n                                        <ListItemIcon>\r\n                                            <PinIcon />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText primary={t('PinToTop')} />\r\n                                    </>\r\n                                )}\r\n                            </MenuItem>\r\n                        )}\r\n                        {canBeSelected && (\r\n                            <MenuItem onClick={this.handleSelect}>\r\n                                <ListItemIcon>\r\n                                    <FrameCheckIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={t('Select')} />\r\n                            </MenuItem>\r\n                        )}\r\n                        {canBeForwarded && (\r\n                            <MenuItem onClick={this.handleForward}>\r\n                                <ListItemIcon>\r\n                                    <ShareIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={t('Forward')} />\r\n                            </MenuItem>\r\n                        )}\r\n                        {canBeEdited && (\r\n                            <MenuItem onClick={this.handleEdit}>\r\n                                <ListItemIcon>\r\n                                    <EditIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={t('Edit')} />\r\n                            </MenuItem>\r\n                        )}\r\n                        {canBeDeleted && (\r\n                            <MenuItem color='secondary' onClick={this.handleDelete}>\r\n                                <ListItemIcon>\r\n                                    <DeleteIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={t('Delete')} />\r\n                            </MenuItem>\r\n                        )}\r\n                        {canBeUnvoted && (\r\n                            <MenuItem onClick={this.handleUnvote}>\r\n                                <ListItemIcon>\r\n                                    <RemoveCheckIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={t('Unvote')} />\r\n                            </MenuItem>\r\n                        )}\r\n                        {canBeClosed && (\r\n                            <MenuItem onClick={this.handleConfirmStopPoll}>\r\n                                <ListItemIcon>\r\n                                    <StopIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={t('StopPoll')} />\r\n                            </MenuItem>\r\n                        )}\r\n                    </MenuList>\r\n                </Popover>\r\n                <Dialog\r\n                    transitionDuration={0}\r\n                    open={confirmStopPoll}\r\n                    onClose={this.handleCloseConfirm}\r\n                    aria-labelledby='form-dialog-title'>\r\n                    <DialogTitle id='form-dialog-title'>{t('StopPollAlertTitle')}</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText>{t('StopPollAlertText')}</DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleCloseConfirm} color='primary'>\r\n                            {t('Cancel')}\r\n                        </Button>\r\n                        <Button onClick={this.handleStopPoll} color='primary'>\r\n                            {t('Stop')}\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nMessageMenu.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    anchorPosition: PropTypes.object,\r\n    open: PropTypes.bool.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    copyLink: PropTypes.string\r\n};\r\n\r\nconst enhance = compose(\r\n    withTranslation(),\r\n    withSnackbar\r\n);\r\n\r\nexport default enhance(MessageMenu);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport './UnreadSeparator.css';\r\n\r\nfunction UnreadSeparator(props) {\r\n    const { t } = props;\r\n\r\n    return <div className='unread-separator'>{t('UnreadMessages')}</div>;\r\n}\r\n\r\nexport default withTranslation()(UnreadSeparator);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport SvgIcon from '@material-ui/core/SvgIcon';\r\nimport Animation from './Animation';\r\nimport Audio from './Audio';\r\nimport Document from './Document';\r\nimport Photo from './Photo';\r\nimport Sticker, { StickerSourceEnum } from './Sticker';\r\nimport Video from './Video';\r\nimport VideoNote from './VideoNote';\r\nimport VoiceNote from './VoiceNote';\r\nimport { getSize } from '../../../Utils/Common';\r\nimport { getSrc } from '../../../Utils/File';\r\nimport { openInstantView } from '../../../Actions/InstantView';\r\nimport { getFormattedText, getTwitterInstagramEntities } from '../../../Utils/Message';\r\nimport {\r\n    PHOTO_DISPLAY_EXTRA_SMALL_SIZE,\r\n    PHOTO_DISPLAY_SIZE,\r\n    PHOTO_DISPLAY_SMALL_SIZE,\r\n    PHOTO_SIZE\r\n} from '../../../Constants';\r\nimport MessageStore from '../../../Stores/MessageStore';\r\nimport './WebPage.css';\r\n\r\nclass WebPage extends React.Component {\r\n    getMedia = () => {\r\n        const { chatId, messageId, size, displaySize, displaySmallSize, displayExtraSmallSize, openMedia } = this.props;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return null;\r\n\r\n        const { content } = message;\r\n        if (!content) return null;\r\n\r\n        const { web_page } = content;\r\n        if (!web_page) return null;\r\n\r\n        const {\r\n            site_name,\r\n            title,\r\n            description,\r\n            url,\r\n            photo,\r\n            animation,\r\n            video,\r\n            audio,\r\n            document,\r\n            voice_note,\r\n            video_note,\r\n            sticker,\r\n            type\r\n        } = web_page;\r\n\r\n        if (sticker) {\r\n            return [\r\n                null,\r\n                <Sticker\r\n                    chatId={chatId}\r\n                    messageId={messageId}\r\n                    sticker={sticker}\r\n                    openMedia={openMedia}\r\n                    source={StickerSourceEnum.MESSAGE}\r\n                />\r\n            ];\r\n        }\r\n\r\n        if (voice_note) {\r\n            return [\r\n                null,\r\n                <VoiceNote chatId={chatId} messageId={messageId} voiceNote={voice_note} openMedia={openMedia} />\r\n            ];\r\n        }\r\n\r\n        if (video_note) {\r\n            return [\r\n                null,\r\n                <VideoNote chatId={chatId} messageId={messageId} videoNote={video_note} openMedia={openMedia} />\r\n            ];\r\n        }\r\n\r\n        if (audio) {\r\n            return [null, <Audio chatId={chatId} messageId={messageId} audio={audio} openMedia={openMedia} />];\r\n        }\r\n\r\n        if (document) {\r\n            return [null, <Document chatId={chatId} messageId={messageId} document={document} openMedia={openMedia} />];\r\n        }\r\n\r\n        if (animation) {\r\n            const animationSrc = getSrc(animation.animation);\r\n            if (animationSrc || animation.thumbnail) {\r\n                return [\r\n                    null,\r\n                    <Animation stretch={true} chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />\r\n                ];\r\n            }\r\n        }\r\n\r\n        if (video) {\r\n            if (video.thumbnail) {\r\n                return [null, <Video stretch={true} chatId={chatId} messageId={messageId} video={video} openMedia={openMedia} />];\r\n            }\r\n        }\r\n\r\n        if (photo) {\r\n            const photoSize = getSize(photo.sizes, size);\r\n            const smallPhoto =\r\n                (type === 'article' || type === 'photo' || type === 'telegram_megagroup' || type === 'telegram_channel') &&\r\n                (site_name || title || description && description.text.length > 0) &&\r\n                photoSize &&\r\n                (photoSize.width === photoSize.height || Math.max(photoSize.width, photoSize.height) < PHOTO_DISPLAY_SIZE );\r\n            const extraSmallPhoto = smallPhoto && (!description || description.text.length < 50);\r\n\r\n            const style =\r\n                smallPhoto || extraSmallPhoto\r\n                    ? {\r\n                          float: 'right',\r\n                          marginLeft: 6\r\n                      }\r\n                    : {};\r\n\r\n            return [\r\n                smallPhoto ? (\r\n                    <Photo\r\n                        displaySize={extraSmallPhoto ? displayExtraSmallSize : displaySmallSize}\r\n                        style={style}\r\n                        chatId={chatId}\r\n                        messageId={messageId}\r\n                        photo={photo}\r\n                        openMedia={openMedia}\r\n                    />\r\n                ) : null,\r\n                !smallPhoto ? <Photo stretch={true} chatId={chatId} messageId={messageId} photo={photo} openMedia={openMedia} /> : null\r\n            ];\r\n        }\r\n\r\n        return [null, null];\r\n    };\r\n\r\n    handleInstantViewClick = async event => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n        const { chatId, messageId } = this.props;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return null;\r\n\r\n        const { content } = message;\r\n        if (!content) return null;\r\n\r\n        const { web_page } = content;\r\n        if (!web_page) return null;\r\n\r\n        const { url } = web_page;\r\n\r\n        openInstantView(url);\r\n    };\r\n\r\n    getWebPage() {\r\n        const { chatId, messageId, t } = this.props;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return null;\r\n\r\n        const { content } = message;\r\n        if (!content) return null;\r\n\r\n        const { web_page } = content;\r\n        if (!web_page) return null;\r\n\r\n        const { instant_view_version, site_name } = web_page;\r\n        let { description, title } = web_page;\r\n\r\n        if (description['@type'] === 'formattedText') {\r\n            description = getFormattedText(description);\r\n        } else if (typeof description === 'string' && site_name && (site_name.toLowerCase() === 'twitter' || site_name.toLowerCase() === 'instagram')) {\r\n            // const { text: t2, entities: e2 } = getTwitterInstagramEntities(site_name.toLowerCase() === 'twitter' ? 1 : 2, title, []);\r\n            // title = getFormattedText({ '@type': 'formattedText', text: title, entities: e2 });\r\n\r\n            const { text: t1, entities: e1 } = getTwitterInstagramEntities(site_name.toLowerCase() === 'instagram' ? 1 : 2, description, []);\r\n            description = getFormattedText({ '@type': 'formattedText', text: description, entities: e1 });\r\n        }\r\n\r\n        const webPageContent = (\r\n            <>\r\n                {site_name && <div className='web-page-site-name'>{site_name}</div>}\r\n                {title && <div className='web-page-title'>{title}</div>}\r\n                {description && <div className='web-page-description'>{description}</div>}\r\n            </>\r\n        );\r\n        const [webPageMediaTop, webPageMediaBottom] = this.getMedia();\r\n        const webPageInstantView = instant_view_version > 0 && (\r\n            <Button\r\n                variant='outlined'\r\n                color='primary'\r\n                classes={{\r\n                    outlinedPrimary: 'message-control',\r\n                    disabled: 'message-control-disabled'\r\n                }}\r\n                fullWidth\r\n                onClick={this.handleInstantViewClick}\r\n                className='web-page-button'>\r\n                <SvgIcon>\r\n                    <path d='M10.5159727,16.7438514 C10.1741929,18.1203636 10.687342,18.4055299 11.6053255,17.4005852 L15.4613785,12.9698209 C16.3535455,11.8808642 16.1300862,11.0059438 14.8452805,10.7872179 L12.9861121,10.4429102 L12.9861121,10.4429102 C12.8775019,10.4227962 12.8057616,10.3184447 12.8258756,10.2098345 C12.8265392,10.2062511 12.8273007,10.2026864 12.8281591,10.1991446 L13.5436135,7.24719783 C13.8863521,5.8619451 13.3150978,5.61107807 12.4582164,6.59275159 C11.2270125,7.98097123 10.2913754,9.02966176 9.65130514,9.73882318 C9.42814828,9.98606827 9.06894462,10.3719875 8.57369417,10.8965808 C7.48829706,12.1010165 8.05955136,12.9745105 9.31498713,13.1932365 L11.0917769,13.5117472 L11.0917769,13.5117472 C11.2005008,13.5312372 11.2728391,13.6351751 11.253349,13.743899 C11.2525988,13.7480841 11.2517153,13.7522442 11.2506999,13.756373 L10.5159727,16.7438514 Z' />\r\n                </SvgIcon>\r\n                {t('InstantView')}\r\n            </Button>\r\n        );\r\n\r\n        return (\r\n            <>\r\n                {webPageMediaTop}\r\n                {webPageContent}\r\n                {webPageMediaBottom}\r\n                {webPageInstantView}\r\n            </>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const { meta } = this.props;\r\n\r\n        return (\r\n            <>\r\n                <div className='web-page'>\r\n                    <div className='border' />\r\n                    <div className='web-page-wrapper'>{this.getWebPage()}</div>\r\n                </div>\r\n                {meta}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nWebPage.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n\r\n    size: PropTypes.number,\r\n    displaySize: PropTypes.number,\r\n    displaySmallSize: PropTypes.number,\r\n    displayExtraSmallSize: PropTypes.number,\r\n    openMedia: PropTypes.func\r\n};\r\n\r\nWebPage.defaultProps = {\r\n    size: PHOTO_SIZE,\r\n    displaySize: PHOTO_DISPLAY_SIZE,\r\n    displaySmallSize: PHOTO_DISPLAY_SMALL_SIZE,\r\n    displayExtraSmallSize: PHOTO_DISPLAY_EXTRA_SMALL_SIZE\r\n};\r\n\r\nexport default withTranslation()(WebPage);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './StubMessage.css';\r\n\r\nclass StubMessage extends React.Component {\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className='stub-message'>\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nStubMessage.propTypes = {};\r\n\r\nexport default StubMessage;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport './EmptyTile.css';\r\n\r\nfunction EmptyTile(props) {\r\n    const { dialog, small, big, style } = props;\r\n\r\n    return (\r\n        <div\r\n            className={classNames(\r\n                'chat-tile',\r\n                { 'tile-dialog': dialog },\r\n                { 'tile-small': small },\r\n                { 'tile-big': big }\r\n            )}\r\n            style={style}/>\r\n    );\r\n}\r\n\r\nEmptyTile.propTypes = {};\r\n\r\nexport default EmptyTile;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport classNames from 'classnames';\r\nimport { compose } from '../../Utils/HOC';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\r\nimport CheckMarkIcon from '@material-ui/icons/Check';\r\nimport DayMeta from './DayMeta';\r\nimport Reply from './Reply';\r\nimport Forward from './Forward';\r\nimport Meta from './Meta';\r\nimport MessageAuthor from './MessageAuthor';\r\nimport MessageMenu from './MessageMenu';\r\nimport UserTile from '../Tile/UserTile';\r\nimport ChatTile from '../Tile/ChatTile';\r\nimport UnreadSeparator from './UnreadSeparator';\r\nimport WebPage from './Media/WebPage';\r\nimport {\r\n    getEmojiMatches,\r\n    getText,\r\n    getWebPage,\r\n    openMedia,\r\n    showMessageForward,\r\n    isMetaBubble,\r\n    canMessageBeForwarded,\r\n    getMessageStyle, isMediaContent\r\n} from '../../Utils/Message';\r\nimport { getMedia } from '../../Utils/Media';\r\nimport { canSendMessages, isChannelChat, isPrivateChat } from '../../Utils/Chat';\r\nimport {\r\n    openUser,\r\n    openChat,\r\n    selectMessage,\r\n    openReply,\r\n    replyMessage,\r\n    forwardMessages\r\n} from '../../Actions/Client';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport './Message.css';\r\nimport StubMessage from './StubMessage';\r\nimport EmptyTile from '../Tile/EmptyTile';\r\n\r\nclass Message extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { chatId, messageId } = this.props;\r\n        this.state = {\r\n            message: MessageStore.get(chatId, messageId),\r\n            emojiMatches: getEmojiMatches(chatId, messageId),\r\n            selected: false,\r\n            highlighted: false,\r\n            shook: false,\r\n\r\n            contextMenu: false,\r\n            copyLink: null,\r\n            left: 0,\r\n            top: 0\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, messageId, sendingState, showUnreadSeparator, showTail, showTitle } = this.props;\r\n        const { contextMenu, selected, highlighted, shook, emojiMatches } = this.state;\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            // console.log('Message.shouldComponentUpdate true chatId');\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.messageId !== messageId) {\r\n            // console.log('Message.shouldComponentUpdate true messageId');\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.sendingState !== sendingState) {\r\n            // console.log('Message.shouldComponentUpdate true sendingState');\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\r\n            // console.log('Message.shouldComponentUpdate true showUnreadSeparator');\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.showTail !== showTail) {\r\n            // console.log('Message.shouldComponentUpdate true showTail');\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.showTitle !== showTitle) {\r\n            // console.log('Message.shouldComponentUpdate true showTitle');\r\n            return true;\r\n        }\r\n\r\n        if (nextState.contextMenu !== contextMenu) {\r\n            // console.log('Message.shouldComponentUpdate true contextMenu');\r\n            return true;\r\n        }\r\n\r\n        if (nextState.selected !== selected) {\r\n            // console.log('Message.shouldComponentUpdate true selected');\r\n            return true;\r\n        }\r\n\r\n        if (nextState.highlighted !== highlighted) {\r\n            // console.log('Message.shouldComponentUpdate true highlighted');\r\n            return true;\r\n        }\r\n\r\n        if (nextState.shook !== shook) {\r\n            // console.log('Message.shouldComponentUpdate true shook');\r\n            return true;\r\n        }\r\n\r\n        if (nextState.emojiMatches !== emojiMatches) {\r\n            // console.log('Message.shouldComponentUpdate true emojiMatches');\r\n            return true;\r\n        }\r\n\r\n        // console.log('Message.shouldComponentUpdate false');\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\r\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\r\n        MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\r\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\r\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\r\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\r\n        MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\r\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\r\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\r\n    }\r\n\r\n    onClientUpdateClearSelection = update => {\r\n        if (!this.state.selected) return;\r\n\r\n        this.setState({ selected: false });\r\n    };\r\n\r\n    onClientUpdateMessageShake = update => {\r\n        const { chatId, messageId } = this.props;\r\n        const { shook } = this.state;\r\n\r\n        if (chatId === update.chatId && messageId === update.messageId) {\r\n            if (shook) {\r\n                this.setState({ shook: false }, () => {\r\n                    setTimeout(() => {\r\n                        this.setState({ shook: true });\r\n                    }, 0);\r\n                });\r\n            } else {\r\n                this.setState({ shook: true });\r\n            }\r\n        }\r\n    };\r\n\r\n    onClientUpdateMessageHighlighted = update => {\r\n        const { chatId, messageId } = this.props;\r\n        const { selected, highlighted } = this.state;\r\n\r\n        if (selected) return;\r\n\r\n        if (chatId === update.chatId && messageId === update.messageId) {\r\n            if (highlighted) {\r\n                this.setState({ highlighted: false }, () => {\r\n                    setTimeout(() => {\r\n                        this.setState({ highlighted: true });\r\n                    }, 0);\r\n                });\r\n            } else {\r\n                this.setState({ highlighted: true });\r\n            }\r\n        } else if (highlighted) {\r\n            this.setState({ highlighted: false });\r\n        }\r\n    };\r\n\r\n    onClientUpdateMessageSelected = update => {\r\n        const { chatId, messageId } = this.props;\r\n        const { selected } = update;\r\n\r\n        if (chatId === update.chatId && messageId === update.messageId) {\r\n            this.setState({ selected, highlighted: false });\r\n        }\r\n    };\r\n\r\n    onUpdateMessageContent = update => {\r\n        const { chat_id, message_id } = update;\r\n        const { chatId, messageId } = this.props;\r\n        const { emojiMatches } = this.state;\r\n\r\n        if (chatId !== chat_id) return;\r\n        if (messageId !== message_id) return;\r\n\r\n        const newEmojiMatches = getEmojiMatches(chatId, messageId);\r\n        if (newEmojiMatches !== emojiMatches) {\r\n            this.setState({ emojiMatches: getEmojiMatches(chatId, messageId) });\r\n        } else {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    handleSelectUser = userId => {\r\n        openUser(userId, true);\r\n    };\r\n\r\n    handleSelectChat = chatId => {\r\n        openChat(chatId, null, true);\r\n    };\r\n\r\n    handleSelection = () => {\r\n        if (!this.mouseDown) return;\r\n\r\n        const selection = window.getSelection().toString();\r\n        if (selection) return;\r\n\r\n        const { chatId, messageId } = this.props;\r\n\r\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\r\n        selectMessage(chatId, messageId, selected);\r\n    };\r\n\r\n    handleDateClick = e => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        const { chatId, messageId } = this.props;\r\n\r\n        const canBeReplied = canSendMessages(chatId);\r\n        if (canBeReplied) {\r\n            replyMessage(chatId, messageId);\r\n\r\n            return;\r\n        }\r\n\r\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\r\n        if (canBeForwarded) {\r\n            forwardMessages(chatId, [messageId]);\r\n        }\r\n    };\r\n\r\n    openMedia = event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { chatId, messageId } = this.props;\r\n\r\n        openMedia(chatId, messageId);\r\n    };\r\n\r\n    handleAnimationEnd = () => {\r\n        this.setState({ highlighted: false });\r\n    };\r\n\r\n    handleMouseDown = () => {\r\n        this.mouseDown = true;\r\n    };\r\n\r\n    handleMouseOver = () => {\r\n        this.mouseDown = false;\r\n    };\r\n\r\n    handleMouseOut = () => {\r\n        this.mouseOut = false;\r\n    };\r\n\r\n    handleReplyClick = () => {\r\n        const { chatId, messageId } = this.props;\r\n        openReply(chatId, messageId);\r\n    };\r\n\r\n    handleOpenContextMenu = async event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { contextMenu } = this.state;\r\n\r\n        if (contextMenu) {\r\n            this.setState({ contextMenu: false });\r\n        } else {\r\n            if (MessageStore.selectedItems.size > 1) {\r\n                return;\r\n            }\r\n\r\n            const left = event.clientX;\r\n            const top = event.clientY;\r\n            const copyLink =\r\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\r\n\r\n            this.setState({\r\n                contextMenu: true,\r\n                copyLink,\r\n                left,\r\n                top\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseContextMenu = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({ contextMenu: false });\r\n    };\r\n\r\n    render() {\r\n        let { showTail } = this.props;\r\n        const { t, chatId, messageId, showUnreadSeparator, showTitle, showDate } = this.props;\r\n        const {\r\n            emojiMatches,\r\n            selected,\r\n            highlighted,\r\n            shook,\r\n            copyLink,\r\n            contextMenu,\r\n            left,\r\n            top\r\n        } = this.state;\r\n\r\n        // console.log('Message.render', messageId);\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return <div>[empty message]</div>;\r\n\r\n        const { is_outgoing, views, date, edit_date, reply_to_message_id, forward_info, sender_user_id } = message;\r\n\r\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\r\n        const inlineMeta = (\r\n            <Meta\r\n                className='meta-hidden'\r\n                key={`${chatId}_${messageId}_meta`}\r\n                chatId={chatId}\r\n                messageId={messageId}\r\n                date={date}\r\n                editDate={edit_date}\r\n                views={views}\r\n            />\r\n        );\r\n        const webPage = getWebPage(message);\r\n        const text = getText(message, !!webPage ? null : inlineMeta, t);\r\n        const hasCaption = text !== null && text.length > 0;\r\n        const showForward = showMessageForward(chatId, messageId);\r\n        const showReply = Boolean(reply_to_message_id);\r\n        const suppressTitle = isPrivateChat(chatId);\r\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\r\n        const media = getMedia(message, this.openMedia, hasTitle, hasCaption, inlineMeta);\r\n        const isChannel = isChannelChat(chatId);\r\n        const isPrivate = isPrivateChat(chatId);\r\n\r\n        // if (showTail && isMediaContent() && !hasCaption) {\r\n        //     showTail = false;\r\n        // }\r\n\r\n        let tile = null;\r\n        if (showTail) {\r\n            if (isPrivate) {\r\n                tile = <EmptyTile small />\r\n            } else if (isChannel) {\r\n                tile = <EmptyTile small />\r\n            } else if (is_outgoing) {\r\n                tile = <EmptyTile small />\r\n            } else if (sender_user_id) {\r\n                tile = <UserTile small userId={sender_user_id} onSelect={this.handleSelectUser} />\r\n            } else {\r\n                tile = <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />\r\n            }\r\n        }\r\n\r\n        const style = getMessageStyle(chatId, messageId);\r\n        const withBubble =\r\n            message.content['@type'] !== 'messageSticker' && message.content['@type'] !== 'messageVideoNote';\r\n\r\n        // console.log('[p] m.render id=' + message.id);\r\n\r\n        // return (\r\n        //     <StubMessage>\r\n        //         {text}\r\n        //         {media}\r\n        //         <WebPage\r\n        //             chatId={chatId}\r\n        //             messageId={messageId}\r\n        //             openMedia={this.openMedia}\r\n        //             meta={inlineMeta}\r\n        //         />\r\n        //     </StubMessage>\r\n        // );\r\n\r\n        return (\r\n            <div>\r\n                {showDate && <DayMeta date={date} />}\r\n                <div\r\n                    className={classNames('message', {\r\n                        'message-short': !tile,\r\n                        'message-out': isOutgoing,\r\n                        'message-selected': selected,\r\n                        'message-highlighted': highlighted && !selected,\r\n                        'message-group-title': showTitle && !showTail,\r\n                        'message-group': !showTitle && !showTail,\r\n                        'message-group-tail': !showTitle && showTail,\r\n                        'message-bubble-hidden': !withBubble\r\n                    })}\r\n                    onMouseOver={this.handleMouseOver}\r\n                    onMouseOut={this.handleMouseOut}\r\n                    onMouseDown={this.handleMouseDown}\r\n                    onClick={this.handleSelection}\r\n                    onAnimationEnd={this.handleAnimationEnd}\r\n                    onContextMenu={this.handleOpenContextMenu}>\r\n                    {showUnreadSeparator && <UnreadSeparator />}\r\n                    <div className='message-body'>\r\n                        <div className='message-padding'>\r\n                            <CheckMarkIcon className='message-select-tick' />\r\n                        </div>\r\n                        <div className={classNames('message-wrapper', { 'shook': shook })}>\r\n                            {tile}\r\n                            <div\r\n                                className={classNames('message-content', {\r\n                                    'message-bubble': withBubble,\r\n                                    'message-bubble-out': withBubble && isOutgoing\r\n                                })}\r\n                                style={style}>\r\n                                {withBubble && ((showTitle && !suppressTitle) || showForward) && (\r\n                                    <div className='message-title'>\r\n                                        {showTitle && !showForward && (\r\n                                            <MessageAuthor chatId={chatId} openChat userId={sender_user_id} openUser />\r\n                                        )}\r\n                                        {showForward && <Forward forwardInfo={forward_info} />}\r\n                                    </div>\r\n                                )}\r\n                                {showReply && (\r\n                                    <Reply\r\n                                        chatId={chatId}\r\n                                        messageId={reply_to_message_id}\r\n                                        onClick={this.handleReplyClick}\r\n                                    />\r\n                                )}\r\n                                {media}\r\n                                <div\r\n                                    className={classNames('message-text', {\r\n                                        'message-text-1emoji': emojiMatches === 1,\r\n                                        'message-text-2emoji': emojiMatches === 2,\r\n                                        'message-text-3emoji': emojiMatches === 3\r\n                                    })}>\r\n                                    {text}\r\n                                </div>\r\n                                {webPage && (\r\n                                    <WebPage\r\n                                        chatId={chatId}\r\n                                        messageId={messageId}\r\n                                        openMedia={this.openMedia}\r\n                                        meta={inlineMeta}\r\n                                    />\r\n                                )}\r\n                                {withBubble && (\r\n                                    <Meta\r\n                                        className={classNames('meta-text', {\r\n                                            'meta-bubble': isMetaBubble(chatId, messageId)\r\n                                        })}\r\n                                        chatId={chatId}\r\n                                        messageId={messageId}\r\n                                        date={date}\r\n                                        editDate={edit_date}\r\n                                        views={views}\r\n                                        onDateClick={this.handleDateClick}\r\n                                    />\r\n                                )}\r\n                            </div>\r\n                            <div className='message-tile-padding' />\r\n                        </div>\r\n                        <div className='message-padding' />\r\n                    </div>\r\n                </div>\r\n                <MessageMenu\r\n                    chatId={chatId}\r\n                    messageId={messageId}\r\n                    anchorPosition={{ top, left }}\r\n                    open={contextMenu}\r\n                    onClose={this.handleCloseContextMenu}\r\n                    copyLink={copyLink}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTranslation(),\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(Message);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\n// import { ReactComponent as BubblesLogo } from '../../Assets/Bubbles.svg';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport './Placeholder.css';\r\n\r\nclass Placeholder extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { chatId, dialogsReady, cacheLoaded } = AppStore;\r\n        this.state = {\r\n            chatId,\r\n            dialogsReady,\r\n            cacheLoaded\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        if (nextState.chatId !== this.state.chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.dialogsReady !== this.state.dialogsReady) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.cacheLoaded !== this.state.cacheLoaded) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.t !== this.props.t) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\r\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\r\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\r\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\r\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\r\n    }\r\n\r\n    onClientUpdateCacheLoaded = update => {\r\n        const { cacheLoaded } = AppStore;\r\n\r\n        this.setState({ cacheLoaded });\r\n    };\r\n\r\n    onClientUpdateChatId = update => {\r\n        const { nextChatId: chatId } = update;\r\n\r\n        this.setState({ chatId });\r\n    };\r\n\r\n    onClientUpdateDialogsReady = update => {\r\n        const { dialogsReady } = AppStore;\r\n\r\n        this.setState({ dialogsReady });\r\n    };\r\n\r\n    render() {\r\n        const { t, force } = this.props;\r\n        const { chatId, dialogsReady, cacheLoaded } = this.state;\r\n        if (chatId) return null;\r\n        // if (!dialogsReady && !cacheLoaded) return null;\r\n\r\n        return (\r\n            <div className='placeholder'>\r\n                <div className='placeholder-wrapper'>\r\n                    {/*<BubblesLogo className='placeholder-logo' />*/}\r\n                    <div className='placeholder-meta'>{t('SelectChatToStartMessaging')}</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTranslation()(Placeholder);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport './ScrollDownButton.css';\r\n\r\nclass ScrollDownButton extends React.Component {\r\n    render() {\r\n        const { onClick } = this.props;\r\n\r\n        return (\r\n            <div className='scroll-down-button'>\r\n                <IconButton disableRipple={true} onMouseDown={onClick}>\r\n                    <ArrowDownwardIcon />\r\n                </IconButton>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nScrollDownButton.propTypes = {\r\n    onClick: PropTypes.func.isRequired\r\n};\r\n\r\nexport default ScrollDownButton;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\r\nimport { withTranslation } from 'react-i18next';\r\nimport classNames from 'classnames';\r\nimport DayMeta from './DayMeta';\r\nimport UnreadSeparator from './UnreadSeparator';\r\nimport Photo from './Media/Photo';\r\nimport { openMedia } from '../../Utils/Message';\r\nimport { getServiceMessageContent } from '../../Utils/ServiceMessage';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport './ServiceMessage.css';\r\n\r\nconst chatPhotoStyle = {\r\n    width: 64,\r\n    height: 64,\r\n    borderRadius: '50%',\r\n    margin: '0 auto 5px'\r\n};\r\n\r\nclass ServiceMessage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { chatId, messageId } = this.props;\r\n        this.state = {\r\n            message: MessageStore.get(chatId, messageId),\r\n            highlighted: false\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, messageId, sendingState, showUnreadSeparator } = this.props;\r\n        const { highlighted } = this.state;\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.messageId !== messageId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.sendingState !== sendingState) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.highlighted !== highlighted) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\r\n    }\r\n\r\n    onClientUpdateMessageHighlighted = update => {\r\n        const { chatId, messageId } = this.props;\r\n        const { selected, highlighted } = this.state;\r\n\r\n        if (selected) return;\r\n\r\n        if (chatId === update.chatId && messageId === update.messageId) {\r\n            if (highlighted) {\r\n                this.setState({ highlighted: false }, () => {\r\n                    setTimeout(() => {\r\n                        this.setState({ highlighted: true });\r\n                    }, 0);\r\n                });\r\n            } else {\r\n                this.setState({ highlighted: true });\r\n            }\r\n        } else if (highlighted) {\r\n            this.setState({ highlighted: false });\r\n        }\r\n    };\r\n\r\n    handleAnimationEnd = () => {\r\n        this.setState({ highlighted: false });\r\n    };\r\n\r\n    openMedia = event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { chatId, messageId } = this.props;\r\n\r\n        openMedia(chatId, messageId);\r\n    };\r\n\r\n    render() {\r\n        const { chatId, messageId, showUnreadSeparator, showDate } = this.props;\r\n        const { highlighted } = this.state;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return null;\r\n\r\n        const { content, date } = message;\r\n        if (!content) return null;\r\n\r\n        const { photo } = content;\r\n\r\n        const text = getServiceMessageContent(message, true);\r\n\r\n        return (\r\n            <div>\r\n                {showDate && <DayMeta date={date} />}\r\n                <div\r\n                    className={classNames('service-message', { 'message-highlighted': highlighted })}\r\n                    onAnimationEnd={this.handleAnimationEnd}>\r\n                    {showUnreadSeparator && <UnreadSeparator />}\r\n                    <div className='service-message-wrapper'>\r\n                        <div className='service-message-content'>\r\n                            <div>{text}</div>\r\n                        </div>\r\n                    </div>\r\n                    {photo && (\r\n                        <Photo\r\n                            chatId={chatId}\r\n                            messageId={messageId}\r\n                            photo={photo}\r\n                            displaySize={64}\r\n                            style={chatPhotoStyle}\r\n                            openMedia={this.openMedia}\r\n                        />\r\n                    )}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTranslation(),\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(ServiceMessage);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\r\nimport StickerPreview from './StickerPreview';\r\nimport { loadStickerContent, loadStickersContent } from '../../Utils/File';\r\nimport { STICKER_HINT_DISPLAY_SIZE, STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport StickerStore from '../../Stores/StickerStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './StickersHint.css';\r\n\r\nclass StickersHint extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.hintsRef = React.createRef();\r\n\r\n        this.state = {\r\n            hint: null,\r\n            items: [],\r\n            previewStickerId: 0,\r\n            showPreview: false,\r\n            cancelSend: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        StickerStore.on('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\r\n        StickerStore.on('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        StickerStore.off('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\r\n        StickerStore.off('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\r\n    }\r\n\r\n    onClientUpdateRemoteStickersHint = update => {\r\n        const { hint } = update;\r\n        const { hint: currentHint } = this.state;\r\n\r\n        if (currentHint && hint.timestamp !== currentHint.timestamp) return;\r\n\r\n        this.setState({\r\n            hint: StickerStore.hint,\r\n            items: this.getItems(StickerStore.hint)\r\n        });\r\n\r\n        const store = FileStore.getStore();\r\n        const { stickers } = hint;\r\n        loadStickersContent(store, stickers.stickers);\r\n    };\r\n\r\n    onClientUpdateLocalStickersHint = update => {\r\n        const { hint } = update;\r\n\r\n        this.setState({\r\n            hint,\r\n            items: this.getItems(hint),\r\n            previewStickerId: 0,\r\n            showPreview: false,\r\n            cancelSend: false\r\n        });\r\n\r\n        if (!hint) return;\r\n\r\n        const store = FileStore.getStore();\r\n        const { stickers } = hint;\r\n        loadStickersContent(store, stickers.stickers);\r\n    };\r\n\r\n    handleSend = sticker => {\r\n        const { cancelSend } = this.state;\r\n        if (cancelSend) return;\r\n        if (!sticker) return;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateStickerSend',\r\n            sticker\r\n        });\r\n    };\r\n\r\n    loadPreviewContent = stickerId => {\r\n        const { items } = this.state;\r\n\r\n        const sticker = items.find(x => x.sticker.id === stickerId);\r\n        if (!sticker) return;\r\n\r\n        const store = FileStore.getStore();\r\n        loadStickerContent(store, sticker, null);\r\n\r\n        let stickersPerRow = 8;\r\n        if (this.hintsRef && this.hintsRef.current) {\r\n            stickersPerRow = Math.floor(this.hintsRef.current.clientWidth / STICKER_HINT_DISPLAY_SIZE);\r\n        }\r\n\r\n        const preloadStickers = this.getNeighborStickers(stickerId, items, stickersPerRow);\r\n        preloadStickers.forEach(x => {\r\n            loadStickerContent(store, x, null);\r\n        });\r\n    };\r\n\r\n    getNeighborStickers = (stickerId, stickers, stickersPerRow) => {\r\n        if (!stickers) return [];\r\n\r\n        const indexes = [];\r\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\r\n        if (index === -1) return [];\r\n\r\n        const row = Math.floor(index / stickersPerRow);\r\n        const column = index % stickersPerRow;\r\n\r\n        const prevRow = row - 1;\r\n        const nextRow = row + 1;\r\n        const prevColumn = column - 1;\r\n        const nextColumn = column + 1;\r\n\r\n        if (prevRow >= 0) {\r\n            if (prevColumn >= 0) {\r\n                indexes.push(stickersPerRow * prevRow + prevColumn);\r\n            }\r\n            indexes.push(stickersPerRow * prevRow + column);\r\n            if (nextColumn < stickersPerRow) {\r\n                indexes.push(stickersPerRow * prevRow + nextColumn);\r\n            }\r\n        }\r\n\r\n        if (prevColumn >= 0) {\r\n            indexes.push(stickersPerRow * row + prevColumn);\r\n        }\r\n        if (nextColumn < stickersPerRow) {\r\n            indexes.push(stickersPerRow * row + nextColumn);\r\n        }\r\n\r\n        if (nextRow < Math.ceil(stickers.length / stickersPerRow)) {\r\n            if (prevColumn >= 0) {\r\n                indexes.push(stickersPerRow * nextRow + prevColumn);\r\n            }\r\n            indexes.push(stickersPerRow * nextRow + column);\r\n            if (nextColumn < stickersPerRow) {\r\n                indexes.push(stickersPerRow * nextRow + nextColumn);\r\n            }\r\n        }\r\n\r\n        return indexes.map(i => stickers[i]);\r\n    };\r\n\r\n    handleMouseEnter = event => {\r\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\r\n        const sticker = this.getSticker(stickerId);\r\n        if (!sticker) return;\r\n\r\n        if (!this.mouseDown) return;\r\n\r\n        if (this.mouseDownStickerId !== stickerId) {\r\n            this.mouseDownStickerId = null;\r\n        }\r\n        this.setState({ sticker });\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateStickerPreview',\r\n            sticker\r\n        });\r\n        this.loadPreviewContent(stickerId);\r\n    };\r\n\r\n    handleMouseDown = event => {\r\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\r\n        const sticker = this.getSticker(stickerId);\r\n        if (!sticker) return;\r\n\r\n        this.mouseDownStickerId = stickerId;\r\n        const now = Date.now();\r\n\r\n        this.setState({ sticker, timestamp: now, showPreview: false, cancelSend: false });\r\n        setTimeout(() => {\r\n            const { timestamp } = this.state;\r\n            if (timestamp === now) {\r\n                this.setState({ showPreview: true, cancelSend: true });\r\n                TdLibController.clientUpdate({\r\n                    '@type': 'clientUpdateStickerPreview',\r\n                    sticker\r\n                });\r\n            }\r\n        }, 500);\r\n\r\n        this.loadPreviewContent(stickerId);\r\n\r\n        this.mouseDown = true;\r\n        document.addEventListener('mouseup', this.handleMouseUp);\r\n\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        return false;\r\n    };\r\n\r\n    handleMouseUp = () => {\r\n        const sticker = null;\r\n        this.setState({ sticker, timestamp: 0, showPreview: false });\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateStickerPreview',\r\n            sticker\r\n        });\r\n        this.mouseDown = false;\r\n        document.removeEventListener('mouseup', this.handleMouseUp);\r\n    };\r\n\r\n    getItems = hint => {\r\n        const items = [];\r\n        if (!hint) return items;\r\n\r\n        const dict = new Map();\r\n        const { stickers, foundStickers } = hint;\r\n        if (stickers) {\r\n            stickers.stickers.forEach(x => {\r\n                items.push(x);\r\n                dict.set(x.sticker.id, x.sticker.id);\r\n            });\r\n        }\r\n        if (foundStickers) {\r\n            foundStickers.stickers.forEach(x => {\r\n                if (!dict.has(x.sticker.id)) {\r\n                    items.push(x);\r\n                    dict.set(x.sticker.id, x.sticker.id);\r\n                }\r\n            });\r\n        }\r\n\r\n        return items;\r\n    };\r\n\r\n    getSticker(stickerId) {\r\n        const { items } = this.state;\r\n\r\n        const stickerIndex = items.findIndex(x => x.sticker.id === stickerId);\r\n        return stickerIndex !== -1 ? items[stickerIndex] : null;\r\n    }\r\n\r\n    render() {\r\n        const { hint, items, sticker, showPreview } = this.state;\r\n        if (!hint) return null;\r\n        if (!items) return null;\r\n        if (!items.length) return null;\r\n\r\n        const controls = items.map(x => (\r\n            <div\r\n                className='sticker-set-dialog-item'\r\n                key={x.sticker.id}\r\n                data-sticker-id={x.sticker.id}\r\n                style={{ width: STICKER_HINT_DISPLAY_SIZE, height: STICKER_HINT_DISPLAY_SIZE }}\r\n                onClick={() => this.handleSend(x)}\r\n                onMouseEnter={this.handleMouseEnter}\r\n                onMouseDown={this.handleMouseDown}>\r\n                <Sticker\r\n                    key={x.sticker.id}\r\n                    className='sticker-set-dialog-item-sticker'\r\n                    sticker={x}\r\n                    autoplay={false}\r\n                    blur={false}\r\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\r\n                    preview\r\n                    source={StickerSourceEnum.HINTS}\r\n                />\r\n            </div>\r\n        ));\r\n\r\n        return (\r\n            <div ref={this.hintsRef} className='stickers-hint'>\r\n                {controls}\r\n                {Boolean(sticker) && showPreview && <StickerPreview sticker={sticker} />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StickersHint;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport classNames from 'classnames';\r\nimport ActionBar from './ActionBar';\r\nimport DayMeta from '../Message/DayMeta';\r\nimport FilesDropTarget from './FilesDropTarget';\r\nimport Message from '../Message/Message';\r\nimport Placeholder from './Placeholder';\r\nimport ScrollDownButton from './ScrollDownButton';\r\nimport ServiceMessage from '../Message/ServiceMessage';\r\nimport StickersHint from './StickersHint';\r\nimport { throttle, getPhotoSize, itemsInView, historyEquals } from '../../Utils/Common';\r\nimport { loadChatsContent, loadDraftContent, loadMessageContents } from '../../Utils/File';\r\nimport { canMessageBeEdited, filterDuplicateMessages, filterMessages } from '../../Utils/Message';\r\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\r\nimport { canSendMediaMessages, getChatFullInfo, getSupergroupId, isChannelChat, isPrivateChat } from '../../Utils/Chat';\r\nimport { editMessage, highlightMessage, openChat } from '../../Actions/Client';\r\nimport { MESSAGE_SLICE_LIMIT, MESSAGE_SPLIT_MAX_TIME_S, SCROLL_PRECISION } from '../../Constants';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport PlayerStore from '../../Stores/PlayerStore';\r\nimport SupergroupStore from '../../Stores/SupergroupStore';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './MessagesList.css';\r\nimport StubMessage from '../Message/StubMessage';\r\n\r\nconst ScrollBehaviorEnum = Object.freeze({\r\n    SCROLL_TO_BOTTOM: 'SCROLL_TO_BOTTOM',\r\n    SCROLL_TO_UNREAD: 'SCROLL_TO_UNREAD',\r\n    SCROLL_TO_MESSAGE: 'SCROLL_TO_MESSAGE',\r\n    KEEP_SCROLL_POSITION: 'KEEP_SCROLL_POSITION',\r\n    NONE: 'NONE'\r\n});\r\n\r\nclass MessagesList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        // console.log(`MessagesList.ctor chat_id=${props.chatId} message_id=${props.messageId}`);\r\n\r\n        // console.log('MessagesList.newSessionId ctor');\r\n        this.sessionId = Date.now();\r\n        this.state = {\r\n            prevChatId: 0,\r\n            prevMessageId: null,\r\n            playerOpened: false,\r\n            history: [],\r\n            clearHistory: false,\r\n            selectionActive: false,\r\n            separatorMessageId: 0,\r\n            scrollDownVisible: false,\r\n            replyHistory: []\r\n        };\r\n\r\n        this.listRef = React.createRef();\r\n        this.itemsRef = React.createRef();\r\n        this.scrollDownButtonRef = React.createRef();\r\n\r\n        this.defferedActions = [];\r\n        this.itemsMap = new Map();\r\n\r\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.chatId !== state.prevChatId || props.messageId !== state.prevMessageId) {\r\n            return {\r\n                prevChatId: props.chatId,\r\n                prevMessageId: props.messageId,\r\n                clearHistory: false,\r\n                selectionActive: false,\r\n                separatorMessageId: props.chatId !== state.prevChatId ? 0 : state.separatorMessageId,\r\n                scrollDownVisible:\r\n                    props.chatId === state.prevChatId && (state.scrollDownVisible || state.replyHistory.length > 0),\r\n                replyHistory: props.chatId !== state.prevChatId ? [] : state.replyHistory\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getSnapshotBeforeUpdate(prevProps, prevState) {\r\n        const list = this.listRef.current;\r\n        const { scrollTop, scrollHeight, offsetHeight } = list;\r\n\r\n        const snapshot = {\r\n            scrollTop,\r\n            scrollHeight,\r\n            offsetHeight\r\n        };\r\n\r\n        // console.log('[ml] getSnapshotBeforeUpdate', snapshot);\r\n        this.snapshot = snapshot;\r\n        return snapshot;\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { chatId, messageId } = this.props;\r\n        const { scrollDownVisible } = this.state;\r\n\r\n        const list = this.listRef.current;\r\n\r\n        // console.log(\r\n        //     `[ml] componentDidUpdate\r\n        //     scrollBehaviorNone=${this.scrollBehaviorNone}\r\n        //     scrollDownVisible=${scrollDownVisible}\r\n        //     list.scrollTop=${list.scrollTop}\r\n        //     list.scrollHeight=${list.scrollHeight}\r\n        //     list.offsetHeight=${list.offsetHeight}`\r\n        // );\r\n\r\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\r\n            this.handleSelectChat(chatId, prevProps.chatId, messageId, prevProps.messageId);\r\n        } else {\r\n            if (!this.scrollBehaviorNone) {\r\n                this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, snapshot);\r\n            }\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, messageId, theme } = this.props;\r\n        const { playerOpened, history, dragging, clearHistory, selectionActive, scrollDownVisible } = this.state;\r\n\r\n        if (nextProps.theme !== theme) {\r\n            // console.log('[ml] shouldComponentUpdate theme');\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            // console.log('[ml] shouldComponentUpdate chatId');\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.messageId !== messageId) {\r\n            // console.log('[ml] shouldComponentUpdate messageId');\r\n            return true;\r\n        }\r\n\r\n        if (nextState.scrollDownVisible !== scrollDownVisible) {\r\n            // console.log('[ml] shouldComponentUpdate scrollDownVisible');\r\n            return true;\r\n        }\r\n\r\n        if (nextState.playerOpened !== playerOpened) {\r\n            // console.log('[ml] shouldComponentUpdate playerOpened');\r\n            return true;\r\n        }\r\n\r\n        if (!historyEquals(nextState.history, history)) {\r\n            // console.trace('[ml] shouldComponentUpdate history', nextState.history, history);\r\n            return true;\r\n        }\r\n\r\n        if (nextState.dragging !== dragging) {\r\n            // console.log('[ml] shouldComponentUpdate dragging');\r\n            return true;\r\n        }\r\n\r\n        if (nextState.clearHistory !== clearHistory) {\r\n            // console.log('[ml] shouldComponentUpdate clearHistory');\r\n            return true;\r\n        }\r\n\r\n        if (nextState.selectionActive !== selectionActive) {\r\n            // console.log('[ml] shouldComponentUpdate selectionActive');\r\n            return true;\r\n        }\r\n\r\n        // console.log('[ml] shouldComponentUpdate false');\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\r\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\r\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\r\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatLastMessage);\r\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateSelection);\r\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateSelection);\r\n        MessageStore.on('clientUpdateOpenReply', this.onClientUpdateOpenReply);\r\n        MessageStore.on('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\r\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\r\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\r\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\r\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\r\n        PlayerStore.on('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\r\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\r\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\r\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\r\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatLastMessage);\r\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateSelection);\r\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateSelection);\r\n        MessageStore.off('clientUpdateOpenReply', this.onClientUpdateOpenReply);\r\n        MessageStore.off('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\r\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\r\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\r\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\r\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\r\n        PlayerStore.off('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\r\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\r\n    }\r\n\r\n    onKeyDown = event => {\r\n        // if (event.keyCode === 27) {\r\n        //     if (MessageStore.selectedItems.size > 0) {\r\n        //         console.log('[k] messagesList onKeyDown');\r\n        //         clearSelection();\r\n        //         event.stopPropagation();\r\n        //         event.preventDefault();\r\n        //     }\r\n        // }\r\n    };\r\n\r\n    onClientUpdateTryEditMessage = async update => {\r\n        if (this.completed) {\r\n            const { history } = this.state;\r\n\r\n            for (let i = history.length - 1; i >= 0; i--) {\r\n                const message = history[i];\r\n                if (canMessageBeEdited(message.chat_id, message.id)) {\r\n                    editMessage(message.chat_id, message.id);\r\n\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        const result = await TdLibController.send({\r\n            '@type': 'searchChatMessages',\r\n            chat_id: this.props.chatId,\r\n            query: '',\r\n            sender_user_id: UserStore.getMyId(),\r\n            from_message_id: 0,\r\n            offset: 0,\r\n            limit: 100,\r\n            filter: { '@type': 'searchMessagesFilterEmpty' }\r\n        });\r\n\r\n        for (let i = 0; i < result.messages.length; i++) {\r\n            const message = result.messages[i];\r\n            if (canMessageBeEdited(message.chat_id, message.id)) {\r\n                editMessage(message.chat_id, message.id);\r\n\r\n                return;\r\n            }\r\n        }\r\n    };\r\n\r\n    onClientUpdateDialogsReady = async update => {\r\n        const { list } = update;\r\n        if (!list) return;\r\n        if (list['@type'] !== 'chatListMain') return;\r\n\r\n        const { history } = this.state;\r\n        if (history && history.length > 0) return;\r\n\r\n        await FileStore.initDB(async () => {\r\n            const { chatId, messageId } = this.props;\r\n            if (chatId) {\r\n                const chat = ChatStore.get(chatId);\r\n                if (chat) {\r\n                    const { type } = chat;\r\n                    switch (type['@type']) {\r\n                        case 'chatTypePrivate':\r\n                        case 'chatTypeSecret': {\r\n                            await TdLibController.send({\r\n                                '@type': 'createPrivateChat',\r\n                                user_id: type.user_id,\r\n                                force: false\r\n                            });\r\n                            break;\r\n                        }\r\n                        case 'chatTypeBasicGroup': {\r\n                            await TdLibController.send({\r\n                                '@type': 'createBasicGroupChat',\r\n                                basic_group_id: type.basic_group_id,\r\n                                force: false\r\n                            });\r\n                            break;\r\n                        }\r\n                        case 'chatTypeSupergroup': {\r\n                            await TdLibController.send({\r\n                                '@type': 'createSupergroupChat',\r\n                                supergroup_id: type.supergroup_id,\r\n                                force: false\r\n                            });\r\n                            break;\r\n                        }\r\n                    }\r\n                    this.handleSelectChat(chatId, 0, messageId, 0);\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    onClientUpdateFocusWindow = update => {\r\n        const { focused } = update;\r\n        if (focused) {\r\n            this.defferedActions.forEach(x => x());\r\n            this.defferedActions = [];\r\n        }\r\n    };\r\n\r\n    onClientUpdateOpenReply = update => {\r\n        const { chatId, messageId } = update;\r\n        const { replyHistory } = this.state;\r\n\r\n        if (this.props.chatId !== chatId) {\r\n            return;\r\n        }\r\n\r\n        const lastItem = replyHistory.length > 0 ? replyHistory[replyHistory.length - 1] : null;\r\n        if (lastItem && lastItem.chatId === chatId && lastItem.messageId === messageId) {\r\n            return;\r\n        }\r\n\r\n        replyHistory.push({ chatId, messageId });\r\n    };\r\n\r\n    onClientUpdateMediaActive = update => {\r\n        const list = this.listRef.current;\r\n\r\n        const prevOffsetHeight = list.offsetHeight;\r\n        const prevScrollTop = list.scrollTop;\r\n        this.setState({ playerOpened: true }, () => {\r\n            if (list.scrollTop === prevScrollTop) {\r\n                list.scrollTop += Math.abs(prevOffsetHeight - list.offsetHeight);\r\n            }\r\n        });\r\n    };\r\n\r\n    onClientUpdateMediaEnding = udpate => {\r\n        const list = this.listRef.current;\r\n\r\n        this.prevOffsetHeight = list.offsetHeight;\r\n        this.prevScrollTop = list.scrollTop;\r\n    };\r\n\r\n    onClientUpdateMediaEnd = udpate => {\r\n        const list = this.listRef.current;\r\n\r\n        //const prevOffsetHeight = list.offsetHeight;\r\n        //const prevScrollTop = list.scrollTop;\r\n\r\n        this.setState({ playerOpened: false }, () => {\r\n            if (list.scrollTop === this.prevScrollTop) {\r\n                list.scrollTop -= Math.abs(this.prevOffsetHeight - list.offsetHeight);\r\n            }\r\n        });\r\n    };\r\n\r\n    onClientUpdateSelection = update => {\r\n        this.setState({\r\n            selectionActive: MessageStore.selectedItems.size > 0\r\n        });\r\n    };\r\n\r\n    onClientUpdateClearHistory = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (chatId === update.chatId) {\r\n            this.setState({ clearHistory: update.inProgress });\r\n        }\r\n    };\r\n\r\n    onUpdateMessageContent = update => {\r\n        const { chatId } = this.props;\r\n        const { history } = this.state;\r\n        const { chat_id, message_id } = update;\r\n\r\n        if (chatId !== chat_id) return;\r\n\r\n        if (history.findIndex(x => x.id === message_id) !== -1) {\r\n            const message = MessageStore.get(chat_id, message_id);\r\n            if (!message) return;\r\n\r\n            const store = FileStore.getStore();\r\n            loadMessageContents(store, [message]);\r\n        }\r\n    };\r\n\r\n    onUpdateChatLastMessage = update => {\r\n        const { chatId } = this.props;\r\n        if (chatId !== update.chat_id) return;\r\n    };\r\n\r\n    onUpdateMessageSendSucceeded = update => {\r\n        if (!this.completed) return;\r\n\r\n        const { message, old_message_id } = update;\r\n        const { chatId } = this.props;\r\n        if (chatId !== message.chat_id) return;\r\n\r\n        // let handleSendSucceeded = false;\r\n        // const { content } = message;\r\n        // switch (content['@type']) {\r\n        //     case 'messagePoll': {\r\n        //         handleSendSucceeded = true;\r\n        //         break;\r\n        //     }\r\n        // }\r\n        //\r\n        // if (!handleSendSucceeded) return;\r\n\r\n        const scrollBehavior = message.is_outgoing\r\n            ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM\r\n            : ScrollBehaviorEnum.KEEP_SCROLL_POSITION;\r\n\r\n        this.replaceMessage(old_message_id, message, () => {\r\n            if (scrollBehavior !== ScrollBehaviorEnum.KEEP_SCROLL_POSITION) {\r\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\r\n            }\r\n\r\n            this.updateItemsInView();\r\n        });\r\n\r\n        const store = FileStore.getStore();\r\n        loadMessageContents(store, [message]);\r\n        this.viewMessages([message]);\r\n    };\r\n\r\n    onUpdateNewMessage = update => {\r\n        if (!this.completed) return;\r\n\r\n        const { message } = update;\r\n        const { chatId } = this.props;\r\n        if (chatId !== message.chat_id) return;\r\n\r\n        const { date } = message;\r\n        if (date === 0) return;\r\n\r\n        const list = this.listRef.current;\r\n\r\n        let scrollBehavior = message.is_outgoing ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM : ScrollBehaviorEnum.NONE;\r\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\r\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\r\n        }\r\n\r\n        const newState = message.is_outgoing ? { scrollDownVisible: false } : {};\r\n\r\n        const history = [message];\r\n        this.scrollBehaviorNone = true;\r\n        this.insertPrevious(filterMessages(history), newState, () => {\r\n            this.scrollBehaviorNone = false;\r\n            this.handleScrollBehavior(scrollBehavior, this.snapshot);\r\n        });\r\n\r\n        const store = FileStore.getStore();\r\n        loadMessageContents(store, history);\r\n        this.viewMessages(history);\r\n    };\r\n\r\n    onUpdateDeleteMessages = update => {\r\n        const { chatId } = this.props;\r\n        const { chat_id, is_permanent, message_ids } = update;\r\n        if (chatId !== chat_id) return;\r\n\r\n        if (!is_permanent) return;\r\n\r\n        this.deleteHistory(message_ids);\r\n    };\r\n\r\n    updateItemsInView = () => {\r\n        if (!this.messages) return;\r\n\r\n        const messages = new Map();\r\n        const items = itemsInView(this.listRef, this.itemsRef);\r\n        for (let i = 0; i < items.length; i++) {\r\n            const messageWrapper = this.messages[items[i]];\r\n            if (messageWrapper) {\r\n                const message = messageWrapper;\r\n                const { chatId, messageId } = message.props;\r\n                const key = `${chatId}_${messageId}`;\r\n                messages.set(key, key);\r\n            }\r\n        }\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMessagesInView',\r\n            messages: messages\r\n        });\r\n        return;\r\n\r\n        if (!messages.length) return;\r\n\r\n        /*let ids = messages.map(x => x.id);\r\n        console.log('[perf] load_messages_contents ids=[' + ids + ']');\r\n\r\n                let messagesMap = new Map(messages.map((i) => [i.id, i]));\r\n\r\n                if (this.previousMessages){\r\n                    let cancelMessages = [];\r\n                    for (let i = 0; i < this.previousMessages.length; i++){\r\n                        if (!messagesMap.has(this.previousMessages[i].id)){\r\n                            cancelMessages.push(this.previousMessages[i]);\r\n                        }\r\n                    }\r\n                    if (cancelMessages.length > 0) {\r\n                        this.cancelLoadMessageContents(cancelMessages);\r\n                    }\r\n                }\r\n                this.previousMessages = messages;*/\r\n\r\n        const store = FileStore.getStore();\r\n        loadMessageContents(store, messages);\r\n    };\r\n\r\n    async handleSelectChat(chatId, previousChatId, messageId, previousMessageId) {\r\n        const chat = ChatStore.get(chatId);\r\n        const previousChat = ChatStore.get(previousChatId);\r\n\r\n        //console.log('MessagesList.newSessionId handleSelectChat');\r\n        this.sessionId = Date.now();\r\n        this.loading = false;\r\n        this.completed = false;\r\n        this.loadMigratedHistory = false;\r\n        this.defferedActions = [];\r\n\r\n        if (chat) {\r\n            TdLibController.send({\r\n                '@type': 'openChat',\r\n                chat_id: chat.id\r\n            });\r\n\r\n            const unread = !messageId && chat.unread_count > 0;\r\n            const fromMessageId =\r\n                unread && chat.unread_count > 1 ? chat.last_read_inbox_message_id : messageId ? messageId : 0;\r\n            const offset = (unread && chat.unread_count > 1) || messageId ? -1 - MESSAGE_SLICE_LIMIT : 0;\r\n            const limit =\r\n                (unread && chat.unread_count > 1) || messageId ? 2 * MESSAGE_SLICE_LIMIT : MESSAGE_SLICE_LIMIT;\r\n\r\n            this.loading = true;\r\n            const sessionId = this.sessionId;\r\n            const result = await TdLibController.send({\r\n                '@type': 'getChatHistory',\r\n                chat_id: chat.id,\r\n                from_message_id: fromMessageId,\r\n                offset: offset,\r\n                limit: limit\r\n            }).finally(() => {\r\n                this.loading = false;\r\n            });\r\n\r\n            if (sessionId !== this.sessionId) {\r\n                return;\r\n            }\r\n\r\n            if (chat.last_message) {\r\n                this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\r\n            } else {\r\n                this.completed = true;\r\n            }\r\n\r\n            MessageStore.setItems(result.messages);\r\n            result.messages.reverse();\r\n\r\n            let separatorMessageId = this.state.separatorMessageId;\r\n            if (chatId !== previousChatId) {\r\n                separatorMessageId = Number.MAX_VALUE;\r\n                if (chat && chat.unread_count > 1) {\r\n                    for (let i = result.messages.length - 1; i >= 0; i--) {\r\n                        const { id } = result.messages[i];\r\n                        if (\r\n                            !result.messages[i].is_outgoing &&\r\n                            id > chat.last_read_inbox_message_id &&\r\n                            id < separatorMessageId\r\n                        ) {\r\n                            separatorMessageId = id;\r\n                        } else {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                separatorMessageId = separatorMessageId === Number.MAX_VALUE ? 0 : separatorMessageId;\r\n            }\r\n\r\n            let scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\r\n            if (messageId) {\r\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_MESSAGE;\r\n            } else if (unread && separatorMessageId) {\r\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_UNREAD;\r\n            }\r\n\r\n            this.replace(separatorMessageId, result.messages, () => {\r\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\r\n                if (messageId) {\r\n                    highlightMessage(chatId, messageId);\r\n                }\r\n            });\r\n\r\n            // load files\r\n            const store = FileStore.getStore();\r\n            loadMessageContents(store, result.messages);\r\n            this.viewMessages(result.messages);\r\n\r\n            loadChatsContent(store, [chatId]);\r\n            loadDraftContent(store, chatId);\r\n\r\n            this.loadIncompleteHistory(result);\r\n\r\n            // load full info\r\n            getChatFullInfo(chat.id);\r\n        } else {\r\n            this.loading = true;\r\n            this.replace(0, [], () => {\r\n                this.loading = false;\r\n            });\r\n        }\r\n\r\n        if (previousChat && previousChatId !== chatId) {\r\n            TdLibController.send({\r\n                '@type': 'closeChat',\r\n                chat_id: previousChatId\r\n            });\r\n        }\r\n    }\r\n\r\n    viewMessages(messages) {\r\n        if (!messages) return;\r\n        if (messages.length === 0) return;\r\n        if (!messages[0].chat_id) return;\r\n\r\n        const viewAction = () => {\r\n            TdLibController.send({\r\n                '@type': 'viewMessages',\r\n                chat_id: messages[0].chat_id,\r\n                message_ids: messages.map(x => x.id)\r\n            });\r\n        };\r\n\r\n        if (window.hasFocus) {\r\n            viewAction();\r\n        } else {\r\n            this.defferedActions.push(viewAction);\r\n        }\r\n    }\r\n\r\n    cancelLoadMessageContents(messages) {\r\n        //return;\r\n        for (let i = messages.length - 1; i >= 0; i--) {\r\n            let message = messages[i];\r\n            if (message && message.content) {\r\n                switch (message.content['@type']) {\r\n                    case 'messagePhoto': {\r\n                        let [id, pid] = this.getMessagePhoto(message);\r\n                        if (pid) {\r\n                            let obj = getPhotoSize(message.content.photo.sizes);\r\n                            if (!obj.blob) {\r\n                                FileStore.cancelGetRemoteFile(id, message);\r\n                            }\r\n                        }\r\n                        break;\r\n                    }\r\n                    case 'messageSticker': {\r\n                        let [id, pid] = this.getMessageSticker(message);\r\n                        if (pid) {\r\n                            let obj = message.content.sticker.sticker;\r\n                            if (!obj.blob) {\r\n                                FileStore.cancelGetRemoteFile(id, message);\r\n                            }\r\n                        }\r\n                        break;\r\n                    }\r\n                    default:\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    loadIncompleteHistory = async result => {\r\n        const MAX_ITERATIONS = 5;\r\n        let incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\r\n\r\n        for (let i = 0; i < MAX_ITERATIONS && incomplete; i++) {\r\n            result = await this.onLoadNext();\r\n            incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\r\n        }\r\n    };\r\n\r\n    onLoadNext = async () => {\r\n        const { chatId } = this.props;\r\n        const { history } = this.state;\r\n\r\n        if (!chatId) return;\r\n        if (this.loading) return;\r\n\r\n        if (this.loadMigratedHistory) {\r\n            this.onLoadMigratedHistory();\r\n            return;\r\n        }\r\n\r\n        const fromMessageId = history && history.length > 0 ? history[0].id : 0;\r\n\r\n        this.loading = true;\r\n        const sessionId = this.sessionId;\r\n        console.log('[p] getChatHistory', fromMessageId);\r\n        let result = await TdLibController.send({\r\n            '@type': 'getChatHistory',\r\n            chat_id: chatId,\r\n            from_message_id: fromMessageId,\r\n            offset: 0,\r\n            limit: MESSAGE_SLICE_LIMIT\r\n        }).finally(() => {\r\n            this.loading = false;\r\n        });\r\n        console.log('[p] getChatHistory result', fromMessageId, result);\r\n\r\n        if (sessionId !== this.sessionId) {\r\n            return;\r\n        }\r\n\r\n        if (this.props.chatId !== chatId) {\r\n            return;\r\n        }\r\n\r\n        MessageStore.setItems(result.messages);\r\n        result.messages.reverse();\r\n        this.insertNext(filterMessages(result.messages), () => {\r\n            if (!result.messages.length) {\r\n                this.onLoadMigratedHistory();\r\n            }\r\n        });\r\n\r\n        const store = FileStore.getStore();\r\n        loadMessageContents(store, result.messages);\r\n        this.viewMessages(result.messages);\r\n\r\n        return result;\r\n    };\r\n\r\n    onLoadMigratedHistory = async () => {\r\n        const { chatId } = this.props;\r\n        const { history } = this.state;\r\n\r\n        if (!chatId) return;\r\n        if (this.loading) return;\r\n\r\n        const supergroupId = getSupergroupId(chatId);\r\n        if (!supergroupId) return;\r\n\r\n        const fullInfo = SupergroupStore.getFullInfo(supergroupId);\r\n        if (!fullInfo) return;\r\n        if (!fullInfo.upgraded_from_basic_group_id) return;\r\n\r\n        this.loadMigratedHistory = true;\r\n\r\n        const basicGroupChat = await TdLibController.send({\r\n            '@type': 'createBasicGroupChat',\r\n            basic_group_id: fullInfo.upgraded_from_basic_group_id\r\n        });\r\n\r\n        if (!basicGroupChat) return;\r\n\r\n        const fromMessageId = history.length > 0 && history[0].chat_id === basicGroupChat.id ? history[0].id : 0;\r\n\r\n        this.loading = true;\r\n        const sessionId = this.sessionId;\r\n        const result = await TdLibController.send({\r\n            '@type': 'getChatHistory',\r\n            chat_id: basicGroupChat.id,\r\n            from_message_id: fromMessageId,\r\n            offset: 0,\r\n            limit: MESSAGE_SLICE_LIMIT\r\n        }).finally(() => {\r\n            this.loading = false;\r\n        });\r\n\r\n        if (sessionId !== this.sessionId) {\r\n            return;\r\n        }\r\n\r\n        if (this.props.chatId !== chatId) {\r\n            return;\r\n        }\r\n\r\n        MessageStore.setItems(result.messages);\r\n        result.messages.reverse();\r\n        this.insertNext(filterMessages(result.messages));\r\n\r\n        const store = FileStore.getStore();\r\n        loadMessageContents(store, result.messages);\r\n        this.viewMessages(result.messages);\r\n    };\r\n\r\n    onLoadPrevious = async () => {\r\n        const { chatId } = this.props;\r\n        const { history } = this.state;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n\r\n        if (!chat) return;\r\n        if (this.loading) return;\r\n        if (this.completed) return;\r\n\r\n        const fromMessageId = history && history.length > 0 ? history[history.length - 1].id : 0;\r\n\r\n        this.loading = true;\r\n        const sessionId = this.sessionId;\r\n        let result = await TdLibController.send({\r\n            '@type': 'getChatHistory',\r\n            chat_id: chatId,\r\n            from_message_id: fromMessageId,\r\n            offset: -MESSAGE_SLICE_LIMIT - 1,\r\n            limit: MESSAGE_SLICE_LIMIT + 1\r\n        }).finally(() => {\r\n            this.loading = false;\r\n        });\r\n\r\n        if (sessionId !== this.sessionId) {\r\n            return;\r\n        }\r\n\r\n        if (this.props.chatId !== chatId) {\r\n            return;\r\n        }\r\n\r\n        if (chat.last_message) {\r\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\r\n        } else {\r\n            this.completed = true;\r\n        }\r\n\r\n        filterDuplicateMessages(result, this.state.history);\r\n\r\n        MessageStore.setItems(result.messages);\r\n        result.messages.reverse();\r\n        this.scrollBehaviorNone = true;\r\n        this.insertPrevious(filterMessages(result.messages), {}, () => {\r\n            this.scrollBehaviorNone = false;\r\n        });\r\n\r\n        const store = FileStore.getStore();\r\n        loadMessageContents(store, result.messages);\r\n        this.viewMessages(result.messages);\r\n\r\n        return result;\r\n    };\r\n\r\n    replace(separatorMessageId, history, callback) {\r\n        this.setState({ separatorMessageId, history }, callback);\r\n    }\r\n\r\n    replaceMessage(oldMessageId, message, callback) {\r\n        if (!message) {\r\n            if (callback) callback();\r\n            return;\r\n        }\r\n\r\n        this.setState(\r\n            {\r\n                history: this.state.history.filter(x => x.id !== oldMessageId).concat([message])\r\n            },\r\n            callback\r\n        );\r\n    }\r\n\r\n    insertNext(history, callback) {\r\n        if (history.length === 0) {\r\n            if (callback) callback();\r\n            return;\r\n        }\r\n\r\n        this.setState({ history: history.concat(this.state.history) }, callback);\r\n    }\r\n\r\n    insertPrevious(history, newState, callback) {\r\n        if (history.length === 0) {\r\n            if (callback) callback();\r\n            return;\r\n        }\r\n\r\n        this.setState({ history: this.state.history.concat(history), ...newState }, callback);\r\n    }\r\n\r\n    deleteHistory(message_ids, callback) {\r\n        const { history } = this.state;\r\n        if (history.length === 0) {\r\n            if (callback) callback();\r\n            return;\r\n        }\r\n\r\n        const map = new Map(message_ids.map(x => [x, x]));\r\n        this.setState({ history: history.filter(x => !map.has(x.id)) }, callback);\r\n    }\r\n\r\n    handleScroll = () => {\r\n        const { scrollDownVisible, replyHistory, history } = this.state;\r\n        const list = this.listRef.current;\r\n\r\n        // console.log(\r\n        //     `[ml] handleScroll\r\n        //     list.scrollTop=${list.scrollTop}\r\n        //     list.offsetHeight=${list.offsetHeight}\r\n        //     list.scrollHeight=${list.scrollHeight}`\r\n        // );\r\n\r\n        this.updateItemsInView();\r\n\r\n        if (list.scrollTop <= SCROLL_PRECISION) {\r\n            this.onLoadNext();\r\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\r\n            this.onLoadPrevious();\r\n        }\r\n\r\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\r\n            if (this.completed && scrollDownVisible) {\r\n                if (this.prevScrollTop !== list.scrollTop && this.prevScrollTop && this.prevHistory === history) {\r\n                    this.setState({\r\n                        scrollDownVisible: false,\r\n                        replyHistory: []\r\n                    });\r\n                } else if (!replyHistory.length) {\r\n                    this.setState({\r\n                        scrollDownVisible: false\r\n                    });\r\n                }\r\n            }\r\n        } else {\r\n            if (!scrollDownVisible) {\r\n                this.setState({ scrollDownVisible: true });\r\n            }\r\n        }\r\n\r\n        this.prevScrollTop = list.scrollTop;\r\n        this.prevHistory = history;\r\n    };\r\n\r\n    handleScrollBehavior = (scrollBehavior, snapshot) => {\r\n        const { chatId, messageId } = this.props;\r\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot || {\r\n            scrollTop: 0,\r\n            scrollHeight: 0,\r\n            offsetHeight: 0\r\n        };\r\n\r\n        // console.log(\r\n        //     `[ml] handleScrollBehavior\r\n        //     scrollBehavior=${scrollBehavior}\r\n        //     snapshot.scrollTop=${scrollTop}\r\n        //     snapshot.offsetHeight=${offsetHeight}\r\n        //     snapshot.scrollHeight=${scrollHeight}`\r\n        // );\r\n\r\n        switch (scrollBehavior) {\r\n            case ScrollBehaviorEnum.SCROLL_TO_BOTTOM: {\r\n                this.scrollToBottom();\r\n                break;\r\n            }\r\n            case ScrollBehaviorEnum.SCROLL_TO_MESSAGE: {\r\n                this.scrollToMessage();\r\n                break;\r\n            }\r\n            case ScrollBehaviorEnum.SCROLL_TO_UNREAD: {\r\n                this.scrollToUnread();\r\n                break;\r\n            }\r\n            case ScrollBehaviorEnum.KEEP_SCROLL_POSITION: {\r\n                this.keepScrollPosition(snapshot);\r\n                break;\r\n            }\r\n            case ScrollBehaviorEnum.NONE: {\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    keepScrollPosition = snapshot => {\r\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\r\n        const list = this.listRef.current;\r\n\r\n        // console.log(\r\n        //     `[ml] keepScrollPosition before\r\n        //     list.scrollTop=${list.scrollTop}\r\n        //     list.offsetHeight=${list.offsetHeight}\r\n        //     list.scrollHeight=${list.scrollHeight}`\r\n        // );\r\n\r\n        list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\r\n\r\n        // console.log(\r\n        //     `[ml] keepScrollPosition after\r\n        //     list.scrollTop=${list.scrollTop}\r\n        //     list.offsetHeight=${list.offsetHeight}\r\n        //     list.scrollHeight=${list.scrollHeight}`\r\n        // );\r\n    };\r\n\r\n    scrollToUnread = () => {\r\n        const { chatId, messageId } = this.props;\r\n        const { history } = this.state;\r\n        const list = this.listRef.current;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        const pinnedMessageMargin = 0; //chat && chat.pinned_message_id ? 55 : 0;\r\n\r\n        // console.log(\r\n        //     `MessagesList.scrollToUnread before\r\n        //     chatId=${chatId} messageId=${messageId}\r\n        //     list.scrollTop=${list.scrollTop}\r\n        //     list.offsetHeight=${list.offsetHeight}\r\n        //     list.scrollHeight=${list.scrollHeight}`\r\n        // );\r\n\r\n        let scrolled = false;\r\n        for (let i = 0; i < history.length; i++) {\r\n            let itemComponent = this.itemsMap.get(i);\r\n            let item = ReactDOM.findDOMNode(itemComponent);\r\n            if (item) {\r\n                if (itemComponent.props.showUnreadSeparator) {\r\n                    list.scrollTop = item.offsetTop - pinnedMessageMargin; // + unread messages margin-top\r\n                    scrolled = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        // console.log(\r\n        //     `MessagesList.scrollToUnread after\r\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\r\n        //     list.scrollTop=${list.scrollTop}\r\n        //     list.offsetHeight=${list.offsetHeight}\r\n        //     list.scrollHeight=${list.scrollHeight}`\r\n        // );\r\n\r\n        if (!scrolled) {\r\n            this.scrollToBottom();\r\n        }\r\n    };\r\n\r\n    scrollToMessage = () => {\r\n        const { chatId, messageId } = this.props;\r\n        const { history } = this.state;\r\n        const list = this.listRef.current;\r\n\r\n        // console.log(\r\n        //     `MessagesList.scrollToMessage before\r\n        //     chatId=${chatId} messageId=${messageId}\r\n        //     list.scrollTop=${list.scrollTop}\r\n        //     list.offsetHeight=${list.offsetHeight}\r\n        //     list.scrollHeight=${list.scrollHeight}`,\r\n        //     this.itemsMap\r\n        // );\r\n\r\n        let scrolled = false;\r\n        for (let i = 0; i < history.length; i++) {\r\n            const itemComponent = this.itemsMap.get(i);\r\n            const node = ReactDOM.findDOMNode(itemComponent);\r\n            if (node) {\r\n                if (itemComponent.props.messageId === messageId) {\r\n                    list.scrollTop = node.offsetTop - list.offsetHeight / 2.0;\r\n                    scrolled = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        // console.log(\r\n        //     `MessagesList.scrollToMessage after\r\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\r\n        //     list.scrollTop=${list.scrollTop}\r\n        //     list.offsetHeight=${list.offsetHeight}\r\n        //     list.scrollHeight=${list.scrollHeight}`\r\n        // );\r\n\r\n        // if (!scrolled) {\r\n        //     this.scrollToBottom();\r\n        // }\r\n    };\r\n\r\n    scrollToBottom = () => {\r\n        const { chatId, messageId } = this.props;\r\n        const list = this.listRef.current;\r\n\r\n        // console.log(\r\n        //     `MessagesList.scrollToBottom before\r\n        //     chatId=${chatId} messageId=${messageId}\r\n        //     list.scrollTop=${list.scrollTop}\r\n        //     list.offsetHeight=${list.offsetHeight}\r\n        //     list.scrollHeight=${list.scrollHeight}`\r\n        // );\r\n\r\n        const nextScrollTop = list.scrollHeight - list.offsetHeight;\r\n        if (nextScrollTop !== list.scrollTop) {\r\n            list.scrollTop = list.scrollHeight - list.offsetHeight;\r\n\r\n            // console.log(\r\n            //     `MessagesList.scrollToBottom after\r\n            // chatId=${chatId} messageId=${messageId}\r\n            // list.scrollTop=${list.scrollTop}\r\n            // list.offsetHeight=${list.offsetHeight}\r\n            // list.scrollHeight=${list.scrollHeight}`\r\n            // );\r\n        } else {\r\n            // console.log(\r\n            //     `MessagesList.scrollToBottom after (no changes)\r\n            // chatId=${chatId} messageId=${messageId}\r\n            // list.scrollTop=${list.scrollTop}\r\n            // list.offsetHeight=${list.offsetHeight}\r\n            // list.scrollHeight=${list.scrollHeight}`\r\n            // );\r\n        }\r\n    };\r\n\r\n    scrollToStart = async () => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        // console.log('MessagesList.newSessionId scrollToStart');\r\n        this.sessionId = Date.now();\r\n        this.loading = false;\r\n        this.completed = false;\r\n\r\n        const fromMessageId = 0;\r\n        const offset = 0;\r\n        const limit = MESSAGE_SLICE_LIMIT;\r\n\r\n        this.loading = true;\r\n        const sessionId = this.sessionId;\r\n        const result = await TdLibController.send({\r\n            '@type': 'getChatHistory',\r\n            chat_id: chat.id,\r\n            from_message_id: fromMessageId,\r\n            offset: offset,\r\n            limit: limit\r\n        }).finally(() => {\r\n            this.loading = false;\r\n        });\r\n\r\n        if (sessionId !== this.sessionId) {\r\n            return;\r\n        }\r\n\r\n        if (this.props.chatId !== chatId) {\r\n            return;\r\n        }\r\n\r\n        if (chat.last_message) {\r\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\r\n        } else {\r\n            this.completed = true;\r\n        }\r\n        // console.log('MessagesList.scrollToStart scrollDown', false);\r\n        this.setState({ scrollDownVisible: false, replyHistory: [] });\r\n\r\n        MessageStore.setItems(result.messages);\r\n        result.messages.reverse();\r\n\r\n        this.replace(this.state.separatorMessageId, result.messages, () => {\r\n            this.handleScrollBehavior(ScrollBehaviorEnum.SCROLL_TO_BOTTOM, this.snapshot);\r\n        });\r\n\r\n        // load files\r\n        const store = FileStore.getStore();\r\n        loadMessageContents(store, result.messages);\r\n        this.viewMessages(result.messages);\r\n\r\n        this.loadIncompleteHistory(result);\r\n    };\r\n\r\n    handleListDragEnter = event => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n        const { chatId } = this.props;\r\n        if (!canSendMediaMessages(chatId)) return;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateDragging',\r\n            dragging: true,\r\n            files: event.dataTransfer.files\r\n        });\r\n    };\r\n\r\n    handleScrollDownClick = event => {\r\n        const { replyHistory } = this.state;\r\n\r\n        if (replyHistory.length > 0) {\r\n            const lastReply = replyHistory.pop();\r\n            if (lastReply) {\r\n                const { chatId, messageId } = lastReply;\r\n                if (chatId === this.props.chatId) {\r\n                    openChat(chatId, messageId);\r\n                }\r\n            }\r\n        } else {\r\n            this.scrollToStart();\r\n        }\r\n    };\r\n\r\n    showMessageTitle(message, prevMessage, isFirst) {\r\n        if (!message) return false;\r\n\r\n        const { chat_id, date, is_outgoing, sender_user_id, content } = message;\r\n\r\n        if (isFirst) {\r\n            return true;\r\n        }\r\n\r\n        if (isChannelChat(chat_id)) {\r\n            return true;\r\n        }\r\n\r\n        return (\r\n            prevMessage &&\r\n            (isServiceMessage(prevMessage) ||\r\n                prevMessage.content['@type'] === 'messageSticker' ||\r\n                prevMessage.content['@type'] === 'messageVideoNote' ||\r\n                sender_user_id !== prevMessage.sender_user_id ||\r\n                is_outgoing !== prevMessage.is_outgoing ||\r\n                date - prevMessage.date > MESSAGE_SPLIT_MAX_TIME_S)\r\n        );\r\n    }\r\n\r\n    showMessageDate(message, prevMessage, isFirst) {\r\n        if (isFirst) {\r\n            return true;\r\n        }\r\n\r\n        const date = new Date(message.date * 1000);\r\n        const prevDate = prevMessage ? new Date(prevMessage.date * 1000) : date;\r\n\r\n        if (\r\n            date.getFullYear() !== prevDate.getFullYear() ||\r\n            date.getMonth() !== prevDate.getMonth() ||\r\n            date.getDate() !== prevDate.getDate()\r\n        ) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        const { chatId } = this.props;\r\n        const { history, separatorMessageId, clearHistory, selectionActive, scrollDownVisible } = this.state;\r\n\r\n        // console.log('[ml] render ', history);\r\n\r\n        // const isChannel = isChannelChat(chatId);\r\n\r\n        this.itemsMap.clear();\r\n        this.messages = clearHistory\r\n            ? null\r\n            : history.map((x, i) => {\r\n                /// message id=5 prev\r\n                /// message id=6 current\r\n                /// message id=7 next\r\n                /// ...\r\n                /// message id=10\r\n\r\n                const prevMessage = i > 0 ? history[i - 1] : null;\r\n                const nextMessage = i < history.length - 1 ? history[i + 1] : null;\r\n\r\n                const showDate = this.showMessageDate(x, prevMessage, i === 0);\r\n\r\n                let m = null;\r\n                if (isServiceMessage(x)) {\r\n                    m = (\r\n                        <ServiceMessage\r\n                            key={`chat_id=${x.chat_id} message_id=${x.id} show_date=${showDate}`}\r\n                            ref={el => this.itemsMap.set(i, el)}\r\n                            chatId={x.chat_id}\r\n                            messageId={x.id}\r\n                            showUnreadSeparator={separatorMessageId === x.id}\r\n                        />\r\n                    );\r\n                } else {\r\n                    const showTitle = this.showMessageTitle(x, prevMessage, i === 0);\r\n                    const nextShowTitle = this.showMessageTitle(nextMessage, x, false);\r\n\r\n                    const showTail = !nextMessage\r\n                        || isServiceMessage(nextMessage)\r\n                        || nextMessage.content['@type'] === 'messageSticker'\r\n                        || nextMessage.content['@type'] === 'messageVideoNote'\r\n                        || x.sender_user_id !== nextMessage.sender_user_id\r\n                        || x.is_outgoing !== nextMessage.is_outgoing\r\n                        || nextShowTitle;\r\n\r\n                    m = (\r\n                        // <StubMessage\r\n                        //     key={`chat_id=${x.chat_id} message_id=${x.id} show_date=${showDate}`}\r\n                        //     ref={el => this.itemsMap.set(i, el)}\r\n                        //     chatId={x.chat_id}\r\n                        //     messageId={x.id}\r\n                        //     sendingState={x.sending_state}\r\n                        //     showTitle={showTitle}\r\n                        //     showTail={showTail}\r\n                        //     showUnreadSeparator={separatorMessageId === x.id}\r\n                        //     showDate={showDate}\r\n                        // />\r\n\r\n                        <Message\r\n                            key={`chat_id=${x.chat_id} message_id=${x.id} show_date=${showDate}`}\r\n                            ref={el => this.itemsMap.set(i, el)}\r\n                            chatId={x.chat_id}\r\n                            messageId={x.id}\r\n                            sendingState={x.sending_state}\r\n                            showTitle={showTitle}\r\n                            showTail={showTail}\r\n                            showUnreadSeparator={separatorMessageId === x.id}\r\n                            showDate={showDate}\r\n                        />\r\n                    );\r\n                }\r\n\r\n                return m;\r\n\r\n\r\n              });\r\n        // console.log('[p] messagesList.render');\r\n\r\n        return (\r\n            <div\r\n                className={classNames('messages-list', {\r\n                    'messages-list-selection-active': selectionActive\r\n                })}\r\n                onDragEnter={this.handleListDragEnter}>\r\n                <div ref={this.listRef} className='messages-list-wrapper' onScroll={this.handleScroll}>\r\n                    <div className='messages-list-top' />\r\n                    <div ref={this.itemsRef} className='messages-list-items'>\r\n                        {this.messages}\r\n                    </div>\r\n                </div>\r\n                <ActionBar chatId={chatId} />\r\n                <Placeholder />\r\n                {scrollDownVisible && (\r\n                    <ScrollDownButton ref={this.scrollDownButtonRef} onClick={this.handleScrollDownClick} />\r\n                )}\r\n                <FilesDropTarget />\r\n                <StickersHint />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MessagesList;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { copy } from '../../Utils/Text';\r\nimport { compose } from '../../Utils/HOC';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { withSnackbar } from 'notistack';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport LinkIcon from '@material-ui/icons/Link';\r\nimport MoreIcon from '../../Assets/Icons/More';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { forward } from '../../Actions/Client';\r\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\r\nimport OptionStore from '../../Stores/OptionStore';\r\nimport StickerStore from '../../Stores/StickerStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\n\r\nclass ShareStickerSetButton extends React.Component {\r\n    state = {\r\n        anchorEl: null\r\n    };\r\n\r\n    handleMenuClick = event => {\r\n        this.handleOpen(event.currentTarget);\r\n    };\r\n\r\n    handleOpen = anchorEl => {\r\n        this.setState({ anchorEl });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ anchorEl: null });\r\n    };\r\n\r\n    handleCopyLink = () => {\r\n        this.handleClose();\r\n\r\n        const { t } = this.props;\r\n\r\n        const link = this.getStickersLink(StickerStore.stickerSet);\r\n        if (!link) return;\r\n\r\n        copy(link);\r\n\r\n        this.handleScheduledAction(t('LinkCopied'));\r\n    };\r\n\r\n    getStickersLink = stickerSet => {\r\n        if (!stickerSet) return '';\r\n\r\n        const { name } = stickerSet;\r\n        if (!name) return '';\r\n\r\n        const telegramUrlOption = OptionStore.get('t_me_url');\r\n\r\n        return (telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/') + 'addstickers/' + name;\r\n    };\r\n\r\n    handleScheduledAction = message => {\r\n        const { enqueueSnackbar, closeSnackbar } = this.props;\r\n\r\n        const snackKey = enqueueSnackbar(message, {\r\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\r\n            preventDuplicate: true,\r\n            action: [\r\n                <IconButton\r\n                    key='close'\r\n                    aria-label='Close'\r\n                    color='inherit'\r\n                    className='notification-close-button'\r\n                    onClick={() => closeSnackbar(snackKey)}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ]\r\n        });\r\n    };\r\n\r\n    handleShare = () => {\r\n        this.handleClose();\r\n\r\n        const link = this.getStickersLink(StickerStore.stickerSet);\r\n        if (!link) return;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateStickerSet',\r\n            stickerSet: null\r\n        });\r\n\r\n        const inputMessageContent = {\r\n            '@type': 'inputMessageText',\r\n            text: {\r\n                '@type': 'formattedText',\r\n                text: link,\r\n                entities: null\r\n            },\r\n            disable_web_page_preview: false,\r\n            clear_draft: false\r\n        };\r\n\r\n        forward(inputMessageContent);\r\n    };\r\n\r\n    render() {\r\n        const { t, className } = this.props;\r\n        const { anchorEl } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <IconButton\r\n                    className={className}\r\n                    aria-label='Share'\r\n                    open={Boolean(anchorEl)}\r\n                    onClick={this.handleMenuClick}>\r\n                    <MoreIcon />\r\n                </IconButton>\r\n                <Menu\r\n                    id='attach-menu'\r\n                    anchorEl={anchorEl}\r\n                    open={Boolean(anchorEl)}\r\n                    getContentAnchorEl={null}\r\n                    disableAutoFocusItem\r\n                    disableRestoreFocus={true}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    onClose={this.handleClose}>\r\n                    <MenuItem onClick={this.handleCopyLink}>\r\n                        <ListItemIcon>\r\n                            <LinkIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('CopyLink')} />\r\n                    </MenuItem>\r\n                    <MenuItem onClick={this.handleShare}>\r\n                        <ListItemIcon>\r\n                            <ShareIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('StickersShare')} />\r\n                    </MenuItem>\r\n                </Menu>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nShareStickerSetButton.propTypes = {};\r\n\r\nconst enhance = compose(\r\n    withTranslation(),\r\n    withSnackbar\r\n);\r\n\r\nexport default enhance(ShareStickerSetButton);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport ShareStickerSetButton from './ShareStickerSetButton';\r\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\r\nimport StickerPreview from '../ColumnMiddle/StickerPreview';\r\nimport { loadStickerContent, loadStickerSetContent } from '../../Utils/File';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport { STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport StickerStore from '../../Stores/StickerStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './StickerSetDialog.css';\r\n\r\nclass StickerSetDialog extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.contentRef = React.createRef();\r\n\r\n        this.state = {\r\n            stickerSet: StickerStore.stickerSet,\r\n            stickerId: 0,\r\n            scroll: false,\r\n            scrollTop: false,\r\n            scrollBottom: false\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { stickerSet, sticker, scroll, scrollTop, scrollBottom } = this.state;\r\n\r\n        if (stickerSet !== nextState.stickerSet) {\r\n            return true;\r\n        }\r\n\r\n        if (sticker !== nextState.sticker) {\r\n            return true;\r\n        }\r\n\r\n        if (scroll !== nextState.scroll) {\r\n            return true;\r\n        }\r\n\r\n        if (scrollTop !== nextState.scrollTop) {\r\n            return true;\r\n        }\r\n\r\n        if (scrollBottom !== nextState.scrollBottom) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        StickerStore.on('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\r\n        StickerStore.on('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        StickerStore.off('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\r\n        StickerStore.off('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\r\n    }\r\n\r\n    handleUpdateInstalledStickerSets = update => {\r\n        const { stickerSet } = StickerStore;\r\n\r\n        this.setState({ stickerSet });\r\n    };\r\n\r\n    handleClientUpdateStickerSet = update => {\r\n        const { stickerSet } = update;\r\n\r\n        this.setState({ stickerSet }, () => {\r\n            setTimeout(() => {\r\n                this.handleScroll();\r\n            }, 0);\r\n        });\r\n\r\n        if (stickerSet) {\r\n            const store = FileStore.getStore();\r\n            loadStickerSetContent(store, stickerSet);\r\n        }\r\n    };\r\n\r\n    handleClose = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateStickerSet',\r\n            stickerSet: null\r\n        });\r\n    };\r\n\r\n    handleDone = () => {\r\n        const { stickerSet } = this.state;\r\n        if (!stickerSet) return;\r\n\r\n        const { is_installed } = stickerSet;\r\n\r\n        TdLibController.send({\r\n            '@type': 'changeStickerSet',\r\n            set_id: stickerSet.id,\r\n            is_installed: !is_installed\r\n        });\r\n\r\n        this.handleClose();\r\n    };\r\n\r\n    loadPreviewContent = stickerId => {\r\n        const { stickerSet } = this.state;\r\n        const { stickers } = stickerSet;\r\n        const sticker = stickers.find(x => x.sticker.id === stickerId);\r\n        if (!sticker) return;\r\n\r\n        const store = FileStore.getStore();\r\n        loadStickerContent(store, sticker, null);\r\n\r\n        const preloadStickers = this.getNeighborStickers(stickerId);\r\n        preloadStickers.forEach(x => {\r\n            loadStickerContent(store, x, null);\r\n        });\r\n    };\r\n\r\n    getNeighborStickers = stickerId => {\r\n        const { stickerSet } = this.state;\r\n        if (!stickerSet) return [];\r\n\r\n        const { stickers } = stickerSet;\r\n        if (!stickers) return [];\r\n\r\n        const indexes = [];\r\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\r\n        if (index === -1) return [];\r\n\r\n        const STICKERS_PER_ROW = 5;\r\n        const row = Math.floor(index / STICKERS_PER_ROW);\r\n        const column = index % STICKERS_PER_ROW;\r\n\r\n        const prevRow = row - 1;\r\n        const nextRow = row + 1;\r\n        const prevColumn = column - 1;\r\n        const nextColumn = column + 1;\r\n\r\n        if (prevRow >= 0) {\r\n            if (prevColumn >= 0) {\r\n                indexes.push(STICKERS_PER_ROW * prevRow + prevColumn);\r\n            }\r\n            indexes.push(STICKERS_PER_ROW * prevRow + column);\r\n            if (nextColumn < STICKERS_PER_ROW) {\r\n                indexes.push(STICKERS_PER_ROW * prevRow + nextColumn);\r\n            }\r\n        }\r\n\r\n        if (prevColumn >= 0) {\r\n            indexes.push(STICKERS_PER_ROW * row + prevColumn);\r\n        }\r\n        if (nextColumn < STICKERS_PER_ROW) {\r\n            indexes.push(STICKERS_PER_ROW * row + nextColumn);\r\n        }\r\n\r\n        if (nextRow < Math.ceil(stickers.length / STICKERS_PER_ROW)) {\r\n            if (prevColumn >= 0) {\r\n                indexes.push(STICKERS_PER_ROW * nextRow + prevColumn);\r\n            }\r\n            indexes.push(STICKERS_PER_ROW * nextRow + column);\r\n            if (nextColumn < STICKERS_PER_ROW) {\r\n                indexes.push(STICKERS_PER_ROW * nextRow + nextColumn);\r\n            }\r\n        }\r\n\r\n        return indexes.map(i => stickers[i]);\r\n    };\r\n\r\n    // handleMouseOver = event => {\r\n    //     const stickerId = Number(event.target.dataset.stickerId);\r\n    //     if (!stickerId) return;\r\n    //\r\n    //     if (!this.mouseDown) return;\r\n    //\r\n    //     this.setState({ stickerId });\r\n    //     this.loadPreviewContent(stickerId);\r\n    // };\r\n\r\n    // handleMouseDown = event => {\r\n    //     const stickerId = Number(event.target.dataset.stickerId);\r\n    //     if (!stickerId) return;\r\n    //\r\n    //     this.setState({ stickerId });\r\n    //     this.loadPreviewContent(stickerId);\r\n    //\r\n    //     this.mouseDown = true;\r\n    //     document.addEventListener('mouseup', this.handleMouseUp);\r\n    //\r\n    //     event.preventDefault();\r\n    //     event.stopPropagation();\r\n    //     return false;\r\n    // };\r\n\r\n    getSticker(stickerId) {\r\n        const { stickerSet } = this.state;\r\n        if (!stickerSet) return null;\r\n\r\n        const { stickers } = stickerSet;\r\n\r\n        const stickerIndex = stickers.findIndex(x => x.sticker.id === stickerId);\r\n        return stickerIndex !== -1 ? stickers[stickerIndex] : null;\r\n    }\r\n\r\n    handleMouseUp = () => {\r\n        const sticker = null;\r\n        this.setState({ sticker });\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateStickerPreview',\r\n            sticker\r\n        });\r\n        this.mouseDown = false;\r\n        document.removeEventListener('mouseup', this.handleMouseUp);\r\n    };\r\n\r\n    handleMouseEnter = event => {\r\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\r\n        const sticker = this.getSticker(stickerId);\r\n        if (!sticker) return;\r\n\r\n        if (!this.mouseDown) return;\r\n\r\n        this.setState({ sticker });\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateStickerPreview',\r\n            sticker\r\n        });\r\n        this.loadPreviewContent(stickerId);\r\n    };\r\n\r\n    handleMouseDown = event => {\r\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\r\n        const sticker = this.getSticker(stickerId);\r\n        if (!sticker) return;\r\n\r\n        this.setState({ sticker });\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateStickerPreview',\r\n            sticker\r\n        });\r\n        this.loadPreviewContent(stickerId);\r\n\r\n        this.mouseDown = true;\r\n        document.addEventListener('mouseup', this.handleMouseUp);\r\n\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        return false;\r\n    };\r\n\r\n    handleScroll = () => {\r\n        const content = this.contentRef.current;\r\n        if (!content) {\r\n            return;\r\n        }\r\n\r\n        const hasScroll = content.scrollHeight > content.offsetHeight;\r\n        const scrollTop = hasScroll && content.scrollTop === 0;\r\n        const scrollBottom = hasScroll && (content.scrollTop + content.offsetHeight) === content.scrollHeight;\r\n        const scroll = hasScroll && content.scrollTop > 0 && (content.scrollTop + content.offsetHeight) < content.scrollHeight;\r\n\r\n        this.setState({\r\n            scrollTop,\r\n            scrollBottom,\r\n            scroll\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        const { stickerSet, sticker, scroll, scrollTop, scrollBottom } = this.state;\r\n        if (!stickerSet) return null;\r\n\r\n        const { title, stickers, is_installed } = stickerSet;\r\n\r\n        const items = stickers.map(x => (\r\n            <div\r\n                className='sticker-set-dialog-item'\r\n                key={x.sticker.id}\r\n                data-sticker-id={x.sticker.id}\r\n                onMouseEnter={this.handleMouseEnter}\r\n                onMouseDown={this.handleMouseDown}>\r\n                <Sticker\r\n                    key={x.sticker.id}\r\n                    className='sticker-set-dialog-item-sticker'\r\n                    sticker={x}\r\n                    autoplay={false}\r\n                    blur={false}\r\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\r\n                    preview\r\n                    source={StickerSourceEnum.STICKER_SET}\r\n                />\r\n                <div className='sticker-set-dialog-item-emoji'>{x.emoji}</div>\r\n            </div>\r\n        ));\r\n\r\n        return (\r\n            <Dialog\r\n                className={classNames(\r\n                    'sticker-set-dialog',\r\n                    { 'sticker-set-dialog-scroll': scroll },\r\n                    { 'sticker-set-dialog-scroll-top': scrollTop },\r\n                    { 'sticker-set-dialog-scroll-bottom': scrollBottom },\r\n                )}\r\n                open\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                onClose={this.handleClose}\r\n                aria-labelledby='sticker-set-dialog-title-text'\r\n                classes={{ paper: 'sticker-set-dialog-paper' }}>\r\n                <DialogTitle\r\n                    className={classNames('sticker-set-dialog-title', { 'sticker-set-dialog-disabled': Boolean(sticker) })}\r\n                    disableTypography>\r\n                    <IconButton\r\n                        aria-label='Close'\r\n                        onClick={this.handleClose}>\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                    <Typography variant='h6' id='sticker-set-dialog-title-text' className='sticker-set-dialog-title-typography' noWrap>\r\n                        {title}\r\n                    </Typography>\r\n                    <ShareStickerSetButton />\r\n                </DialogTitle>\r\n                <DialogContent\r\n                    ref={this.contentRef}\r\n                    classes={{ root: classNames('sticker-set-dialog-content-root', 'scrollbars-hidden') }}\r\n                    onMouseOver={this.handleMouseOver}\r\n                    onMouseOut={this.handleMouseOut}\r\n                    onScroll={this.handleScroll}>\r\n                    {items}\r\n                </DialogContent>\r\n                <DialogActions className={classNames('sticker-set-dialog-actions', { 'sticker-set-dialog-disabled': Boolean(sticker) })}>\r\n                    <Button className='sticker-set-dialog-action-button' disableElevation variant='contained' color={is_installed ? 'secondary' : 'primary'} onClick={this.handleDone}>\r\n                        {is_installed ? t('StickersRemove') : t('AddStickers')}\r\n                    </Button>\r\n                </DialogActions>\r\n                {<StickerPreview sticker={sticker} />}\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nStickerSetDialog.propTypes = {};\r\n\r\nexport default withTranslation()(StickerSetDialog);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport classNames from 'classnames';\r\nimport ChatInfoDialog from '../Popup/ChatInfoDialog';\r\nimport Footer from './Footer';\r\nimport Header from './Header';\r\nimport HeaderPlayer from '../Player/HeaderPlayer';\r\nimport MessagesList from './MessagesList';\r\nimport StickerSetDialog from '../Popup/StickerSetDialog';\r\nimport { getSrc } from '../../Utils/File';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport './DialogDetails.css';\r\n\r\nclass DialogDetails extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            chatId: AppStore.getChatId(),\r\n            messageId: AppStore.getMessageId(),\r\n            selectedCount: 0,\r\n            wallpaper: null,\r\n            wallpaperSrc: null\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, messageId, selectedCount, wallpaper } = this.state;\r\n        if (nextState.chatId !== chatId) {\r\n            return true;\r\n        }\r\n        if (nextState.messageId !== messageId) {\r\n            return true;\r\n        }\r\n        if (nextState.selectedCount !== selectedCount) {\r\n            return true;\r\n        }\r\n        if (nextState.wallpaper !== wallpaper) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\r\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\r\n        ChatStore.on('clientUpdateChatBackground', this.onClientUpdateChatBackground);\r\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\r\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\r\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\r\n        ChatStore.off('clientUpdateChatBackground', this.onClientUpdateChatBackground);\r\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\r\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\r\n    }\r\n\r\n    onClientUpdateDocumentBlob = update => {\r\n        const { wallpaper } = this.state;\r\n        if (!wallpaper) return;\r\n\r\n        const { document } = wallpaper;\r\n        if (!document) return;\r\n\r\n        const { document: file } = document;\r\n        if (!file) return;\r\n\r\n        const { fileId } = update;\r\n\r\n        if (file.id !== fileId) {\r\n            return;\r\n        }\r\n\r\n        if (this.thumbnailTime) {\r\n            if (this.thumbnailTime.wallpaper === wallpaper) {\r\n                const diff = new Date() - this.thumbnailTime.time;\r\n                if (diff < 250) {\r\n                    setTimeout(() => {\r\n                        this.forceUpdate();\r\n                    }, 250);\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onClientUpdateDocumentThumbnailBlob = update => {\r\n        const { wallpaper } = this.state;\r\n        if (!wallpaper) return;\r\n\r\n        const { document } = wallpaper;\r\n        if (!document) return;\r\n\r\n        const { thumbnail } = document;\r\n        if (!thumbnail) return;\r\n\r\n        const { file } = thumbnail;\r\n        if (!file) return;\r\n\r\n        const { fileId } = update;\r\n\r\n        if (file.id !== fileId) {\r\n            return;\r\n        }\r\n\r\n        this.thumbnailTime = {\r\n            wallpaper,\r\n            time: new Date()\r\n        };\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onClientUpdateChatBackground = update => {\r\n        const { wallpaper } = update;\r\n\r\n        this.thumbnailTime = {\r\n            wallpaper,\r\n            time: new Date()\r\n        };\r\n        this.setState({\r\n            wallpaper\r\n        });\r\n    };\r\n\r\n    onClientUpdateChatDetailsVisibility = update => {\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onClientUpdateChatId = update => {\r\n        this.setState({\r\n            chatId: update.nextChatId,\r\n            messageId: update.nextMessageId\r\n        });\r\n    };\r\n\r\n    scrollToBottom = () => {\r\n        this.messagesList.scrollToBottom();\r\n    };\r\n\r\n    scrollToStart = () => {\r\n        this.messagesList.scrollToStart();\r\n    };\r\n\r\n    scrollToMessage = () => {\r\n        this.messagesList.scrollToMessage();\r\n    };\r\n\r\n    render() {\r\n        /*let groups = [];\r\n        if (this.props.history.length > 0){\r\n            let currentGroup = {\r\n                key: this.props.history[0].id,\r\n                date: this.props.history[0].date,\r\n                senderUserId: this.props.history[0].sender_user_id,\r\n                messages: [this.props.history[0]]\r\n            };\r\n\r\n            for (let i = 1; i < this.props.history.length; i++){\r\n                if (this.props.history[i].sender_user_id === currentGroup.senderUserId\r\n                    && Math.abs(this.props.history[i].date - currentGroup.date) <= 10 * 60\r\n                    && i % 20 !== 0){\r\n                    currentGroup.key += '_' + this.props.history[i].id;\r\n                    currentGroup.messages.push(this.props.history[i]);\r\n                }\r\n                else {\r\n                    groups.push(currentGroup);\r\n                    currentGroup = {\r\n                        key: this.props.history[i].id,\r\n                        date: this.props.history[i].date,\r\n                        senderUserId: this.props.history[i].sender_user_id,\r\n                        messages: [this.props.history[i]]\r\n                    };\r\n                }\r\n            }\r\n            groups.push(currentGroup);\r\n        }\r\n\r\n        this.groups = groups.map(x => {\r\n            return (<MessageGroup key={x.key} senderUserId={x.senderUserId} messages={x.messages} onSelectChat={this.props.onSelectChat}/>);\r\n        });*/\r\n        const { chatId, messageId, wallpaper } = this.state;\r\n\r\n        let style = null;\r\n        let src = null;\r\n        if (wallpaper) {\r\n            const { document } = wallpaper;\r\n            if (document) {\r\n                const { thumbnail, document: file } = document;\r\n                if (file) {\r\n                    src = getSrc(file);\r\n                }\r\n\r\n                if (!src && thumbnail) {\r\n                    src = getSrc(thumbnail.file);\r\n                }\r\n            }\r\n\r\n            style = {\r\n                backgroundImage: src ? `url(${src})` : null\r\n            }\r\n        }\r\n\r\n        // console.log('[p] dialogDetails.render');\r\n\r\n        return (\r\n            <div className='dialog-details' style={style}>\r\n                <HeaderPlayer />\r\n                <Header chatId={chatId} />\r\n                <MessagesList ref={ref => (this.messagesList = ref)} chatId={chatId} messageId={messageId} />\r\n                <Footer chatId={chatId} />\r\n                <StickerSetDialog />\r\n                <ChatInfoDialog />\r\n                {/*<Footer />*/}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DialogDetails;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from '../../Utils/HOC';\r\nimport { withSaveRef } from '../../Utils/HOC';\r\nimport { withIV } from './IVContext';\r\nimport { getPageBlock } from '../../Utils/InstantView';\r\nimport './Article.css';\r\n\r\nconst articleRefs = new Map();\r\n\r\nclass Article extends React.PureComponent {\r\n    render() {\r\n        const { forwardedRef, iv } = this.props;\r\n        if (!iv) return null;\r\n\r\n        const { page_blocks, is_rtl } = iv;\r\n        if (!page_blocks) return;\r\n\r\n        articleRefs.clear();\r\n        const blocks = page_blocks.map((x, index) => getPageBlock(x, iv, index, ref => { articleRefs.set(x, ref) }));\r\n\r\n        return (\r\n            <article ref={forwardedRef} dir={is_rtl ? 'rtl' : 'ltr'}>\r\n                {blocks}\r\n            </article>\r\n        );\r\n    }\r\n}\r\n\r\nArticle.propTypes = {\r\n    chatId: PropTypes.number,\r\n    messageId: PropTypes.number\r\n};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withIV\r\n);\r\n\r\nexport { articleRefs };\r\n\r\nexport default enhance(Article);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M9.91421356,11.5 L16.2071068,5.20710678 C16.5976311,4.81658249 16.5976311,4.18341751 16.2071068,3.79289322 C15.8165825,3.40236893 15.1834175,3.40236893 14.7928932,3.79289322 L7.79289322,10.7928932 C7.40236893,11.1834175 7.40236893,11.8165825 7.79289322,12.2071068 L14.7928932,19.2071068 C15.1834175,19.5976311 15.8165825,19.5976311 16.2071068,19.2071068 C16.5976311,18.8165825 16.5976311,18.1834175 16.2071068,17.7928932 L9.91421356,11.5 Z' />,\r\n    'Left'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport './MediaCaption.css';\r\n\r\nclass MediaCaption extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            top: false,\r\n            bottom: false\r\n        };\r\n\r\n        this.scrollRef = React.createRef();\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { text } = this.props;\r\n        const { top, bottom } = this.state;\r\n\r\n        if (nextProps.text !== text) return true;\r\n        if (nextState.top !== top) return true;\r\n        if (nextState.bottom !== bottom) return true;\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.handleScroll();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { text } = this.props;\r\n\r\n        if (prevProps.text !== text) {\r\n            this.handleScroll();\r\n        }\r\n    }\r\n\r\n    handleClick = event => {\r\n        event.stopPropagation();\r\n    };\r\n\r\n    handleScroll = () => {\r\n        const scroll = this.scrollRef.current;\r\n        if (!scroll) return;\r\n\r\n        const top = scroll.scrollTop === 0 && scroll.scrollHeight > scroll.offsetHeight;\r\n        const bottom = scroll.scrollTop + scroll.offsetHeight === scroll.scrollHeight && scroll.scrollHeight > scroll.offsetHeight;\r\n\r\n        this.setState({\r\n            top,\r\n            bottom\r\n        })\r\n    };\r\n\r\n    render() {\r\n        const { text } = this.props;\r\n        const { top, bottom } = this.state;\r\n\r\n        return (\r\n            <div className='media-caption' onClick={this.handleClick}>\r\n                <div\r\n                    ref={this.scrollRef}\r\n                    className={classNames(\r\n                        'scrollbars-hidden',\r\n                        'media-caption-wrapper', {\r\n                            'media-caption-wrapper-top': top,\r\n                            'media-caption-wrapper-bottom': bottom,\r\n                            'media-caption-wrapper-both': !top && !bottom\r\n                        })}\r\n                    onScroll={this.handleScroll}>\r\n                    <div className='media-caption-text'>{text}</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMediaCaption.propTypes = {\r\n    text: PropTypes.array\r\n};\r\n\r\nMediaCaption.defaultProps = {};\r\n\r\nexport default MediaCaption;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport FileProgress from './FileProgress';\r\nimport MediaCaption from './MediaCaption';\r\nimport Caption from '../InstantView/Blocks/Caption';\r\nimport SafeLink from '../Additional/SafeLink';\r\nimport Player from '../Player/Player';\r\nimport { getSrc, getViewerFile, getViewerMinithumbnail, getViewerThumbnail } from '../../Utils/File';\r\nimport { isBlurredThumbnail } from '../../Utils/Media';\r\nimport { isEmptyText } from '../../Utils/InstantView';\r\nimport { MEDIA_VIEWER_VIDEO_MAX_SIZE } from '../../Constants';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport PlayerStore from '../../Stores/PlayerStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\n\r\nclass InstantViewMediaViewerContent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.videoRef = React.createRef();\r\n\r\n        this.state = {};\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { media, size, caption, url } = props;\r\n\r\n        if (media !== state.prevMedia) {\r\n\r\n            let [thumbnailWidth, thumbnailHeight, thumbnail] = getViewerThumbnail(media);\r\n            thumbnail = FileStore.get(thumbnail.id) || thumbnail;\r\n\r\n            const [minithumbnailWidth, minithumbnailHeight, minithumbnail] = getViewerMinithumbnail(media);\r\n\r\n            let [width, height, file, mimeType, supportsStreaming] = getViewerFile(media, size);\r\n            file = FileStore.get(file.id) || file;\r\n            let src = getSrc(file);\r\n            let source = null;\r\n            if (!src && supportsStreaming) {\r\n                const { video } = media;\r\n                if (video) {\r\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${video.mime_type}`;\r\n                }\r\n            }\r\n\r\n            return {\r\n                prevMedia: media,\r\n\r\n                speed: 1,\r\n                isPlaying: false,\r\n                width,\r\n                height,\r\n                file,\r\n                src,\r\n                source,\r\n                supportsStreaming,\r\n                mimeType,\r\n                thumbnailWidth,\r\n                thumbnailHeight,\r\n                thumbnail,\r\n                minithumbnailWidth,\r\n                minithumbnailHeight,\r\n                minithumbnail\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\r\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\r\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\r\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\r\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\r\n    }\r\n\r\n    onClientUpdatePictureInPicture = update => {\r\n        const { videoInfo } = update;\r\n        if (!videoInfo) return;\r\n\r\n        const { file } = this.state;\r\n        if (file.id !== videoInfo.fileId) return;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateInstantViewViewerContent',\r\n            content: null\r\n        });\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { src } = this.state;\r\n\r\n        if (prevState.src !== src) {\r\n            const player = this.videoRef.current;\r\n            if (!player) return;\r\n\r\n            player.load();\r\n        }\r\n    }\r\n\r\n    onClientUpdateMediaBlob = update => {\r\n        const { fileId } = update;\r\n        const { media, size } = this.props;\r\n        const { file } = this.state;\r\n\r\n        if (file && file.id === fileId) {\r\n            const [width, height, file, mimeType, supportsStreaming] = getViewerFile(media, size);\r\n\r\n            this.setState({\r\n                width,\r\n                height,\r\n                file,\r\n                src: getSrc(file),\r\n                supportsStreaming,\r\n                mimeType\r\n            });\r\n        }\r\n    };\r\n\r\n    onClientUpdateMediaThumbnailBlob = update => {\r\n        const { fileId } = update;\r\n        const { thumbnail: file } = this.state;\r\n\r\n        if (file && file.id === fileId) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { media, caption, url } = this.props;\r\n        if (!media) return null;\r\n\r\n        const { width, height, file, src, mimeType, thumbnailWidth, thumbnailHeight, thumbnail, minithumbnail, isPlaying, supportsStreaming } = this.state;\r\n        if (!file) return null;\r\n\r\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\r\n        const thumbnailSrc = getSrc(thumbnail);\r\n        const isBlurred = thumbnailSrc ? isBlurredThumbnail({ width: thumbnailWidth, height: thumbnailHeight }) : Boolean(miniSrc);\r\n\r\n        let videoWidth = width;\r\n        let videoHeight = height;\r\n        const scale = MEDIA_VIEWER_VIDEO_MAX_SIZE / Math.max(videoWidth, videoHeight);\r\n        const w = videoWidth > videoHeight ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoWidth * scale);\r\n        const h = videoHeight > videoWidth ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoHeight * scale);\r\n        videoWidth = w;\r\n        videoHeight = h;\r\n\r\n        let content = null;\r\n        const source = src ? <source src={src} type={mimeType}/> : null;\r\n        switch (media['@type']) {\r\n            case 'video': {\r\n                content = (\r\n                    <div className='media-viewer-content-wrapper'>\r\n                        <Player\r\n                            ref={this.videoRef}\r\n                            className='media-viewer-content-video-player'\r\n                            fileId={file.id}\r\n                            width={videoWidth}\r\n                            height={videoHeight}\r\n                            poster={supportsStreaming ? (thumbnailSrc || miniSrc) : null}\r\n                            onPlay={() => {\r\n                                this.setState({ isPlaying: true });\r\n                            }}\r\n                        >\r\n                            {source}\r\n                        </Player>\r\n                        {!isPlaying && !supportsStreaming &&\r\n                            ((thumbnailSrc || miniSrc) ? (\r\n                                <img\r\n                                    className={classNames('media-viewer-content-video-thumbnail', {\r\n                                        'media-blurred': isBlurred\r\n                                    })}\r\n                                    src={thumbnailSrc || miniSrc}\r\n                                    alt=''\r\n                                    width={videoWidth}\r\n                                    height={videoHeight}\r\n                                />\r\n                            ) : (\r\n                                <div\r\n                                    className='media-viewer-content-video-thumbnail'\r\n                                    style={{\r\n                                        width: videoWidth,\r\n                                        height: videoHeight\r\n                                    }}\r\n                                />\r\n                            ))}\r\n                    </div>\r\n                );\r\n                break;\r\n            }\r\n            case 'animation': {\r\n                // content = (\r\n                //     <Animation\r\n                //         type='preview'\r\n                //         stretch={true}\r\n                //         displaySize={ANIMATION_PREVIEW_DISPLAY_SIZE}\r\n                //         animation={media}\r\n                //         onClick={this.handleContentClick}\r\n                //         showProgress={false}\r\n                //         style={{ borderRadius: 0 }}\r\n                //     />\r\n                // );\r\n\r\n                content = (\r\n                    <div className='media-viewer-content-wrapper'>\r\n                        <video\r\n                            ref={this.videoRef}\r\n                            className='media-viewer-content-video-player'\r\n                            onClick={this.handleContentClick}\r\n                            loop\r\n                            autoPlay\r\n                            width={videoWidth}\r\n                            height={videoHeight}\r\n                            onPlay={() => {\r\n                                this.setState({ isPlaying: true });\r\n                            }}\r\n                        >\r\n                            {source}\r\n                        </video>\r\n                        {!isPlaying &&\r\n                            ((thumbnailSrc || miniSrc) ? (\r\n                                <img\r\n                                    className={classNames('media-viewer-content-video-thumbnail', {\r\n                                        'media-blurred': isBlurred\r\n                                    })}\r\n                                    src={thumbnailSrc || miniSrc}\r\n                                    alt=''\r\n                                    width={videoWidth}\r\n                                    height={videoHeight}\r\n                                />\r\n                            ) : (\r\n                                <div\r\n                                    className='media-viewer-content-video-thumbnail'\r\n                                    style={{\r\n                                        width: videoWidth,\r\n                                        height: videoHeight\r\n                                    }}\r\n                                />\r\n                            ))}\r\n                    </div>\r\n                );\r\n                break;\r\n            }\r\n            default: {\r\n                content = (\r\n                    <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\r\n                );\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className='media-viewer-content'>\r\n                {content}\r\n                {!supportsStreaming && <FileProgress file={file} zIndex={2} />}\r\n                {caption && (!isEmptyText(caption.text) || !isEmptyText(caption.credit) || url) && (\r\n                    <MediaCaption\r\n                        text={\r\n                            <>\r\n                                <Caption text={caption.text} credit={caption.credit} />\r\n                                <SafeLink url={url} />\r\n                            </>\r\n                        }\r\n                    />\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nInstantViewMediaViewerContent.propTypes = {\r\n    media: PropTypes.object.isRequired,\r\n    size: PropTypes.number.isRequired,\r\n    caption: PropTypes.object,\r\n    url: PropTypes.string\r\n};\r\n\r\nexport default InstantViewMediaViewerContent;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport './MediaViewerButton.css';\r\n\r\nclass MediaViewerButton extends React.Component {\r\n    handleClick = event => {\r\n        event.stopPropagation();\r\n\r\n        const { disabled, onClick } = this.props;\r\n\r\n        if (disabled) return;\r\n\r\n        onClick(event);\r\n    };\r\n\r\n    render() {\r\n        const { disabled, grow, children, className, style } = this.props;\r\n\r\n        const cx = classNames(\r\n            disabled ? 'media-viewer-button-disabled' : 'media-viewer-button',\r\n            { grow: grow },\r\n            className\r\n        );\r\n\r\n        return (\r\n            <div className={cx} style={style} onClick={this.handleClick}>\r\n                {children}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMediaViewerButton.propTypes = {\r\n    disabled: PropTypes.bool,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default MediaViewerButton;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './MediaViewerFooterText.css';\r\n\r\nclass MediaViewerFooterText extends React.Component {\r\n    render() {\r\n        const { title, subtitle, style } = this.props;\r\n\r\n        return (\r\n            <div className='media-viewer-footer-text' style={style}>\r\n                <div className='media-viewer-footer-text-wrapper'>\r\n                    <span>{title}</span>\r\n                    {Boolean(subtitle) && (\r\n                        <span>\r\n                            &nbsp;\r\n                            {subtitle}\r\n                        </span>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMediaViewerFooterText.propTypes = {\r\n    title: PropTypes.string,\r\n    subtitle: PropTypes.string\r\n};\r\n\r\nexport default MediaViewerFooterText;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport './MediaViewerFooterButton.css';\r\n\r\nclass MediaViewerFooterButton extends React.Component {\r\n    handleClick = event => {\r\n        event.stopPropagation();\r\n\r\n        const { onClick, disabled } = this.props;\r\n\r\n        if (disabled) return;\r\n\r\n        onClick(event);\r\n    };\r\n\r\n    render() {\r\n        const { checked, children, disabled, title } = this.props;\r\n\r\n        return (\r\n            <div\r\n                className={classNames('media-viewer-footer-button', {\r\n                    'media-viewer-footer-button-checked': checked,\r\n                    'media-viewer-footer-button-disabled': disabled\r\n                })}\r\n                title={title}\r\n                onClick={this.handleClick}>\r\n                {children}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMediaViewerFooterButton.propTypes = {\r\n    title: PropTypes.string,\r\n    disabled: PropTypes.bool,\r\n    checked: PropTypes.bool,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default MediaViewerFooterButton;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport SaveIcon from '../../Assets/Icons/Download';\r\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport './MediaViewerFooterButton.css';\r\n\r\nclass MediaViewerDownloadButton extends React.Component {\r\n    state = {  };\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { fileId } = props;\r\n        const { prevPropsFileId } = state;\r\n\r\n        if (fileId !== prevPropsFileId) {\r\n            return {\r\n                prevPropsFileId: fileId,\r\n                fileId,\r\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.fileId !== this.props.chatId) {\r\n            this.checkFileLoaded();\r\n        }\r\n    }\r\n\r\n    checkFileLoaded() {\r\n        // console.log('[down] checkLoaded');\r\n        const { fileId } = this.props;\r\n        const blob = FileStore.getBlob(fileId);\r\n        if (blob) {\r\n            // console.log('[down] checkLoaded blob');\r\n            return;\r\n        }\r\n\r\n        const file = FileStore.get(fileId);\r\n        if (!file) {\r\n            // console.log('[down] checkLoaded file');\r\n            return;\r\n        }\r\n\r\n        const { local } = file;\r\n        if (!local) return;\r\n        if (!local.is_downloading_completed) return;\r\n\r\n        // console.log('[down] checkLoaded getLocal');\r\n        const store = FileStore.getStore();\r\n        FileStore.getLocalFile(store, file, null, () => {\r\n            // console.log('[down] checkLoaded getLocal complete');\r\n            this.setState({\r\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\r\n            });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.checkFileLoaded();\r\n\r\n        FileStore.on('updateFile', this.onUpdateFile);\r\n\r\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        FileStore.off('updateFile', this.onUpdateFile);\r\n\r\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\r\n    }\r\n\r\n    onUpdateFile = update => {\r\n        const { fileId } = this.props;\r\n        const { file } = update;\r\n\r\n        if (file.id !== fileId) return;\r\n\r\n        if (file.local.is_downloading_completed) {\r\n            this.checkFileLoaded();\r\n        }\r\n    };\r\n\r\n    onClientUpdateMediaBlob = update => {\r\n        const { fileId } = this.state;\r\n\r\n        if (fileId === update.fileId) {\r\n            this.setState({\r\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\r\n            });\r\n        }\r\n    };\r\n\r\n    static saveDisabled = fileId => {\r\n        return !Boolean(FileStore.getBlob(fileId));\r\n    };\r\n\r\n    handleClick = event => {\r\n        event.stopPropagation();\r\n\r\n        const { onClick } = this.props;\r\n        const { disabled } = this.state;\r\n        if (disabled) return;\r\n\r\n        onClick(event);\r\n    };\r\n\r\n    render() {\r\n        const { title, children, disabled: propsDisabled } = this.props;\r\n        const { disabled } = this.state;\r\n\r\n        return (\r\n            <MediaViewerFooterButton disabled={disabled || propsDisabled} title={title} onClick={this.handleClick}>\r\n                {children || <SaveIcon />}\r\n            </MediaViewerFooterButton>\r\n        );\r\n    }\r\n}\r\n\r\nMediaViewerDownloadButton.propTypes = {\r\n    fileId: PropTypes.number.isRequired,\r\n    onClick: PropTypes.func.isRequired,\r\n    title: PropTypes.string,\r\n    disabled: PropTypes.bool\r\n};\r\n\r\nexport default MediaViewerDownloadButton;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { compose } from '../../Utils/HOC';\r\nimport { withIV } from '../InstantView/IVContext';\r\nimport { withTranslation } from 'react-i18next';\r\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\r\nimport ReplyIcon from '../../Assets/Icons/Share';\r\nimport InstantViewMediaViewerContent from './InstantViewMediaViewerContent';\r\nimport MediaViewerButton from './MediaViewerButton';\r\nimport MediaViewerFooterText from './MediaViewerFooterText';\r\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\r\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\r\nimport { getBlockCaption, getBlockMedia, getBlockUrl, getValidBlocks, isValidMediaBlock } from '../../Utils/InstantView';\r\nimport { cancelPreloadIVMediaViewerContent, getViewerFile, preloadIVMediaViewerContent, saveMedia } from '../../Utils/File';\r\nimport { getInputMediaContent } from '../../Utils/Media';\r\nimport { forward, setInstantViewViewerContent } from '../../Actions/Client';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './InstantViewMediaViewer.css';\r\n\r\nclass InstantViewMediaViewer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            index: -1,\r\n            hasPreviousMedia: false,\r\n            hasNextMedia: false,\r\n            blocks: []\r\n        };\r\n\r\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadContent();\r\n\r\n        KeyboardManager.add(this.keyboardHandler);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        KeyboardManager.remove(this.keyboardHandler);\r\n    }\r\n\r\n    onKeyDown = event => {\r\n        if (modalManager.modals.length > 0) {\r\n            return;\r\n        }\r\n\r\n        if (event.isComposing) {\r\n            return;\r\n        }\r\n\r\n        const { index, blocks } = this.state;\r\n        if (!blocks) return null;\r\n        if (index === -1) return null;\r\n\r\n        const block = blocks[index];\r\n        const media = getBlockMedia(block);\r\n        if (!media) return;\r\n\r\n        const { key } = event;\r\n        switch (key) {\r\n            case 'Escape': {\r\n                this.handleClose();\r\n                event.stopPropagation();\r\n                event.preventDefault();\r\n                return;\r\n            }\r\n            case 'ArrowLeft': {\r\n                this.handleNext();\r\n                event.stopPropagation();\r\n                event.preventDefault();\r\n                return;\r\n            }\r\n            case 'ArrowRight': {\r\n                this.handlePrevious();\r\n                event.stopPropagation();\r\n                event.preventDefault();\r\n                return;\r\n            }\r\n        }\r\n\r\n        const isVideo = media['@type'] === 'video';\r\n        if (isVideo) {\r\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMediaShortcut', event });\r\n        }\r\n    };\r\n\r\n    loadContent() {\r\n        const { iv, media } = this.props;\r\n\r\n        const blocks = getValidBlocks(iv, isValidMediaBlock);\r\n        const index = blocks.findIndex(x => getBlockMedia(x) === media);\r\n\r\n        this.setState({\r\n            blocks,\r\n            index,\r\n            hasPreviousMedia: this.hasPreviousMedia(index, blocks),\r\n            hasNextMedia: this.hasNextMedia(index, blocks)\r\n        });\r\n\r\n        preloadIVMediaViewerContent(index, blocks);\r\n    }\r\n\r\n    hasPreviousMedia(index, blocks) {\r\n        if (index === -1) return false;\r\n\r\n        const nextIndex = index + 1;\r\n        return nextIndex < blocks.length;\r\n    }\r\n\r\n    handlePrevious = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { index, blocks } = this.state;\r\n        const nextIndex = index + 1;\r\n\r\n        if (!this.hasPreviousMedia(index, blocks)) return;\r\n\r\n        return this.loadMedia(nextIndex);\r\n    };\r\n\r\n    hasNextMedia(index, blocks) {\r\n        if (index === -1) return false;\r\n\r\n        const nextIndex = index - 1;\r\n        return nextIndex >= 0;\r\n    }\r\n\r\n    handleNext = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { index, blocks } = this.state;\r\n        const nextIndex = index - 1;\r\n\r\n        if (!this.hasNextMedia(index, blocks)) return;\r\n\r\n        return this.loadMedia(nextIndex);\r\n    };\r\n\r\n    loadMedia = index => {\r\n        const { blocks } = this.state;\r\n\r\n        if (index < 0) return false;\r\n        if (index >= blocks.length) return false;\r\n\r\n        this.setState(\r\n            {\r\n                index,\r\n                hasPreviousMedia: this.hasPreviousMedia(index, blocks),\r\n                hasNextMedia: this.hasNextMedia(index, blocks)\r\n            }\r\n        );\r\n\r\n        preloadIVMediaViewerContent(index, blocks);\r\n        return true;\r\n    };\r\n\r\n    handleClose = () => {\r\n        setInstantViewViewerContent(null);\r\n\r\n        const { index, blocks } = this.state;\r\n        if (index !== -1) {\r\n            cancelPreloadIVMediaViewerContent(index, blocks);\r\n        }\r\n    };\r\n\r\n    handleForward = () => {\r\n        const { media } = this.props;\r\n\r\n        const inputMessageContent = getInputMediaContent(media, null);\r\n        if (!inputMessageContent) return;\r\n\r\n        forward(inputMessageContent);\r\n    };\r\n\r\n    handleSave = () => {\r\n        const { media } = this.props;\r\n\r\n        saveMedia(media, null);\r\n    };\r\n\r\n    handleWrapperMouseDown = event => {\r\n        this.mouseDownTarget = event.currentTarget;\r\n    }\r\n\r\n    handleWrapperClick = event => {\r\n        const { mouseDownTarget } = this;\r\n        this.mouseDownTarget = null;\r\n\r\n        if (event.currentTarget !== mouseDownTarget) return;\r\n\r\n        this.handleClose();\r\n    };\r\n\r\n    render() {\r\n        const { size, t } = this.props;\r\n        const { index, blocks, hasNextMedia, hasPreviousMedia } = this.state;\r\n        if (!blocks) return null;\r\n        if (index === -1) return null;\r\n\r\n        const block = blocks[index];\r\n        const media = getBlockMedia(block);\r\n        const caption = getBlockCaption(block);\r\n        const url = getBlockUrl(block);\r\n\r\n        const [width, height, file] = getViewerFile(media, size);\r\n\r\n        let title = '';\r\n        if (media['@type'] === 'photo') {\r\n            title = t('AttachPhoto');\r\n        }\r\n        if (media['@type'] === 'video') {\r\n            title = t('AttachVideo');\r\n        } else if (media['@type'] === 'animation') {\r\n            title = t('AttachGif');\r\n        }\r\n        const maxCount = blocks.length;\r\n\r\n        return (\r\n            <div className={classNames('instant-view-media-viewer', 'media-viewer-default')}>\r\n                <div className='media-viewer-footer'>\r\n                    <MediaViewerFooterText\r\n                        title={title}\r\n                        subtitle={maxCount && index >= 0 ? `${index + 1} of ${maxCount}` : null}\r\n                        style={{ marginLeft: 128 }}\r\n                    />\r\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\r\n                    <MediaViewerFooterButton title={t('Forward')} onClick={this.handleForward}>\r\n                        <ReplyIcon />\r\n                    </MediaViewerFooterButton>\r\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\r\n                        <CloseIcon />\r\n                    </MediaViewerFooterButton>\r\n                </div>\r\n                <div className='media-viewer-wrapper' onMouseDown={this.handleWrapperMouseDown} onClick={this.handleWrapperClick}>\r\n                    <div className='media-viewer-left-column'>\r\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\r\n                            <NavigateBeforeIcon />\r\n                        </MediaViewerButton>\r\n                    </div>\r\n                    <div className='media-viewer-content-column'>\r\n                        <InstantViewMediaViewerContent media={media} size={size} caption={caption} url={url} />\r\n                    </div>\r\n                    <div className='media-viewer-right-column'>\r\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\r\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\r\n                        </MediaViewerButton>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nInstantViewMediaViewer.propTypes = {\r\n    media: PropTypes.object.isRequired,\r\n    size: PropTypes.number.isRequired,\r\n    caption: PropTypes.object.isRequired\r\n};\r\n\r\nconst enhance = compose(\r\n    withTranslation(),\r\n    withIV\r\n);\r\n\r\nexport default enhance(InstantViewMediaViewer);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ReactDOM from 'react-dom';\r\nimport { withTranslation } from 'react-i18next';\r\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport Article from './Article';\r\nimport { articleRefs } from './Article';\r\nimport InstantViewMediaViewer from '../Viewer/InstantViewMediaViewer';\r\nimport IVContext from './IVContext';\r\nimport MediaViewerButton from '../Viewer/MediaViewerButton';\r\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\r\nimport { itemsInView, throttle } from '../../Utils/Common';\r\nimport { getInnerBlocks } from '../../Utils/InstantView';\r\nimport { openInstantView } from '../../Actions/InstantView';\r\nimport { setInstantViewContent, setInstantViewViewerContent } from '../../Actions/Client';\r\nimport { scrollTop } from '../../Utils/DOM';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport { IV_PHOTO_SIZE } from '../../Constants';\r\nimport InstantViewStore from '../../Stores/InstantViewStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './InstantViewer.css';\r\n\r\nclass InstantViewer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\r\n        this.articleRef = React.createRef();\r\n        this.instantViewerRef = React.createRef();\r\n\r\n        this.state = {};\r\n\r\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.instantView !== state.prevInstantView) {\r\n            return {\r\n                prevInstantView: props.instantView,\r\n                hasPrev: InstantViewStore.hasPrev(),\r\n                hasScroll: false,\r\n                media: null,\r\n                caption: null,\r\n                url: null\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { instantView } = this.props;\r\n        const { hasScroll, hasPrev, media, caption, url } = this.state;\r\n\r\n        if (instantView !== nextProps.instantView) {\r\n            return true;\r\n        }\r\n\r\n        if (hasScroll !== nextState.hasScroll) {\r\n            return true;\r\n        }\r\n\r\n        if (hasPrev !== nextState.hasPrev) {\r\n            return true;\r\n        }\r\n\r\n        if (media !== nextState.media) {\r\n            return true;\r\n        }\r\n\r\n        if (caption !== nextState.caption) {\r\n            return true;\r\n        }\r\n\r\n        if (url !== nextState.url) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.mounted = true;\r\n        this.handleScroll();\r\n        this.scrollToBlock(this.props.block, 'smooth');\r\n\r\n        KeyboardManager.add(this.keyboardHandler);\r\n        InstantViewStore.on('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\r\n        InstantViewStore.on('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.mounted = false;\r\n        KeyboardManager.remove(this.keyboardHandler);\r\n        InstantViewStore.off('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\r\n        InstantViewStore.off('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\r\n    }\r\n\r\n    onClientUpdateInstantViewViewerContent = update => {\r\n        const { content } = update;\r\n        if (!content) {\r\n            this.setState({ media: null, caption: null, url: null });\r\n            return;\r\n        }\r\n\r\n        const { media, caption, url, instantView } = content;\r\n\r\n        if (this.props.instantView !== instantView) return;\r\n\r\n        this.setState({ media, caption, url });\r\n    };\r\n\r\n    onClientUpdateInstantViewUrl = async update => {\r\n        const { url } = update;\r\n        const active = InstantViewStore.getCurrent();\r\n        const { instantView, url: oldUrl } = this.props;\r\n\r\n        if (active !== instantView) return;\r\n\r\n        if (instantView && url.startsWith(oldUrl)) {\r\n            const hash = new URL(url).hash;\r\n            if (url.indexOf('#') === url.length - 1) {\r\n                this.scrollTop('smooth');\r\n\r\n                return;\r\n            } else if (hash && this.scrollToHash(hash, 'smooth')) {\r\n\r\n                return;\r\n            }\r\n        }\r\n\r\n        openInstantView(url);\r\n    };\r\n\r\n    scrollToBlock(block, behavior) {\r\n        if (!block) return false;\r\n\r\n        if (!articleRefs) return false;\r\n\r\n        const ref = articleRefs.get(block);\r\n        if (!ref) return false;\r\n\r\n        const element = ReactDOM.findDOMNode(ref);\r\n        return this.scrollToElement(element, behavior);\r\n    }\r\n\r\n    scrollToElement(element, behavior) {\r\n        if (!element) return false;\r\n\r\n        const details = [];\r\n        let finished = false;\r\n        let currentElement = element;\r\n        do {\r\n            currentElement = currentElement.parentNode;\r\n            if (currentElement) {\r\n                if (currentElement.nodeName === 'DETAILS') {\r\n                    details.push(currentElement);\r\n                } else if (currentElement.nodeName === 'ARTICLE') {\r\n                    finished = true;\r\n                }\r\n            } else {\r\n                finished = true;\r\n            }\r\n        } while (!finished);\r\n\r\n        details.forEach(x => (x.open = true));\r\n\r\n        element.scrollIntoView({\r\n            block: 'center',\r\n            behavior\r\n        });\r\n\r\n        return true;\r\n    }\r\n\r\n    scrollToHash(hash, behavior) {\r\n        if (!hash) return false;\r\n\r\n        const element = document.getElementById(hash.substr(1));\r\n\r\n        return this.scrollToElement(element, behavior);\r\n    }\r\n\r\n    scrollTop(behavior) {\r\n        const element = this.instantViewerRef.current;\r\n\r\n        switch (behavior) {\r\n            case 'smooth': {\r\n                scrollTop(element);\r\n                break;\r\n            }\r\n            default: {\r\n                element.scrollTo({\r\n                    top: 0,\r\n                    behavior\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { instantView, block, url } = this.props;\r\n\r\n        const hash = new URL(url).hash;\r\n        if (prevProps.instantView !== instantView) {\r\n            if (prevProps.url !== url) {\r\n                if (url.indexOf('#') === url.length - 1) {\r\n                    this.scrollTop('auto');\r\n                } else if (hash) {\r\n                    this.scrollToHash(hash, 'auto');\r\n                } else {\r\n                    this.scrollTop('auto');\r\n                }\r\n            } else {\r\n                if (hash) {\r\n                    this.scrollToHash(hash, 'auto');\r\n                } else {\r\n                    this.scrollTop('smooth');\r\n                }\r\n            }\r\n\r\n            this.handleScroll();\r\n        }\r\n    }\r\n\r\n    onKeyDown = event => {\r\n        if (modalManager.modals.length > 0) {\r\n            return;\r\n        }\r\n\r\n        if (event.isComposing) {\r\n            return;\r\n        }\r\n\r\n        switch (event.key) {\r\n            case 'Escape': {\r\n                event.stopPropagation();\r\n                event.preventDefault();\r\n\r\n                const { media } = this.state;\r\n\r\n                if (media) {\r\n                    setInstantViewViewerContent(null);\r\n                    return;\r\n                }\r\n\r\n                this.handleClose();\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    handleClose() {\r\n        setInstantViewContent(null);\r\n    }\r\n\r\n    handleBack = () => {\r\n        const { hasPrev, hasScroll } = this.state;\r\n        if (hasScroll) {\r\n            this.scrollTop('smooth');\r\n            return;\r\n        }\r\n\r\n        if (hasPrev) {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdatePrevInstantView'\r\n            });\r\n            return;\r\n        }\r\n\r\n        this.handleClose();\r\n    };\r\n\r\n    handleScroll = () => {\r\n        const element = this.instantViewerRef.current;\r\n        this.setState({\r\n            hasScroll: element.scrollTop > 50\r\n        });\r\n\r\n        this.updateItemsInView();\r\n    };\r\n\r\n    updateItemsInView() {\r\n        if (!this.mounted) return;\r\n\r\n        const { instantView } = this.props;\r\n        if (!instantView) return;\r\n\r\n        const { page_blocks } = instantView;\r\n\r\n        const blocks = new Map();\r\n        const items = itemsInView(this.instantViewerRef, this.articleRef);\r\n\r\n        for (let i = 0; i < items.length; i++) {\r\n            const block = page_blocks[items[i]];\r\n            blocks.set(block, block);\r\n\r\n            const innerBlocks = getInnerBlocks(block);\r\n            innerBlocks.forEach(x => blocks.set(x, x));\r\n        }\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateBlocksInView',\r\n            blocks\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { instantView } = this.props;\r\n        const { hasPrev, hasScroll, media, caption, url } = this.state;\r\n        if (!instantView) return null;\r\n\r\n        return (\r\n            <IVContext.Provider value={instantView}>\r\n                <div ref={this.instantViewerRef} className='instant-viewer' onScroll={this.handleScroll}>\r\n                    <div className='instant-viewer-left-column' onClick={this.handleBack}>\r\n                        <MediaViewerButton\r\n                            className='instant-viewer-left-button'\r\n                            style={{ alignItems: 'flex-start' }}\r\n                            onClick={this.handleBack}>\r\n                            <NavigateBeforeIcon\r\n                                style={{\r\n                                    transition: 'transform 0.25s ease-out',\r\n                                    transform: hasScroll ? 'rotate(90deg)' : 'rotate(0deg)'\r\n                                }}\r\n                            />\r\n                        </MediaViewerButton>\r\n                    </div>\r\n                    <div className='instant-viewer-content-column'>\r\n                        <div>\r\n                            <Article ref={this.articleRef} />\r\n                        </div>\r\n                    </div>\r\n                    <div className='instant-viewer-right-column'>\r\n                        <MediaViewerButton className='instant-viewer-right-button' onClick={this.handleClose}>\r\n                            <CloseIcon />\r\n                        </MediaViewerButton>\r\n                    </div>\r\n                </div>\r\n                {media && <InstantViewMediaViewer media={media} size={IV_PHOTO_SIZE} caption={caption} url={url} />}\r\n            </IVContext.Provider>\r\n        );\r\n    }\r\n}\r\n\r\nInstantViewer.propTypes = {\r\n    instantView: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withTranslation()(InstantViewer);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { getDateHint, getSenderUserId } from '../../Utils/Message';\r\nimport UserTile from './UserTile';\r\nimport ChatTile from './ChatTile';\r\nimport MessageAuthor from '../Message/MessageAuthor';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport './MediaInfo.css';\r\n\r\nclass MediaInfo extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const { chatId, messageId } = this.props;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return null;\r\n\r\n        const { date } = message;\r\n\r\n        const userId = getSenderUserId(message);\r\n        const dateHint = getDateHint(date);\r\n\r\n        const tileControl = userId ? <UserTile userId={userId} /> : <ChatTile chatId={chatId} />;\r\n\r\n        return (\r\n            <div className='media-info'>\r\n                <div className='media-info-wrapper'>\r\n                    {tileControl}\r\n                    <div className='media-info-content'>\r\n                        <div className='media-info-row'>\r\n                            <MessageAuthor chatId={chatId} userId={userId} />\r\n                        </div>\r\n                        <div className='media-info-row meta'>\r\n                            <span>{dateHint}</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMediaInfo.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired\r\n};\r\n\r\nexport default MediaInfo;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport FileProgress from './FileProgress';\r\nimport MediaCaption from './MediaCaption';\r\nimport Player from '../Player/Player';\r\nimport { getMediaFile, getMediaMiniPreview, getMediaPreviewFile, getSrc } from '../../Utils/File';\r\nimport { getText, isAnimationMessage, isEmbedMessage, isVideoMessage } from '../../Utils/Message';\r\nimport { isBlurredThumbnail } from '../../Utils/Media';\r\nimport { MEDIA_VIEWER_VIDEO_MAX_SIZE } from '../../Constants';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport PlayerStore from '../../Stores/PlayerStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './MediaViewerContent.css';\r\n\r\nclass MediaViewerContent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {};\r\n\r\n        this.videoRef = React.createRef();\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { chatId, messageId, size, t } = props;\r\n\r\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\r\n            let [thumbnailWidth, thumbnailHeight, thumbnail] = getMediaPreviewFile(chatId, messageId);\r\n            if (thumbnail){\r\n                thumbnail = FileStore.get(thumbnail.id) || thumbnail;\r\n            }\r\n            const [minithumbnailWidth, minithumbnailHeight, minithumbnail] = getMediaMiniPreview(chatId, messageId);\r\n\r\n            const message = MessageStore.get(chatId, messageId);\r\n            const text = getText(message, null, t);\r\n\r\n            let [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\r\n            file = FileStore.get(file.id) || file;\r\n            let src = getSrc(file);\r\n            let source = null;\r\n            if (!src && supportsStreaming) {\r\n                if (isVideoMessage(chatId, messageId)) {\r\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\r\n                }\r\n            }\r\n\r\n            const { content } = message;\r\n            const { web_page: webPage } = content;\r\n\r\n            return {\r\n                prevChatId: chatId,\r\n                prevMessageId: messageId,\r\n\r\n                speed: 1,\r\n                isPlaying: false,\r\n                width,\r\n                height,\r\n                file,\r\n                src,\r\n                source,\r\n                supportsStreaming,\r\n                mimeType,\r\n                text,\r\n                thumbnailWidth,\r\n                thumbnailHeight,\r\n                thumbnail,\r\n                minithumbnailWidth,\r\n                minithumbnailHeight,\r\n                minithumbnail,\r\n                webPage\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\r\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\r\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\r\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\r\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\r\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\r\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\r\n    }\r\n\r\n    onClientUpdatePictureInPicture = update => {\r\n        const { videoInfo } = update;\r\n        if (!videoInfo) return;\r\n\r\n        const { file } = this.state;\r\n        if (file.id !== videoInfo.fileId) return;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaViewerContent',\r\n            content: null\r\n        });\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { src } = this.state;\r\n\r\n        if (prevState.src !== src) {\r\n            const player = this.videoRef.current;\r\n            if (!player) return;\r\n\r\n            player.load();\r\n        }\r\n    }\r\n\r\n    onClientUpdateMediaBlob = update => {\r\n        const { chatId, messageId, size } = this.props;\r\n\r\n        if (chatId === update.chatId && messageId === update.messageId) {\r\n            let [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\r\n\r\n            file = FileStore.get(file.id) || file;\r\n            let src = getSrc(file);\r\n            let source = null;\r\n            if (!src && supportsStreaming) {\r\n                if (isVideoMessage(chatId, messageId)) {\r\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\r\n                }\r\n            }\r\n\r\n            this.setState({\r\n                width,\r\n                height,\r\n                file,\r\n                src,\r\n                source,\r\n                supportsStreaming,\r\n                mimeType\r\n            });\r\n        }\r\n    };\r\n\r\n    onClientUpdateMediaThumbnailBlob = update => {\r\n        const { chatId, messageId } = this.props;\r\n\r\n        if (chatId === update.chatId && messageId === update.messageId) {\r\n            const [width, height, file] = getMediaPreviewFile(chatId, messageId);\r\n            this.setState({\r\n                thumbnailWidth: width,\r\n                thumbnailHeight: height,\r\n                thumbnail: file\r\n            });\r\n        }\r\n    };\r\n\r\n    onUpdateMessageContent = update => {\r\n        const { chatId, messageId, size, t } = this.props;\r\n        const { chat_id, message_id } = update;\r\n\r\n        if (chatId === chat_id && messageId === message_id) {\r\n            const message = MessageStore.get(chatId, messageId);\r\n            const text = getText(message, null, t);\r\n\r\n            const [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\r\n            let src = getSrc(file);\r\n            let source = null;\r\n            if (!src && supportsStreaming) {\r\n                if (isVideoMessage(chatId, messageId)) {\r\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\r\n                }\r\n            }\r\n\r\n            this.setState({\r\n                width,\r\n                height,\r\n                file,\r\n                src,\r\n                source,\r\n                supportsStreaming,\r\n                mimeType,\r\n                text\r\n            });\r\n        }\r\n    };\r\n\r\n    handleContentClick = event => {\r\n        if (event) event.stopPropagation();\r\n    };\r\n\r\n    handleClick = event => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n\r\n        const { source } = this.state;\r\n        if (!source) return;\r\n\r\n        source.loadNextBuffer();\r\n    };\r\n\r\n    render() {\r\n        const { chatId, messageId } = this.props;\r\n        const {\r\n            width,\r\n            height,\r\n            file,\r\n            src,\r\n            supportsStreaming,\r\n            mimeType,\r\n            text,\r\n            thumbnailWidth,\r\n            thumbnailHeight,\r\n            minithumbnail,\r\n            thumbnail,\r\n            webPage,\r\n            isPlaying\r\n        } = this.state;\r\n\r\n        if (!file) return null;\r\n\r\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\r\n        const thumbnailSrc = getSrc(thumbnail);\r\n        const isBlurred = thumbnailSrc ? isBlurredThumbnail({ width: thumbnailWidth, height: thumbnailHeight }) : Boolean(miniSrc);\r\n\r\n        const isEmbed = isEmbedMessage(chatId, messageId);\r\n        const isVideo = isVideoMessage(chatId, messageId);\r\n        const isAnimation = isAnimationMessage(chatId, messageId);\r\n\r\n        let videoWidth = width;\r\n        let videoHeight = height;\r\n        const scale = MEDIA_VIEWER_VIDEO_MAX_SIZE / Math.max(videoWidth, videoHeight);\r\n        const w = videoWidth > videoHeight ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoWidth * scale);\r\n        const h = videoHeight > videoWidth ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoHeight * scale);\r\n        videoWidth = w;\r\n        videoHeight = h;\r\n\r\n        let content = null;\r\n        const source = src ? <source src={src} type={mimeType}/> : null;\r\n\r\n        if (isVideo) {\r\n            content = (\r\n                <div className='media-viewer-content-wrapper'>\r\n                    <Player\r\n                        ref={this.videoRef}\r\n                        className='media-viewer-content-video-player'\r\n                        fileId={file.id}\r\n                        width={videoWidth}\r\n                        height={videoHeight}\r\n                        poster={supportsStreaming ? (thumbnailSrc || miniSrc) : null}\r\n                        onPlay={() => {\r\n                            this.setState({ isPlaying: true });\r\n                        }}\r\n                    >\r\n                        {source}\r\n                    </Player>\r\n                    {!isPlaying && !supportsStreaming &&\r\n                        ((thumbnailSrc || miniSrc) ? (\r\n                            <img\r\n                                className={classNames('media-viewer-content-video-thumbnail', {\r\n                                    'media-blurred': isBlurred\r\n                                })}\r\n                                src={thumbnailSrc || miniSrc}\r\n                                alt=''\r\n                                width={videoWidth}\r\n                                height={videoHeight}\r\n                            />\r\n                        ) : (\r\n                            <div\r\n                                className='media-viewer-content-video-thumbnail'\r\n                                style={{\r\n                                    width: videoWidth,\r\n                                    height: videoHeight\r\n                                }}\r\n                            />\r\n                        ))}\r\n                </div>\r\n            );\r\n        } else if (isAnimation) {\r\n            // const message = MessageStore.get(chatId, messageId);\r\n            //\r\n            // content = (\r\n            //     <Animation\r\n            //         type='preview'\r\n            //         stretch={true}\r\n            //         displaySize={ANIMATION_PREVIEW_DISPLAY_SIZE}\r\n            //         animation={message.content.animation || message.content.web_page.animation}\r\n            //         onClick={this.handleContentClick}\r\n            //         showProgress={false}\r\n            //         style={{ borderRadius: 0 }}\r\n            //         />\r\n            // );\r\n\r\n            content = (\r\n                <div className='media-viewer-content-wrapper'>\r\n                    <video\r\n                        ref={this.videoRef}\r\n                        className='media-viewer-content-video-player'\r\n                        onClick={this.handleContentClick}\r\n                        loop\r\n                        autoPlay\r\n                        width={videoWidth}\r\n                        height={videoHeight}\r\n                        onPlay={() => {\r\n                            this.setState({ isPlaying: true });\r\n                        }}\r\n                    >\r\n                        {source}\r\n                    </video>\r\n                    {!isPlaying &&\r\n                    ((thumbnailSrc || miniSrc) ? (\r\n                        <img\r\n                            className={classNames('media-viewer-content-video-thumbnail', {\r\n                                'media-blurred': isBlurred\r\n                            })}\r\n                            src={thumbnailSrc || miniSrc}\r\n                            alt=''\r\n                            width={videoWidth}\r\n                            height={videoHeight}\r\n                        />\r\n                    ) : (\r\n                        <div\r\n                            className='media-viewer-content-video-thumbnail'\r\n                            style={{\r\n                                width: videoWidth,\r\n                                height: videoHeight\r\n                            }}\r\n                        />\r\n                    ))}\r\n                </div>\r\n            );\r\n        } else if (webPage && webPage.embed_url) {\r\n            let { embed_url: url } = webPage;\r\n\r\n            switch (webPage.site_name) {\r\n                case 'Coub': {\r\n                    break;\r\n                }\r\n                case 'SoundCloud': {\r\n                    break;\r\n                }\r\n                case 'Spotify': {\r\n                    break;\r\n                }\r\n                case 'Twitch': {\r\n                    url += `&parent=${window.location.hostname}`;\r\n                    break;\r\n                }\r\n                case 'YouTube': {\r\n                    url += '?iv_load_policy=3&controls=2&playsinline=1&rel=0&modestbranding=0&autoplay=1&enablejsapi=0&widgetid=1&showinfo=0';\r\n                    break;\r\n                }\r\n                case 'Vimeo': {\r\n                    url += '?playsinline=true&autoplay=true&dnt=true&title=false';\r\n                    break;\r\n                }\r\n                case 'КиноПоиск': {\r\n                    break;\r\n                }\r\n                case 'Яндекс.Музыка': {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            content = (\r\n                <div className='media-viewer-content-wrapper'>\r\n                    <iframe src={url} width={videoWidth} height={videoHeight} frameBorder={0} allowFullScreen={true} scrolling='no' style={{ background: 'black' }}/>\r\n                </div>\r\n            );\r\n        } else {\r\n            content = (\r\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div className='media-viewer-content'>\r\n                {content}\r\n                {!supportsStreaming && <FileProgress file={file} zIndex={2} />}\r\n                {text && text.length > 0 && !isVideo && !isEmbed && <MediaCaption text={text} />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMediaViewerContent.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    size: PropTypes.number.isRequired\r\n};\r\n\r\nexport default withTranslation()(MediaViewerContent);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport DeleteIcon from '../../Assets/Icons/Delete';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\r\nimport ReplyIcon from '../../Assets/Icons/Share';\r\nimport MediaInfo from '../Tile/MediaInfo';\r\nimport MediaViewerContent from './MediaViewerContent';\r\nimport MediaViewerButton from './MediaViewerButton';\r\nimport MediaViewerFooterText from './MediaViewerFooterText';\r\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\r\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\r\nimport { forwardMessages, setMediaViewerContent } from '../../Actions/Client';\r\nimport {\r\n    cancelPreloadMediaViewerContent,\r\n    getMediaFile,\r\n    loadMediaViewerContent,\r\n    preloadMediaViewerContent,\r\n    saveMedia\r\n} from '../../Utils/File';\r\nimport {\r\n    canMessageBeDeleted,\r\n    filterDuplicateMessages,\r\n    isAnimationMessage,\r\n    isEmbedMessage,\r\n    isMediaContent,\r\n    isVideoMessage\r\n} from '../../Utils/Message';\r\nimport { between } from '../../Utils/Common';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport { PHOTO_BIG_SIZE, MEDIA_SLICE_LIMIT } from '../../Constants';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './MediaViewer.css';\r\n\r\nclass MediaViewer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\r\n        this.history = [];\r\n\r\n        const { chatId, messageId } = this.props;\r\n\r\n        this.state = {\r\n            background: 'media-viewer-default',\r\n            prevChatId: chatId,\r\n            prevMessageId: messageId,\r\n            currentMessageId: messageId,\r\n            hasNextMedia: false,\r\n            hasPreviousMedia: false,\r\n            deleteConfirmationOpened: false,\r\n            deleteForAll: true\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, messageId } = this.props;\r\n        const {\r\n            background,\r\n            currentMessageId,\r\n            deleteConfirmationOpened,\r\n            firstSliceLoaded,\r\n            hasNextMedia,\r\n            hasPreviousMedia,\r\n            totalCount\r\n        } = this.state;\r\n\r\n        if (nextState.background !== background) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.messageId !== messageId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.currentMessageId !== currentMessageId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.hasNextMedia !== hasNextMedia) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.totalCount !== totalCount) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadHistory();\r\n\r\n        KeyboardManager.add(this.keyboardHandler);\r\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\r\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        KeyboardManager.remove(this.keyboardHandler);\r\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\r\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\r\n    }\r\n\r\n    onKeyDown = event => {\r\n        const { chatId } = this.props;\r\n        const { currentMessageId } = this.state;\r\n\r\n        if (modalManager.modals.length > 0) {\r\n            return;\r\n        }\r\n\r\n        if (event.isComposing) {\r\n            return;\r\n        }\r\n\r\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\r\n\r\n        const { key } = event;\r\n        switch (key) {\r\n            case 'Escape': {\r\n\r\n                this.handleClose();\r\n                event.stopPropagation();\r\n                event.preventDefault();\r\n                return;\r\n            }\r\n            case 'ArrowLeft': {\r\n                if (!fullscreenElement) {\r\n                    this.handlePrevious();\r\n                    event.stopPropagation();\r\n                    event.preventDefault();\r\n                    return;\r\n                }\r\n                break;\r\n            }\r\n            case 'ArrowRight': {\r\n                if (!fullscreenElement) {\r\n                    this.handleNext();\r\n                    event.stopPropagation();\r\n                    event.preventDefault();\r\n                    return;\r\n                }\r\n                break;\r\n            }\r\n        }\r\n\r\n        const isVideo = isVideoMessage(chatId, currentMessageId);\r\n        if (isVideo) {\r\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMediaShortcut', event });\r\n        }\r\n    };\r\n\r\n    onUpdateMessageContent = update => {\r\n        const { chat_id, message_id, new_content, old_content } = update;\r\n        const { chatId } = this.props;\r\n        const { currentMessageId, totalCount } = this.state;\r\n\r\n        if (chatId !== chat_id) return;\r\n\r\n        const message = MessageStore.get(chat_id, message_id);\r\n        if (!message) return;\r\n\r\n        loadMediaViewerContent([message]);\r\n\r\n        const addMessage = isMediaContent(new_content) && !isMediaContent(old_content);\r\n        if (addMessage) {\r\n            if (\r\n                this.history.length >= 2 &&\r\n                (this.firstSliceLoaded ||\r\n                    between(message_id, this.history[0].id, this.history[this.history.length - 1].id))\r\n            ) {\r\n                let inserted = false;\r\n                let history = [];\r\n                for (let i = 0; i < this.history.length; i++) {\r\n                    if (this.history[i].id > message_id) {\r\n                        history.push(this.history[i]);\r\n                    } else {\r\n                        if (!inserted) {\r\n                            inserted = true;\r\n                            history.push(message);\r\n                        }\r\n                        history.push(this.history[i]);\r\n                    }\r\n                }\r\n                this.history = history;\r\n            }\r\n\r\n            const index = this.history.findIndex(x => x.id === currentMessageId);\r\n            this.setState({\r\n                hasNextMedia: this.hasNextMedia(index),\r\n                hasPreviousMedia: this.hasPreviousMedia(index),\r\n                totalCount: totalCount + 1\r\n            });\r\n        }\r\n\r\n        const removeMessage = !isMediaContent(new_content) && isMediaContent(old_content);\r\n        if (removeMessage) {\r\n            let oldHistory = this.history;\r\n            this.history = this.history.filter(x => x.id !== message_id);\r\n\r\n            if (currentMessageId === message_id) {\r\n                const filterMap = new Map();\r\n                filterMap.set(message_id, message_id);\r\n\r\n                this.moveToNextMedia(oldHistory, filterMap);\r\n                this.setState({\r\n                    totalCount: Math.max(totalCount - 1, 0)\r\n                });\r\n            } else {\r\n                const index = this.history.findIndex(x => x.id === currentMessageId);\r\n                this.setState({\r\n                    hasNextMedia: this.hasNextMedia(index),\r\n                    hasPreviousMedia: this.hasPreviousMedia(index),\r\n                    totalCount: Math.max(totalCount - 1, 0)\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    onUpdateDeleteMessages = update => {\r\n        const { chat_id, message_ids, is_permanent } = update;\r\n        const { chatId } = this.props;\r\n        const { currentMessageId, totalCount } = this.state;\r\n\r\n        if (!is_permanent) return;\r\n        if (chatId !== chat_id) return;\r\n\r\n        const filterMap = message_ids.reduce((accumulator, currentId) => {\r\n            accumulator.set(currentId, currentId);\r\n            return accumulator;\r\n        }, new Map());\r\n\r\n        const oldHistory = this.history;\r\n        let deletedCount = oldHistory.length;\r\n\r\n        this.history = this.history.filter(x => !filterMap.has(x.id));\r\n        deletedCount -= this.history.length;\r\n\r\n        this.setState({ totalCount: Math.max(totalCount - deletedCount, 0) });\r\n\r\n        if (!this.history.length) {\r\n            setMediaViewerContent(null);\r\n            return;\r\n        }\r\n\r\n        if (filterMap.has(currentMessageId)) {\r\n            this.moveToNextMedia(oldHistory, filterMap);\r\n        }\r\n    };\r\n\r\n    onUpdateNewMessage = update => {\r\n        const { chatId } = this.props;\r\n        const { currentMessageId, totalCount } = this.state;\r\n\r\n        const { message } = update;\r\n        if (!message) return;\r\n        if (!isMediaContent(message.content)) return;\r\n\r\n        if (message.chat_id !== chatId) return;\r\n        if (!this.firstSliceLoaded) return;\r\n\r\n        this.history = [message].concat(this.history);\r\n        const index = this.history.findIndex(x => x.id === currentMessageId);\r\n\r\n        this.setState({\r\n            hasNextMedia: this.hasNextMedia(index),\r\n            hasPreviousMedia: this.hasPreviousMedia(index),\r\n            totalCount: totalCount + 1\r\n        });\r\n    };\r\n\r\n    getFilter = (chatId, messageId) => {\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return null;\r\n\r\n        const { content } = message;\r\n        if (!content) return null;\r\n\r\n        switch (content['@type']) {\r\n            case 'messageChatChangePhoto': {\r\n                return {\r\n                    '@type': 'searchMessagesFilterChatPhoto'\r\n                };\r\n            }\r\n            case 'messagePhoto': {\r\n                return {\r\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\r\n                };\r\n            }\r\n            case 'messageVideo': {\r\n                return {\r\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\r\n                };\r\n            }\r\n            default: {\r\n                return null;\r\n            }\r\n        }\r\n    };\r\n\r\n    loadHistory = async () => {\r\n        const { chatId, messageId } = this.props;\r\n\r\n        const filter = this.getFilter(chatId, messageId);\r\n\r\n        let result = {\r\n            '@type': 'messages',\r\n            messages: [],\r\n            total_count: 0\r\n        };\r\n        if (filter) {\r\n            result = await TdLibController.send({\r\n                '@type': 'searchChatMessages',\r\n                chat_id: chatId,\r\n                query: '',\r\n                sender_user_id: 0,\r\n                from_message_id: messageId,\r\n                offset: -MEDIA_SLICE_LIMIT,\r\n                limit: 2 * MEDIA_SLICE_LIMIT,\r\n                filter: filter\r\n            });\r\n        }\r\n\r\n        filterDuplicateMessages(result, this.history);\r\n        MessageStore.setItems(result.messages);\r\n\r\n        this.history = result.messages;\r\n        this.firstSliceLoaded = result.messages.length === 0;\r\n\r\n        const { currentMessageId } = this.state;\r\n        const index = this.history.findIndex(x => x.id === currentMessageId);\r\n\r\n        this.setState({\r\n            hasNextMedia: this.hasNextMedia(index),\r\n            hasPreviousMedia: this.hasPreviousMedia(index)\r\n        });\r\n\r\n        if (index === -1) {\r\n            this.history = [MessageStore.get(chatId, currentMessageId)];\r\n            preloadMediaViewerContent(0, this.history);\r\n        } else {\r\n            preloadMediaViewerContent(index, this.history);\r\n\r\n            const filter = this.getFilter(chatId, messageId);\r\n            if (!filter) return;\r\n\r\n            const maxCount = 1500;\r\n            let count = 0;\r\n            while (!this.firstSliceLoaded && count < maxCount) {\r\n                const result = await TdLibController.send({\r\n                    '@type': 'searchChatMessages',\r\n                    chat_id: chatId,\r\n                    query: '',\r\n                    sender_user_id: 0,\r\n                    from_message_id: this.history.length > 0 ? this.history[0].id : 0,\r\n                    offset: -99,\r\n                    limit: 99 + 1,\r\n                    filter: filter\r\n                });\r\n                count += result.messages.length;\r\n\r\n                filterDuplicateMessages(result, this.history);\r\n                MessageStore.setItems(result.messages);\r\n\r\n                this.history = result.messages.concat(this.history);\r\n                this.firstSliceLoaded = result.messages.length === 0;\r\n\r\n                const { currentMessageId } = this.state;\r\n                const index = this.history.findIndex(x => x.id === currentMessageId);\r\n\r\n                this.setState({\r\n                    hasNextMedia: this.hasNextMedia(index),\r\n                    hasPreviousMedia: this.hasPreviousMedia(index),\r\n                    firstSliceLoaded: this.firstSliceLoaded,\r\n                    totalCount: result.total_count\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    handleClose = () => {\r\n        setMediaViewerContent(null);\r\n\r\n        const { currentMessageId } = this.state;\r\n        const index = this.history.findIndex(x => x.id === currentMessageId);\r\n        if (index !== -1) {\r\n            cancelPreloadMediaViewerContent(index, this.history);\r\n        }\r\n    };\r\n\r\n    handleSave = () => {\r\n        const { chatId } = this.props;\r\n        const { currentMessageId } = this.state;\r\n\r\n        const message = MessageStore.get(chatId, currentMessageId);\r\n        if (!message) return;\r\n\r\n        const { content } = message;\r\n        if (!content) return;\r\n\r\n        let media = null;\r\n        switch (content['@type']) {\r\n            case 'messageAnimation': {\r\n                const { animation } = content;\r\n\r\n                media = animation;\r\n                break;\r\n            }\r\n            case 'messageChatChangePhoto': {\r\n                const { photo } = content;\r\n\r\n                media = photo;\r\n                break;\r\n            }\r\n            case 'messageDocument': {\r\n                const { document } = content;\r\n\r\n                media = document;\r\n                break;\r\n            }\r\n            case 'messagePhoto': {\r\n                const { photo } = content;\r\n\r\n                media = photo;\r\n                break;\r\n            }\r\n            case 'messageText': {\r\n                const { web_page } = content;\r\n                if (!web_page) return;\r\n\r\n                const { animation, document, photo, video } = web_page;\r\n\r\n                if (animation) {\r\n                    media = animation;\r\n                    break;\r\n                }\r\n\r\n                if (document) {\r\n                    media = document;\r\n                    break;\r\n                }\r\n\r\n                if (photo) {\r\n                    media = photo;\r\n                    break;\r\n                }\r\n\r\n                if (video) {\r\n                    media = video;\r\n                    break;\r\n                }\r\n                break;\r\n            }\r\n            case 'messageVideo': {\r\n                const { video } = content;\r\n\r\n                media = video;\r\n                break;\r\n            }\r\n        }\r\n\r\n        saveMedia(media, message);\r\n    };\r\n\r\n    handleForward = () => {\r\n        const { chatId } = this.props;\r\n        const { currentMessageId } = this.state;\r\n\r\n        forwardMessages(chatId, [currentMessageId]);\r\n    };\r\n\r\n    handleDelete = () => {\r\n        this.handleDialogOpen();\r\n    };\r\n\r\n    hasPreviousMedia = index => {\r\n        if (index === -1) return false;\r\n\r\n        const nextIndex = index + 1;\r\n        return nextIndex < this.history.length;\r\n    };\r\n\r\n    handlePrevious = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { currentMessageId } = this.state;\r\n        const index = this.history.findIndex(x => x.id === currentMessageId);\r\n        const nextIndex = index + 1;\r\n\r\n        return this.loadMedia(nextIndex, () => {\r\n            if (nextIndex === this.history.length - 1) {\r\n                this.loadPrevious();\r\n            }\r\n        });\r\n    };\r\n\r\n    loadPrevious = async () => {\r\n        const { chatId, messageId } = this.props;\r\n        const { currentMessageId } = this.state;\r\n\r\n        const filter = this.getFilter(chatId, messageId);\r\n\r\n        let result = {\r\n            '@type': 'messages',\r\n            messages: [],\r\n            total_count: 0\r\n        };\r\n        if (filter) {\r\n            result = await TdLibController.send({\r\n                '@type': 'searchChatMessages',\r\n                chat_id: chatId,\r\n                query: '',\r\n                sender_user_id: 0,\r\n                from_message_id: currentMessageId,\r\n                offset: 0,\r\n                limit: MEDIA_SLICE_LIMIT,\r\n                filter: filter\r\n            });\r\n        }\r\n\r\n        filterDuplicateMessages(result, this.history);\r\n        MessageStore.setItems(result.messages);\r\n\r\n        this.history = this.history.concat(result.messages);\r\n\r\n        const index = this.history.findIndex(x => x.id === currentMessageId);\r\n\r\n        this.setState({\r\n            hasNextMedia: this.hasNextMedia(index),\r\n            hasPreviousMedia: this.hasPreviousMedia(index),\r\n            totalCount: result.total_count\r\n        });\r\n    };\r\n\r\n    hasNextMedia = index => {\r\n        if (index === -1) return false;\r\n\r\n        const nextIndex = index - 1;\r\n        return nextIndex >= 0;\r\n    };\r\n\r\n    handleNext = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { currentMessageId } = this.state;\r\n        const index = this.history.findIndex(x => x.id === currentMessageId);\r\n        const nextIndex = index - 1;\r\n\r\n        return this.loadMedia(nextIndex, () => {\r\n            if (nextIndex === 0) {\r\n                this.loadNext();\r\n            }\r\n        });\r\n    };\r\n\r\n    loadNext = async () => {\r\n        const { chatId, messageId } = this.props;\r\n        const { currentMessageId } = this.state;\r\n\r\n        const filter = this.getFilter(chatId, messageId);\r\n\r\n        let result = {\r\n            '@type': 'messages',\r\n            messages: [],\r\n            total_count: 0\r\n        };\r\n        if (filter) {\r\n            result = await TdLibController.send({\r\n                '@type': 'searchChatMessages',\r\n                chat_id: chatId,\r\n                query: '',\r\n                sender_user_id: 0,\r\n                from_message_id: currentMessageId,\r\n                offset: -MEDIA_SLICE_LIMIT,\r\n                limit: MEDIA_SLICE_LIMIT + 1,\r\n                filter: filter\r\n            });\r\n        }\r\n\r\n        filterDuplicateMessages(result, this.history);\r\n        MessageStore.setItems(result.messages);\r\n\r\n        this.firstSliceLoaded = result.messages.length === 0;\r\n        this.history = result.messages.concat(this.history);\r\n\r\n        const index = this.history.findIndex(x => x.id === currentMessageId);\r\n\r\n        this.setState({\r\n            hasNextMedia: this.hasNextMedia(index),\r\n            hasPreviousMedia: this.hasPreviousMedia(index),\r\n            firstSliceLoaded: this.firstSliceLoaded,\r\n            totalCount: result.total_count\r\n        });\r\n    };\r\n\r\n    loadMedia = (index, callback) => {\r\n        if (index < 0) return false;\r\n        if (index >= this.history.length) return false;\r\n\r\n        this.setState(\r\n            {\r\n                currentMessageId: this.history[index].id,\r\n                hasNextMedia: this.hasNextMedia(index),\r\n                hasPreviousMedia: this.hasPreviousMedia(index)\r\n            },\r\n            callback\r\n        );\r\n\r\n        preloadMediaViewerContent(index, this.history);\r\n        return true;\r\n    };\r\n\r\n    moveToNextMedia = (oldHistory, filterMap) => {\r\n        const { currentMessageId } = this.state;\r\n\r\n        const index = oldHistory.findIndex(x => x.id === currentMessageId);\r\n        let nextId = 0;\r\n        for (let i = index - 1; i >= 0; i--) {\r\n            if (filterMap && !filterMap.has(oldHistory[i].id)) {\r\n                nextId = oldHistory[i].id;\r\n                break;\r\n            }\r\n        }\r\n        if (!nextId) {\r\n            for (let i = index + 1; i < oldHistory.length; i++) {\r\n                if (filterMap && !filterMap.has(oldHistory[i].id)) {\r\n                    nextId = oldHistory[i].id;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!nextId) return;\r\n\r\n        const nextIndex = this.history.findIndex(x => x.id === nextId);\r\n\r\n        return this.loadMedia(nextIndex, () => {\r\n            if (nextIndex === 0) {\r\n                this.loadNext();\r\n            } else if (nextIndex === this.history.length - 1) {\r\n                this.loadPrevious();\r\n            }\r\n        });\r\n    };\r\n\r\n    handleDialogOpen = () => {\r\n        this.setState({ deleteConfirmationOpened: true });\r\n    };\r\n\r\n    handleDialogClose = () => {\r\n        this.setState({ deleteConfirmationOpened: false });\r\n    };\r\n\r\n    handleDone = () => {\r\n        this.setState({ deleteConfirmationOpened: false });\r\n\r\n        const { chatId } = this.props;\r\n        const { currentMessageId, deleteForAll } = this.state;\r\n\r\n        const message = MessageStore.get(chatId, currentMessageId);\r\n        if (!message) return;\r\n\r\n        const { can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\r\n        const canBeDeleted = can_be_deleted_only_for_self || can_be_deleted_for_all_users;\r\n        if (!canBeDeleted) return;\r\n\r\n        TdLibController.send({\r\n            '@type': 'deleteMessages',\r\n            chat_id: chatId,\r\n            message_ids: [currentMessageId],\r\n            revoke: can_be_deleted_for_all_users && deleteForAll\r\n        });\r\n    };\r\n\r\n    handleChangeDeleteForAll = event => {\r\n        this.setState({ deleteForAll: event.target.checked });\r\n    };\r\n\r\n    handleInvertColors = () => {\r\n        const { background } = this.state;\r\n\r\n        let nextBackground = 'media-viewer-default';\r\n        switch (background) {\r\n            case 'media-viewer-default': {\r\n                nextBackground = 'media-viewer-dark';\r\n                break;\r\n            }\r\n            case 'media-viewer-dark': {\r\n                nextBackground = 'media-viewer-light';\r\n                break;\r\n            }\r\n            case 'media-viewer-light': {\r\n                nextBackground = 'media-viewer-default';\r\n                break;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            background: nextBackground\r\n        });\r\n    };\r\n\r\n    canBeForwarded = (chatId, messageId) => {\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return false;\r\n\r\n        const { can_be_forwarded, content } = message;\r\n        if (!content) return false;\r\n\r\n        switch (content['@type']) {\r\n            case 'messageChatChangePhoto': {\r\n                return true;\r\n            }\r\n            default: {\r\n                return can_be_forwarded;\r\n            }\r\n        }\r\n    };\r\n\r\n    handleWrapperMouseDown = event => {\r\n        this.mouseDownTarget = event.currentTarget;\r\n    }\r\n\r\n    handleWrapperClick = event => {\r\n        const { mouseDownTarget } = this;\r\n        this.mouseDownTarget = null;\r\n\r\n        if (event.currentTarget !== mouseDownTarget) return;\r\n\r\n        this.handleClose();\r\n    };\r\n\r\n    render() {\r\n        const { chatId, t } = this.props;\r\n        const {\r\n            background,\r\n            currentMessageId,\r\n            deleteConfirmationOpened,\r\n            deleteForAll,\r\n            firstSliceLoaded,\r\n            hasNextMedia,\r\n            hasPreviousMedia,\r\n            totalCount\r\n        } = this.state;\r\n\r\n        let index = -1;\r\n        if (totalCount && firstSliceLoaded) {\r\n            index = this.history.findIndex(x => x.id === currentMessageId);\r\n        }\r\n        const maxCount = Math.max(this.history.length, totalCount);\r\n\r\n        const message = MessageStore.get(chatId, currentMessageId);\r\n        const { can_be_deleted_for_all_users } = message;\r\n\r\n        const canBeDeleted = canMessageBeDeleted(chatId, currentMessageId);\r\n        const canBeForwarded = this.canBeForwarded(chatId, currentMessageId);\r\n\r\n        let deleteConfirmationContent = '';\r\n        if (isVideoMessage(chatId, currentMessageId)) {\r\n            deleteConfirmationContent = t('AreYouSureDeleteVideo');\r\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\r\n            deleteConfirmationContent = t('AreYouSureDeleteGIF');\r\n        } else {\r\n            deleteConfirmationContent = t('AreYouSureDeletePhoto');\r\n        }\r\n        const deleteConfirmation = deleteConfirmationOpened ? (\r\n            <Dialog\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                open={deleteConfirmationOpened}\r\n                onClose={this.handleDialogClose}\r\n                aria-labelledby='form-dialog-title'>\r\n                <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>{deleteConfirmationContent}</DialogContentText>\r\n                    {can_be_deleted_for_all_users && (\r\n                        <FormControlLabel\r\n                            label={t('DeleteForAll')}\r\n                            control={\r\n                                <Checkbox color='primary' value='deleteAll' onChange={this.handleChangeDeleteForAll} />\r\n                            }\r\n                            checked={deleteForAll}\r\n                        />\r\n                    )}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.handleDialogClose} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    <Button onClick={this.handleDone} color='primary'>\r\n                        {t('Ok')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        ) : null;\r\n\r\n        const [width, height, file, mimeType] = getMediaFile(chatId, currentMessageId, PHOTO_BIG_SIZE);\r\n\r\n        const fileId = file ? file.id : 0;\r\n        let title = t('AttachPhoto');\r\n        if (isEmbedMessage(chatId, currentMessageId)) {\r\n            title = '';\r\n        } else if (isVideoMessage(chatId, currentMessageId)) {\r\n            title = t('AttachVideo');\r\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\r\n            title = t('AttachGif');\r\n        }\r\n\r\n        return (\r\n            <div className={classNames('media-viewer', background)}>\r\n                <div className='media-viewer-footer'>\r\n                    <MediaInfo chatId={chatId} messageId={currentMessageId} />\r\n                    <MediaViewerFooterText\r\n                        title={title}\r\n                        subtitle={maxCount && index >= 0 ? `${maxCount - index} of ${maxCount}` : null}\r\n                    />\r\n                    <MediaViewerDownloadButton title={t('Save')} fileId={fileId} disabled={isEmbedMessage(chatId, currentMessageId)} onClick={this.handleSave} />\r\n                    <MediaViewerFooterButton\r\n                        title={t('Forward')}\r\n                        disabled={!canBeForwarded}\r\n                        onClick={this.handleForward}>\r\n                        <ReplyIcon />\r\n                    </MediaViewerFooterButton>\r\n                    <MediaViewerFooterButton title={t('Delete')} disabled={!canBeDeleted} onClick={this.handleDelete}>\r\n                        <DeleteIcon />\r\n                    </MediaViewerFooterButton>\r\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\r\n                        <CloseIcon />\r\n                    </MediaViewerFooterButton>\r\n                </div>\r\n                <div className='media-viewer-wrapper' onMouseDown={this.handleWrapperMouseDown} onClick={this.handleWrapperClick}>\r\n                    <div className='media-viewer-left-column'>\r\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\r\n                            <NavigateBeforeIcon />\r\n                        </MediaViewerButton>\r\n                    </div>\r\n\r\n                    <div className='media-viewer-content-column'>\r\n                        <MediaViewerContent\r\n                            chatId={chatId}\r\n                            messageId={currentMessageId}\r\n                            size={PHOTO_BIG_SIZE}\r\n                            onClick={this.handlePrevious}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className='media-viewer-right-column'>\r\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\r\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\r\n                        </MediaViewerButton>\r\n                    </div>\r\n                </div>\r\n                {deleteConfirmation}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMediaViewer.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired\r\n};\r\n\r\nexport default withTranslation()(MediaViewer);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport FileProgress from './FileProgress';\r\nimport { getChatUserId } from '../../Utils/Chat';\r\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport './ProfileMediaViewer.css';\r\n\r\nclass ProfileMediaViewerContent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { chatId, photo } = this.props;\r\n\r\n        let { big: file } = photo;\r\n        file = FileStore.get(file.id) || file;\r\n\r\n        this.state = {\r\n            prevChatId: chatId,\r\n            prevPhoto: photo,\r\n            width: PROFILE_PHOTO_BIG_SIZE,\r\n            height: PROFILE_PHOTO_BIG_SIZE,\r\n            file: file\r\n        };\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { chatId, photo } = props;\r\n\r\n        if (chatId !== state.prevChatId || photo !== state.prevPhoto) {\r\n            return {\r\n                prevChatId: chatId,\r\n                prevPhoto: photo,\r\n                width: PROFILE_PHOTO_BIG_SIZE,\r\n                height: PROFILE_PHOTO_BIG_SIZE,\r\n                file: photo.big\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\r\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\r\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateUserBlob);\r\n    }\r\n\r\n    onClientUpdateChatBlob = update => {\r\n        const { chatId, photo } = this.props;\r\n\r\n        if (chatId === update.chatId && photo.big.id === update.fileId) {\r\n            const file = FileStore.get(update.fileId) || this.state.file;\r\n            this.setState({\r\n                file\r\n            });\r\n        }\r\n    };\r\n\r\n    onClientUpdateUserBlob = update => {\r\n        const { chatId, photo } = this.props;\r\n        const userId = getChatUserId(chatId);\r\n\r\n        if (userId === update.userId && photo.big.id === update.fileId) {\r\n            const file = FileStore.get(update.fileId) || this.state.file;\r\n            this.setState({\r\n                file\r\n            });\r\n        }\r\n    };\r\n\r\n    handleContentClick = event => {\r\n        if (event) event.stopPropagation();\r\n\r\n        const { onClose } = this.props;\r\n\r\n        onClose && onClose(event);\r\n    };\r\n\r\n    handlePhotoClick = event => {\r\n        if (event) event.stopPropagation();\r\n\r\n        const { onPrevious } = this.props;\r\n\r\n        onPrevious && onPrevious(event);\r\n    };\r\n\r\n    render() {\r\n        const { file } = this.state;\r\n        if (!file) return null;\r\n\r\n        const blob = FileStore.getBlob(file.id) || file.blob;\r\n        const src = FileStore.getBlobUrl(blob);\r\n\r\n        return (\r\n            <div className='media-viewer-content' onClick={this.handleContentClick} >\r\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handlePhotoClick}/>\r\n                <FileProgress file={file} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nProfileMediaViewerContent.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    photo: PropTypes.object.isRequired,\r\n\r\n    onClose: PropTypes.func,\r\n    onPrevious: PropTypes.func\r\n};\r\n\r\nexport default ProfileMediaViewerContent;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ChatTile from './ChatTile';\r\nimport MessageAuthor from '../Message/MessageAuthor';\r\nimport './MediaInfo.css';\r\n\r\nclass ProfileMediaInfo extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const { chatId, date } = this.props;\r\n\r\n        return (\r\n            <div className='media-info'>\r\n                <div className='media-info-wrapper'>\r\n                    <ChatTile chatId={chatId} showSavedMessages={false} />\r\n                    <div className='media-info-content'>\r\n                        <div className='media-info-row'>\r\n                            <MessageAuthor chatId={chatId} />\r\n                        </div>\r\n                        {date && (\r\n                            <div className='media-info-row meta'>\r\n                                <span>{date}</span>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nProfileMediaInfo.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    date: PropTypes.string\r\n};\r\n\r\nexport default ProfileMediaInfo;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\r\nimport ReplyIcon from '../../Assets/Icons/Share';\r\nimport DeleteIcon from '../../Assets/Icons/Delete';\r\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\r\nimport MediaViewerButton from './MediaViewerButton';\r\nimport MediaViewerFooterText from './MediaViewerFooterText';\r\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\r\nimport ProfileMediaViewerContent from './ProfileMediaViewerContent';\r\nimport ProfileMediaInfo from '../Tile/ProfileMediaInfo';\r\nimport { forward, setProfileMediaViewerContent } from '../../Actions/Client';\r\nimport { getPhotoFromChat, getChatUserId, isPrivateChat, isMeChat } from '../../Utils/Chat';\r\nimport { getProfilePhotoDateHint, getProfilePhoto } from '../../Utils/User';\r\nimport { loadProfileMediaViewerContent, preloadProfileMediaViewerContent, saveOrDownload } from '../../Utils/File';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './ProfileMediaViewer.css';\r\n\r\nclass ProfileMediaViewer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.history = [];\r\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\r\n\r\n        const { chatId, fileId } = this.props;\r\n\r\n        this.state = {\r\n            prevChatId: chatId,\r\n            prevFileId: fileId,\r\n            currentIndex: 0,\r\n            hasNextMedia: false,\r\n            hasPreviousMedia: false,\r\n            deleteConfirmationOpened: false\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, messageId } = this.props;\r\n        const {\r\n            currentFileId,\r\n            hasPreviousMedia,\r\n            hasNextMedia,\r\n            firstSliceLoaded,\r\n            totalCount,\r\n            deleteConfirmationOpened\r\n        } = this.state;\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.messageId !== messageId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.currentFileId !== currentFileId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.hasNextMedia !== hasNextMedia) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.totalCount !== totalCount) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { chatId } = this.props;\r\n        const photo = getPhotoFromChat(chatId);\r\n        loadProfileMediaViewerContent(chatId, [photo]);\r\n\r\n        this.loadHistory(photo);\r\n\r\n        KeyboardManager.add(this.keyboardHandler);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        KeyboardManager.remove(this.keyboardHandler);\r\n    }\r\n\r\n    handleKeyDown = event => {\r\n        if (modalManager.modals.length > 0) {\r\n            return;\r\n        }\r\n\r\n        if (event.isComposing) {\r\n            return;\r\n        }\r\n\r\n        switch (event.key) {\r\n            case 'Escape': {\r\n                this.handleClose();\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                return;\r\n            }\r\n            case 'ArrowLeft': {\r\n                this.handleNext();\r\n                event.stopPropagation();\r\n                event.preventDefault();\r\n                return;\r\n            }\r\n            case 'ArrowRight': {\r\n                this.handlePrevious();\r\n                event.stopPropagation();\r\n                event.preventDefault();\r\n                return;\r\n            }\r\n        }\r\n    };\r\n\r\n    loadHistory = async () => {\r\n        const { chatId } = this.props;\r\n\r\n        if (!isPrivateChat(chatId)) return;\r\n\r\n        const result = await TdLibController.send({\r\n            '@type': 'getUserProfilePhotos',\r\n            user_id: getChatUserId(chatId),\r\n            offset: 0,\r\n            limit: 100\r\n        });\r\n\r\n        this.history = result.photos;\r\n        this.firstSliceLoaded = result.photos.length === 0;\r\n\r\n        const index = 0;\r\n\r\n        this.setState({\r\n            currentIndex: index,\r\n            hasNextMedia: this.hasNextMedia(index),\r\n            hasPreviousMedia: this.hasPreviousMedia(index),\r\n            totalCount: result.total_count\r\n        });\r\n\r\n        preloadProfileMediaViewerContent(chatId, index, this.history);\r\n    };\r\n\r\n    handleClose = () => {\r\n        setProfileMediaViewerContent(null);\r\n    };\r\n\r\n    handleSave = () => {\r\n        const { chatId } = this.props;\r\n        const { currentIndex, totalCount } = this.state;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        let index = -1;\r\n        if (totalCount) {\r\n            index = currentIndex;\r\n        }\r\n\r\n        const photo =\r\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\r\n        if (!photo) return;\r\n        if (!photo.big) return;\r\n\r\n        const file = FileStore.get(photo.big.id) || photo.big;\r\n        if (!file) return;\r\n\r\n        saveOrDownload(file, file.id + '.jpg', chat, () => FileStore.updateChatPhotoBlob(chatId, file.id));\r\n    };\r\n\r\n    handleForward = () => {\r\n        const { chatId } = this.props;\r\n        const { currentIndex, totalCount } = this.state;\r\n\r\n        let index = -1;\r\n        if (totalCount) {\r\n            index = currentIndex;\r\n        }\r\n\r\n        let inputFile = null;\r\n        let inputMessagePhoto = null;\r\n        const inHistory = this.history && index >= 0 && index < this.history.length;\r\n        if (inHistory) {\r\n            const photo = getProfilePhoto(this.history[index]);\r\n            if (!photo) return;\r\n\r\n            let { big: file } = photo;\r\n            if (!file) return;\r\n\r\n            inputFile = {\r\n                '@type': 'inputFileId',\r\n                id: file.id\r\n            };\r\n        } else {\r\n            const chatPhoto = getPhotoFromChat(chatId);\r\n            if (!chatPhoto) return;\r\n\r\n            const { big: file } = chatPhoto;\r\n            if (!file) return;\r\n\r\n            const blob = FileStore.getBlob(file.id);\r\n            if (!blob) return;\r\n\r\n            inputFile = {\r\n                '@type': 'inputFileBlob',\r\n                data: blob,\r\n                name: ''\r\n            };\r\n        }\r\n\r\n        if (!inputFile) return;\r\n\r\n        const inputMessageContent = {\r\n            '@type': 'inputMessagePhoto',\r\n            photo: inputFile,\r\n            thumbnail: null,\r\n            added_sticker_file_ids: [],\r\n            width: PROFILE_PHOTO_BIG_SIZE,\r\n            height: PROFILE_PHOTO_BIG_SIZE,\r\n            caption: {\r\n                '@type': 'formattedText',\r\n                text: '',\r\n                entities: null\r\n            },\r\n            ttl: 0\r\n        };\r\n\r\n        forward(inputMessageContent);\r\n    };\r\n\r\n    handleDelete = async () => {\r\n        const { chatId } = this.props;\r\n        const {\r\n            currentIndex,\r\n            totalCount,\r\n            hasNextMedia,\r\n            hasPreviousMedia\r\n        } = this.state;\r\n\r\n        let index = -1;\r\n        if (totalCount) {\r\n            index = currentIndex;\r\n        }\r\n\r\n        const photo = index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\r\n        if (!photo) return;\r\n\r\n        const { id } = photo;\r\n        if (!id) return;\r\n\r\n        await TdLibController.send({\r\n            '@type': 'deleteProfilePhoto',\r\n            profile_photo_id: id\r\n        });\r\n\r\n        this.history.splice(index, 1);\r\n        if (!this.history.length) {\r\n            this.handleClose();\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            totalCount: totalCount - 1\r\n        });\r\n\r\n        if (hasNextMedia) {\r\n            const nextIndex = currentIndex - 1;\r\n\r\n            return this.loadMedia(nextIndex, { totalCount: totalCount - 1 }, () => {\r\n                if (nextIndex === 0) {\r\n                    this.loadNext();\r\n                }\r\n            });\r\n        }\r\n\r\n        if (hasPreviousMedia) {\r\n            const nextIndex = currentIndex;\r\n\r\n            return this.loadMedia(nextIndex, { totalCount: totalCount - 1 }, () => {\r\n                if (nextIndex === this.history.length - 1) {\r\n                    this.loadPrevious();\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    hasPreviousMedia = index => {\r\n        if (index === -1) return false;\r\n\r\n        const nextIndex = index + 1;\r\n        return nextIndex < this.history.length;\r\n    };\r\n\r\n    handlePrevious = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { currentIndex } = this.state;\r\n        const nextIndex = currentIndex + 1;\r\n\r\n        return this.loadMedia(nextIndex, { }, () => {\r\n            if (nextIndex === this.history.length - 1) {\r\n                this.loadPrevious();\r\n            }\r\n        });\r\n    };\r\n\r\n    loadPrevious = async () => {\r\n        return;\r\n    };\r\n\r\n    hasNextMedia = index => {\r\n        if (index === -1) return false;\r\n\r\n        const nextIndex = index - 1;\r\n        return nextIndex >= 0;\r\n    };\r\n\r\n    handleNext = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { currentIndex } = this.state;\r\n        const nextIndex = currentIndex - 1;\r\n\r\n        return this.loadMedia(nextIndex, { }, () => {\r\n            if (nextIndex === 0) {\r\n                this.loadNext();\r\n            }\r\n        });\r\n    };\r\n\r\n    loadNext = async () => {\r\n        return;\r\n    };\r\n\r\n    loadMedia = (index, obj, callback) => {\r\n        if (index < 0) return false;\r\n        if (index >= this.history.length) return false;\r\n\r\n        this.setState(\r\n            {\r\n                currentIndex: index,\r\n                ...obj,\r\n                hasNextMedia: this.hasNextMedia(index),\r\n                hasPreviousMedia: this.hasPreviousMedia(index)\r\n            },\r\n            callback\r\n        );\r\n\r\n        const { chatId } = this.props;\r\n\r\n        preloadProfileMediaViewerContent(chatId, index, this.history);\r\n        return true;\r\n    };\r\n\r\n    render() {\r\n        const { chatId, t } = this.props;\r\n        const {\r\n            currentIndex,\r\n            hasNextMedia,\r\n            hasPreviousMedia,\r\n            totalCount,\r\n        } = this.state;\r\n\r\n        let index = -1;\r\n        if (totalCount) {\r\n            index = currentIndex;\r\n        }\r\n\r\n        const inHistory = index >= 0 && index < this.history.length;\r\n        const profilePhoto = inHistory ? getProfilePhoto(this.history[index]) : null;\r\n        const profilePhotoBig = profilePhoto ? profilePhoto.big : null;\r\n        const profilePhotoBlob = profilePhotoBig ? profilePhotoBig.blob || FileStore.getBlob(profilePhotoBig.id) : null;\r\n        const photo = profilePhotoBlob ? profilePhoto : getPhotoFromChat(chatId);\r\n        const userProfilePhoto = inHistory ? this.history[index] : null;\r\n        const { big: file } = photo;\r\n        const isMe = isMeChat(chatId);\r\n\r\n        return (\r\n            <div className={classNames('media-viewer', 'media-viewer-default')}>\r\n                <div className='media-viewer-footer'>\r\n                    <ProfileMediaInfo chatId={chatId} date={getProfilePhotoDateHint(userProfilePhoto)} />\r\n                    <MediaViewerFooterText\r\n                        title={t('AttachPhoto')}\r\n                        subtitle={totalCount && index >= 0 ? `${index + 1} of ${totalCount}` : null}\r\n                    />\r\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\r\n                    <MediaViewerDownloadButton title={t('Forward')} fileId={file.id} onClick={this.handleForward}>\r\n                        <ReplyIcon />\r\n                    </MediaViewerDownloadButton>\r\n                    {isMe && (\r\n                        <MediaViewerFooterButton title={t('Delete')} onClick={this.handleDelete}>\r\n                            <DeleteIcon />\r\n                        </MediaViewerFooterButton>\r\n                    )}\r\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\r\n                        <CloseIcon />\r\n                    </MediaViewerFooterButton>\r\n                </div>\r\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\r\n                    <div className='media-viewer-left-column'>\r\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\r\n                            <NavigateBeforeIcon />\r\n                        </MediaViewerButton>\r\n                    </div>\r\n\r\n                    <div className='media-viewer-content-column'>\r\n                        <ProfileMediaViewerContent chatId={chatId} photo={photo} onClose={this.handleClose} onPrevious={this.handlePrevious}/>\r\n                    </div>\r\n\r\n                    <div className='media-viewer-right-column'>\r\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\r\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\r\n                        </MediaViewerButton>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nProfileMediaViewer.propTypes = {\r\n    chatId: PropTypes.number.isRequired\r\n};\r\n\r\nexport default withTranslation()(ProfileMediaViewer);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport classNames from 'classnames';\r\nimport { compose } from '../Utils/HOC';\r\nimport withLanguage from '../Language';\r\nimport withSnackbarNotifications from '../Notifications';\r\nimport PipPlayer from './Player/PipPlayer';\r\nimport ForwardDialog from './Popup/ForwardDialog';\r\nimport ChatInfo from './ColumnRight/ChatInfo';\r\nimport Dialogs from './ColumnLeft/Dialogs';\r\nimport DialogDetails from './ColumnMiddle/DialogDetails';\r\nimport InstantViewer from './InstantView/InstantViewer';\r\nimport MediaViewer from './Viewer/MediaViewer';\r\nimport ProfileMediaViewer from './Viewer/ProfileMediaViewer';\r\nimport { highlightMessage } from '../Actions/Client';\r\nimport AppStore from '../Stores/ApplicationStore';\r\nimport ChatStore from '../Stores/ChatStore';\r\nimport InstantViewStore from '../Stores/InstantViewStore';\r\nimport UserStore from '../Stores/UserStore';\r\nimport PlayerStore from '../Stores/PlayerStore';\r\nimport TdLibController from '../Controllers/TdLibController';\r\nimport '../TelegramApp.css';\r\n\r\nclass MainPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.dialogDetailsRef = React.createRef();\r\n\r\n        const { isChatDetailsVisible, mediaViewerContent, profileMediaViewerContent, isSmallWidth } = AppStore;\r\n\r\n        this.state = {\r\n            isChatDetailsVisible,\r\n            mediaViewerContent,\r\n            profileMediaViewerContent,\r\n            isSmallWidth,\r\n            forwardInfo: null,\r\n            instantViewContent: null,\r\n            videoInfo: null\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        UserStore.on('clientUpdateOpenUser', this.onClientUpdateOpenUser);\r\n        ChatStore.on('clientUpdateOpenChat', this.onClientUpdateOpenChat);\r\n\r\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\r\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\r\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\r\n        AppStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\r\n        AppStore.on('clientUpdateForward', this.onClientUpdateForward);\r\n        InstantViewStore.on('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\r\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        UserStore.off('clientUpdateOpenUser', this.onClientUpdateOpenUser);\r\n        ChatStore.off('clientUpdateOpenChat', this.onClientUpdateOpenChat);\r\n\r\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\r\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\r\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\r\n        AppStore.off('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\r\n        AppStore.off('clientUpdateForward', this.onClientUpdateForward);\r\n        InstantViewStore.off('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\r\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\r\n    }\r\n\r\n    onClientUpdatePictureInPicture = update => {\r\n        const { videoInfo } = update;\r\n\r\n        this.setState({\r\n            videoInfo\r\n        });\r\n    };\r\n\r\n    onClientUpdatePageWidth = update => {\r\n        const { isSmallWidth } = update;\r\n\r\n        this.setState({ isSmallWidth });\r\n    };\r\n\r\n    onClientUpdateInstantViewContent = update => {\r\n        const { content } = update;\r\n\r\n        this.setState({\r\n            instantViewContent: content\r\n        });\r\n    };\r\n\r\n    onClientUpdateOpenChat = update => {\r\n        const { chatId, messageId, popup } = update;\r\n\r\n        this.handleSelectChat(chatId, messageId, popup);\r\n    };\r\n\r\n    onClientUpdateOpenUser = update => {\r\n        const { userId, popup } = update;\r\n\r\n        this.handleSelectUser(userId, popup);\r\n    };\r\n\r\n    onClientUpdateChatDetailsVisibility = update => {\r\n        const { isChatDetailsVisible } = AppStore;\r\n\r\n        this.setState({ isChatDetailsVisible });\r\n    };\r\n\r\n    onClientUpdateMediaViewerContent = update => {\r\n        const { mediaViewerContent } = AppStore;\r\n\r\n        this.setState({ mediaViewerContent });\r\n    };\r\n\r\n    onClientUpdateProfileMediaViewerContent = update => {\r\n        const { profileMediaViewerContent } = AppStore;\r\n\r\n        this.setState({ profileMediaViewerContent });\r\n    };\r\n\r\n    onClientUpdateForward = update => {\r\n        const { info } = update;\r\n\r\n        this.setState({ forwardInfo: info });\r\n    };\r\n\r\n    handleSelectChat = (chatId, messageId = null, popup = false) => {\r\n        const currentChatId = AppStore.getChatId();\r\n        const currentDialogChatId = AppStore.dialogChatId;\r\n        const currentMessageId = AppStore.getMessageId();\r\n\r\n        if (popup) {\r\n            if (currentDialogChatId !== chatId) {\r\n                TdLibController.clientUpdate({\r\n                    '@type': 'clientUpdateDialogChatId',\r\n                    chatId\r\n                });\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        if (currentChatId === chatId && messageId && currentMessageId === messageId) {\r\n            this.dialogDetailsRef.current.scrollToMessage();\r\n            if (messageId) {\r\n                highlightMessage(chatId, messageId);\r\n            }\r\n        } else if (currentChatId === chatId && !messageId) {\r\n            this.dialogDetailsRef.current.scrollToStart();\r\n        } else {\r\n            TdLibController.setChatId(chatId, messageId);\r\n        }\r\n    };\r\n\r\n    handleSelectUser = async (userId, popup) => {\r\n        if (!userId) return;\r\n\r\n        const chat = await TdLibController.send({\r\n            '@type': 'createPrivateChat',\r\n            user_id: userId,\r\n            force: true\r\n        });\r\n\r\n        this.handleSelectChat(chat.id, null, popup);\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            instantViewContent,\r\n            isChatDetailsVisible,\r\n            mediaViewerContent,\r\n            profileMediaViewerContent,\r\n            forwardInfo,\r\n            videoInfo,\r\n            isSmallWidth\r\n        } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <div\r\n                    className={classNames('page', {\r\n                        'page-small': isSmallWidth,\r\n                        'page-third-column': isChatDetailsVisible\r\n                    })}>\r\n                    <Dialogs />\r\n                    <DialogDetails ref={this.dialogDetailsRef} />\r\n                    {isChatDetailsVisible && <ChatInfo />}\r\n                </div>\r\n                {instantViewContent && <InstantViewer {...instantViewContent} />}\r\n                {mediaViewerContent && <MediaViewer {...mediaViewerContent} />}\r\n                {profileMediaViewerContent && <ProfileMediaViewer {...profileMediaViewerContent} />}\r\n                {forwardInfo && <ForwardDialog {...forwardInfo} />}\r\n                {videoInfo && <PipPlayer {...videoInfo}/>}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nMainPage.propTypes = {};\r\n\r\nconst enhance = compose(\r\n    withLanguage,\r\n    withSnackbarNotifications\r\n);\r\n\r\nexport default enhance(MainPage);\r\n"],"sourceRoot":""}